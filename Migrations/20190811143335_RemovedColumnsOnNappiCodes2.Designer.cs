// <auto-generated />
using System;
using MedicalEngineMicroService.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicalEngineMicroService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190811143335_RemovedColumnsOnNappiCodes2")]
    partial class RemovedColumnsOnNappiCodes2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Lookups.FileStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedDescription")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("FileStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 713, DateTimeKind.Local).AddTicks(7030),
                            Description = "Successfully uploaded the file",
                            IsDeleted = false,
                            Name = "Uploaded",
                            NormalizedDescription = "SUCCESSFULLYUPLOADEDTHEFILE",
                            NormalizedName = "UPLOADED",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 715, DateTimeKind.Local).AddTicks(1728)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 715, DateTimeKind.Local).AddTicks(2471),
                            Description = "The manager rejected the file",
                            IsDeleted = false,
                            Name = "Rejected",
                            NormalizedDescription = "THEMANAGERREJECTEDTHEFILE",
                            NormalizedName = "REJECTED",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 715, DateTimeKind.Local).AddTicks(2478)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 715, DateTimeKind.Local).AddTicks(2486),
                            Description = "Ready to submit to the Fund",
                            IsDeleted = false,
                            Name = "Approved",
                            NormalizedDescription = "READYTOSUBMITTOTHEFUND",
                            NormalizedName = "APPROVED",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 715, DateTimeKind.Local).AddTicks(2490)
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 715, DateTimeKind.Local).AddTicks(2494),
                            Description = "File successfully submitted to the Fund",
                            IsDeleted = false,
                            Name = "Submitted",
                            NormalizedDescription = "FILESUCCESSFULLYSUBMITTEDTOTHEFUND",
                            NormalizedName = "SUBMITTED",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 715, DateTimeKind.Local).AddTicks(2494)
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 715, DateTimeKind.Local).AddTicks(2498),
                            Description = "Not all invoices were paid",
                            IsDeleted = false,
                            Name = "Partially Paid",
                            NormalizedDescription = "NOTALLINVOICESWEREPAID",
                            NormalizedName = "PARTIALLY PAID",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 715, DateTimeKind.Local).AddTicks(2498)
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 715, DateTimeKind.Local).AddTicks(2501),
                            Description = "All invoices were successfully paid",
                            IsDeleted = false,
                            Name = "Paid",
                            NormalizedDescription = "ALLINVOICESWERESUCCESSFULLYPAID",
                            NormalizedName = "PAID",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 715, DateTimeKind.Local).AddTicks(2501)
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 715, DateTimeKind.Local).AddTicks(2505),
                            Description = "File Overdue",
                            IsDeleted = false,
                            Name = "Overdue",
                            NormalizedDescription = "FILEOVERDUE",
                            NormalizedName = "OVERDUE",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 715, DateTimeKind.Local).AddTicks(2505)
                        });
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Lookups.InvoiceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedDescription")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("InvoiceStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 719, DateTimeKind.Local).AddTicks(563),
                            Description = "Pending",
                            IsDeleted = false,
                            Name = "Pending",
                            NormalizedDescription = "PENDING",
                            NormalizedName = "PENDING",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 719, DateTimeKind.Local).AddTicks(579)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 719, DateTimeKind.Local).AddTicks(609),
                            Description = "Approved",
                            IsDeleted = false,
                            Name = "Approved",
                            NormalizedDescription = "APPROVED",
                            NormalizedName = "APPROVED",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 719, DateTimeKind.Local).AddTicks(609)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 719, DateTimeKind.Local).AddTicks(613),
                            Description = "Payment rejected",
                            IsDeleted = false,
                            Name = "Rejected",
                            NormalizedDescription = "PAYMENTREJECTED",
                            NormalizedName = "REJECTED",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 719, DateTimeKind.Local).AddTicks(617)
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 719, DateTimeKind.Local).AddTicks(621),
                            Description = "Invoice submitted to the fund",
                            IsDeleted = false,
                            Name = "Submitted",
                            NormalizedDescription = "INVOICESUBMITTEDTOTHEFUND",
                            NormalizedName = "SUBMITTED",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 719, DateTimeKind.Local).AddTicks(621)
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 719, DateTimeKind.Local).AddTicks(625),
                            Description = "Invoice paid",
                            IsDeleted = false,
                            Name = "Paid",
                            NormalizedDescription = "INVOICEPAID",
                            NormalizedName = "PAID",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 719, DateTimeKind.Local).AddTicks(625)
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 719, DateTimeKind.Local).AddTicks(629),
                            Description = "Invoice Overdue",
                            IsDeleted = false,
                            Name = "Overdue",
                            NormalizedDescription = "INVOICEOVERDUE",
                            NormalizedName = "OVERDUE",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 719, DateTimeKind.Local).AddTicks(632)
                        });
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Lookups.VatType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<double>("Percentage")
                        .HasColumnType("DECIMAL (5, 2)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("ValidFrom");

                    b.Property<DateTime?>("ValidTo");

                    b.HasKey("Id");

                    b.ToTable("VatTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 727, DateTimeKind.Local).AddTicks(1105),
                            Description = "14% Percent VAT",
                            IsDeleted = false,
                            Percentage = 0.14000000000000001,
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 727, DateTimeKind.Local).AddTicks(1124),
                            ValidFrom = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ValidTo = new DateTime(2018, 3, 31, 23, 59, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 727, DateTimeKind.Local).AddTicks(2537),
                            Description = "15% Percent VAT",
                            IsDeleted = false,
                            Percentage = 0.14999999999999999,
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 727, DateTimeKind.Local).AddTicks(2541),
                            ValidFrom = new DateTime(2018, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.Tariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("MedicalItemPublicationPeriodId");

                    b.Property<int>("PractitionerTypeId");

                    b.Property<double>("RecommendedUnit");

                    b.Property<int>("TariffUnitCostId");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("DATETIME2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("DATETIME2");

                    b.Property<int>("VatTypeId");

                    b.HasKey("Id");

                    b.HasIndex("MedicalItemPublicationPeriodId");

                    b.HasIndex("PractitionerTypeId");

                    b.HasIndex("TariffUnitCostId");

                    b.HasIndex("VatTypeId");

                    b.ToTable("Tariffs");
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.TariffBaseUnitCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ActualAmount")
                        .HasColumnType("DECIMAL (19, 4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("ValidFrom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("ValidTo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("TariffBaseUnitCosts");
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.TariffType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedDescription")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("TariffTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 722, DateTimeKind.Local).AddTicks(3754),
                            Description = "Coid Tariffs",
                            IsDeleted = false,
                            Name = "Coida",
                            NormalizedDescription = "COIDTARIFFS",
                            NormalizedName = "COIDA",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 722, DateTimeKind.Local).AddTicks(3773)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 722, DateTimeKind.Local).AddTicks(3793),
                            Description = "None Coid Tariffs",
                            IsDeleted = false,
                            Name = "NoneCoid",
                            NormalizedDescription = "NONECOIDTARIFFS",
                            NormalizedName = "NONECOID",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 722, DateTimeKind.Local).AddTicks(3793)
                        });
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Lookups.ManufactureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedDescription")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("ManufactureTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Unknown",
                            IsDeleted = false,
                            Name = "Unknown",
                            NormalizedDescription = "UNKNOWN",
                            NormalizedName = "UNKNOWN",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "AMW",
                            IsDeleted = false,
                            Name = "AMW",
                            NormalizedDescription = "AMW",
                            NormalizedName = "AMW",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "MGP",
                            IsDeleted = false,
                            Name = "MGP",
                            NormalizedDescription = "MGP",
                            NormalizedName = "MGP",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("ManufactureTypeId");

                    b.Property<string>("Name");

                    b.Property<int>("PackSize");

                    b.Property<double?>("Strength");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.HasIndex("ManufactureTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ManufactureTypeId = 1,
                            Name = "Unknown",
                            PackSize = 0,
                            Strength = 0.0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ManufactureTypeId = 2,
                            Name = "Magna bloc back belt-8837",
                            PackSize = 1,
                            Strength = 0.0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ManufactureTypeId = 2,
                            Name = "Magna bloc elbow band-8839",
                            PackSize = 1,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ManufactureTypeId = 2,
                            Name = "Magna bloc head band-8838",
                            PackSize = 1,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ManufactureTypeId = 2,
                            Name = "Magna bloc knee band-8833",
                            PackSize = 1,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ManufactureTypeId = 2,
                            Name = "Magna bloc personal discs (3)-8798",
                            PackSize = 1,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ManufactureTypeId = 2,
                            Name = "Magna bloc wrist bands (2)-8830",
                            PackSize = 1,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ManufactureTypeId = 2,
                            Name = "Magna bloc skin prep towels(16)-9605",
                            PackSize = 1,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ManufactureTypeId = 2,
                            Name = "Magna bloc adhes applic (60tapes)-892",
                            PackSize = 1,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ManufactureTypeId = 3,
                            Name = "Terranetic pillow mat",
                            PackSize = 1,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.MedicalItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("MedicalItemTypeId");

                    b.Property<int>("NappiCodeTypeId");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.HasIndex("MedicalItemTypeId");

                    b.HasIndex("NappiCodeTypeId");

                    b.ToTable("MedicalItems");
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.MedicalItemPublication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("MedicalItemId");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<int>("PublicationTypeId");

                    b.Property<double>("Quantity");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.HasIndex("PublicationTypeId");

                    b.HasIndex("MedicalItemId", "PublicationTypeId")
                        .IsUnique();

                    b.ToTable("MedicalItemPublications");
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.MedicalItemPublicationPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("MedicalItemPublicationId");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("ValiFrom");

                    b.Property<DateTime>("ValidTo");

                    b.HasKey("Id");

                    b.HasIndex("MedicalItemPublicationId");

                    b.ToTable("MedicalItemPublicationPeriods");
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.MedicalItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("NormalizedDescription")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("MedicalItemTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 736, DateTimeKind.Local).AddTicks(9763),
                            Description = "Unknown",
                            IsDeleted = false,
                            Name = "-",
                            NormalizedDescription = "UNKNOWN",
                            NormalizedName = "-",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 736, DateTimeKind.Local).AddTicks(9782)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 736, DateTimeKind.Local).AddTicks(9805),
                            Description = "Treatment or Procedure Code",
                            IsDeleted = true,
                            Name = "IT",
                            NormalizedDescription = "TREATMENTORPROCEDURECODE",
                            NormalizedName = "IT",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 736, DateTimeKind.Local).AddTicks(9809)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 736, DateTimeKind.Local).AddTicks(9809),
                            Description = "Drug or Pharmaceutical Item (NAPPI)",
                            IsDeleted = true,
                            Name = "ID",
                            NormalizedDescription = "DRUGORPHARMACEUTICALITEM(NAPPI)",
                            NormalizedName = "ID",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 736, DateTimeKind.Local).AddTicks(9809)
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 736, DateTimeKind.Local).AddTicks(9813),
                            Description = "Modifier",
                            IsDeleted = false,
                            Name = "M",
                            NormalizedDescription = "MODIFIER",
                            NormalizedName = "M",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 736, DateTimeKind.Local).AddTicks(9813)
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 736, DateTimeKind.Local).AddTicks(9813),
                            Description = "Rule",
                            IsDeleted = false,
                            Name = "R",
                            NormalizedDescription = "RULE",
                            NormalizedName = "R",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 736, DateTimeKind.Local).AddTicks(9817)
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 736, DateTimeKind.Local).AddTicks(9817),
                            Description = "Note",
                            IsDeleted = false,
                            Name = "N",
                            NormalizedDescription = "NOTE",
                            NormalizedName = "N",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 736, DateTimeKind.Local).AddTicks(9817)
                        });
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.NappiCodeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("DosageFrom");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("NappiCode");

                    b.Property<int>("ProductId");

                    b.Property<int?>("Schedule");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("NappiCodeTypes");
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.Practitioner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsMedReportRequired");

                    b.Property<double>("MaxTreatmentDays");

                    b.Property<string>("NRPLPracticeCode");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedDescription")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("PracticeCode");

                    b.Property<int>("PractitionerGroupTypeId");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.HasIndex("PractitionerGroupTypeId");

                    b.ToTable("Practitioners");
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.PractitionerGroupType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedDescription")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("PractitionerGroupTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 758, DateTimeKind.Local).AddTicks(8613),
                            Description = "ALL discipline",
                            IsDeleted = false,
                            Name = "ALL",
                            NormalizedDescription = "ALL DISCIPLINE",
                            NormalizedName = "ALL",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 758, DateTimeKind.Local).AddTicks(8629)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 758, DateTimeKind.Local).AddTicks(8648),
                            Description = "SPC discipline",
                            IsDeleted = false,
                            Name = "SPC",
                            NormalizedDescription = "SPC DISCIPLINE",
                            NormalizedName = "SPC",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 758, DateTimeKind.Local).AddTicks(8648)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 758, DateTimeKind.Local).AddTicks(8652),
                            Description = "GPH discipline",
                            IsDeleted = false,
                            Name = "GPH",
                            NormalizedDescription = "GPH DISCIPLINE",
                            NormalizedName = "GPH",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 758, DateTimeKind.Local).AddTicks(8652)
                        });
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.PractitionerPractitionerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("PractitionerId");

                    b.Property<int>("PractitionerTypeId");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.HasIndex("PractitionerId");

                    b.HasIndex("PractitionerTypeId");

                    b.ToTable("PractitionerPractitionerTypes");
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.PractitionerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedDescription")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("PractitionerTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 755, DateTimeKind.Local).AddTicks(8413),
                            Description = "Hospital",
                            IsDeleted = false,
                            Name = "Hospital",
                            NormalizedDescription = "HOSPITAL",
                            NormalizedName = "HOSPITAL",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 755, DateTimeKind.Local).AddTicks(8428)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 755, DateTimeKind.Local).AddTicks(8448),
                            Description = "Dentist",
                            IsDeleted = false,
                            Name = "Dentist",
                            NormalizedDescription = "DENTIST",
                            NormalizedName = "DENTIST",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 755, DateTimeKind.Local).AddTicks(8451)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 755, DateTimeKind.Local).AddTicks(8451),
                            Description = "Ambulance",
                            IsDeleted = false,
                            Name = "Ambulance",
                            NormalizedDescription = "AMBULANCE",
                            NormalizedName = "AMBULANCE",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 755, DateTimeKind.Local).AddTicks(8451)
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 755, DateTimeKind.Local).AddTicks(8455),
                            Description = "Specialist",
                            IsDeleted = false,
                            Name = "Specialist",
                            NormalizedDescription = "SPECIALIST",
                            NormalizedName = "SPECIALIST",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 755, DateTimeKind.Local).AddTicks(8455)
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 755, DateTimeKind.Local).AddTicks(8455),
                            Description = "Anaesthetist",
                            IsDeleted = false,
                            Name = "Anaesthetist",
                            NormalizedDescription = "ANAESTHETIST",
                            NormalizedName = "ANAESTHETIST",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 755, DateTimeKind.Local).AddTicks(8459)
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 755, DateTimeKind.Local).AddTicks(8459),
                            Description = "General Practitioner",
                            IsDeleted = false,
                            Name = "GP",
                            NormalizedDescription = "GENERALPRACTITIONER",
                            NormalizedName = "GP",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 755, DateTimeKind.Local).AddTicks(8459)
                        });
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.SectionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedDescription")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("SectionNo");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("SectionTypes");
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.TariffBaseUnitCostType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedDescription")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("TariffBaseUnitCostTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "CONSULTATION",
                            IsDeleted = false,
                            Name = "CONS",
                            NormalizedDescription = "CONSULTATION",
                            NormalizedName = "CONS",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ANAESTHETIC",
                            IsDeleted = false,
                            Name = "ANA",
                            NormalizedDescription = "ANAESTHETIC",
                            NormalizedName = "ANA",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "CLINICAL PROCEDURES",
                            IsDeleted = false,
                            Name = "CLIN",
                            NormalizedDescription = "CLINICALPROCEDURES",
                            NormalizedName = "CLIN",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "RADIOLOGY",
                            IsDeleted = false,
                            Name = "RAD",
                            NormalizedDescription = "RADIOLOGY",
                            NormalizedName = "RAD",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PATHOLOGY",
                            IsDeleted = false,
                            Name = "PATH",
                            NormalizedDescription = "PATHOLOGY",
                            NormalizedName = "PATH",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "RADIATION ONCOLOGY",
                            IsDeleted = false,
                            Name = "RADONC",
                            NormalizedDescription = "RADIATIONONCOLOGY",
                            NormalizedName = "RADONC",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "DENTAL PROCEDURES",
                            IsDeleted = false,
                            Name = "DENTAL",
                            NormalizedDescription = "DENTALPROCEDURES",
                            NormalizedName = "DENTAL",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "OCCUPATIONAL AND ART THERAPY",
                            IsDeleted = false,
                            Name = "OCC",
                            NormalizedDescription = "OCCUPATIONALANDARTTHERAPY",
                            NormalizedName = "OCC",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "CHIROPRACTOR",
                            IsDeleted = false,
                            Name = "CHI",
                            NormalizedDescription = "CHIROPRACTOR",
                            NormalizedName = "CHI",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PHYSIOTHERAPY",
                            IsDeleted = false,
                            Name = "PHYSIO",
                            NormalizedDescription = "PHYSIOTHERAPY",
                            NormalizedName = "PHYSIO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "AMBULANCE",
                            IsDeleted = false,
                            Name = "AMB",
                            NormalizedDescription = "AMBULANCE",
                            NormalizedName = "AMB",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ORTHOTIST AND PROSTHETISTS",
                            IsDeleted = false,
                            Name = "ORTPRO",
                            NormalizedDescription = "ORTHOTISTANDPROSTHETISTS",
                            NormalizedName = "ORTPRO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "NAPPI",
                            IsDeleted = false,
                            Name = "NAPPI",
                            NormalizedDescription = "NAPPI",
                            NormalizedName = "NAPPI",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PRIVATE HOSPITAL",
                            IsDeleted = false,
                            Name = "PRIHOSP",
                            NormalizedDescription = "PRIVATEHOSPITAL",
                            NormalizedName = "PRIHOSP",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "SUBACUTE FACILITY",
                            IsDeleted = false,
                            Name = "SUBACUTE",
                            NormalizedDescription = "SUBACUTEFACILITY",
                            NormalizedName = "SUBACUTE",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "REHABILITATION HOSPITAL",
                            IsDeleted = false,
                            Name = "REHAB",
                            NormalizedDescription = "REHABILITATIONHOSPITAL",
                            NormalizedName = "REHAB",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PHARMACY",
                            IsDeleted = false,
                            Name = "PHAR",
                            NormalizedDescription = "PHARMACY",
                            NormalizedName = "PHAR",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ORTHOTIST",
                            IsDeleted = false,
                            Name = "ORTH",
                            NormalizedDescription = "ORTHOTIST",
                            NormalizedName = "ORTH",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "REGISTERED NURSE",
                            IsDeleted = false,
                            Name = "NURSE",
                            NormalizedDescription = "REGISTEREDNURSE",
                            NormalizedName = "NURSE",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "NHN",
                            IsDeleted = false,
                            Name = "NHN",
                            NormalizedDescription = "NHN",
                            NormalizedName = "NHN",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "NETCARE",
                            IsDeleted = false,
                            Name = "NETCARE",
                            NormalizedDescription = "NETCARE",
                            NormalizedName = "NETCARE",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "MENTAL HEALTH",
                            IsDeleted = false,
                            Name = "MENTAL",
                            NormalizedDescription = "MENTALHEALTH",
                            NormalizedName = "MENTAL",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "MEDICLINIC",
                            IsDeleted = false,
                            Name = "MEDI",
                            NormalizedDescription = "MEDICLINIC",
                            NormalizedName = "MEDI",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "TEBA",
                            IsDeleted = false,
                            Name = "TEBA",
                            NormalizedDescription = "TEBA",
                            NormalizedName = "TEBA",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ACUPUNCTURE",
                            IsDeleted = false,
                            Name = "ACU",
                            NormalizedDescription = "ACUPUNCTURE",
                            NormalizedName = "ACU",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ART THERAPY",
                            IsDeleted = false,
                            Name = "ART",
                            NormalizedDescription = "ARTTHERAPY",
                            NormalizedName = "ART",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "BIOKINETICS",
                            IsDeleted = false,
                            Name = "BIOK",
                            NormalizedDescription = "BIOKINETICS",
                            NormalizedName = "BIOK",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "BRUNS",
                            IsDeleted = false,
                            Name = "BRUNS",
                            NormalizedDescription = "BRUNS",
                            NormalizedName = "BRUNS",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "DENTAL CDT",
                            IsDeleted = false,
                            Name = "CDT",
                            NormalizedDescription = "DENTALCDT",
                            NormalizedName = "CDT",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "CLINICAL TECHNOLOGY",
                            IsDeleted = false,
                            Name = "CTEC",
                            NormalizedDescription = "CLINICALTECHNOLOGY",
                            NormalizedName = "CTEC",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "DIETICIAN",
                            IsDeleted = false,
                            Name = "DIET",
                            NormalizedDescription = "DIETICIAN",
                            NormalizedName = "DIET",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "DENTAL TECHNICIAN",
                            IsDeleted = false,
                            Name = "DTEC",
                            NormalizedDescription = "DENTALTECHNICIAN",
                            NormalizedName = "DTEC",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "GENETIC COUNCELLOR",
                            IsDeleted = false,
                            Name = "GENC",
                            NormalizedDescription = "GENETICCOUNCELLOR",
                            NormalizedName = "GENC",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "HEARING AID ACOUSTICIAN",
                            IsDeleted = false,
                            Name = "HAAC",
                            NormalizedDescription = "HEARINGAIDACOUSTICIAN",
                            NormalizedName = "HAAC",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "HOMEOPATHY",
                            IsDeleted = false,
                            Name = "HOMEO",
                            NormalizedDescription = "HOMEOPATHY",
                            NormalizedName = "HOMEO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "MEDICAL TECHNOLOGY",
                            IsDeleted = false,
                            Name = "MTEC",
                            NormalizedDescription = "MEDICALTECHNOLOGY",
                            NormalizedName = "MTEC",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "NATUROPATHY",
                            IsDeleted = false,
                            Name = "NATURO",
                            NormalizedDescription = "NATUROPATHY",
                            NormalizedName = "NATURO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "NURSING AGENCY",
                            IsDeleted = false,
                            Name = "NURSAG",
                            NormalizedDescription = "NURSINGAGENCY",
                            NormalizedName = "NURSAG",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "OPTOMETRY",
                            IsDeleted = false,
                            Name = "OPTO",
                            NormalizedDescription = "OPTOMETRY",
                            NormalizedName = "OPTO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ORTHOPTISTS",
                            IsDeleted = false,
                            Name = "ORTHOP",
                            NormalizedDescription = "ORTHOPTISTS",
                            NormalizedName = "ORTHOP",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "OSTEOPATHY",
                            IsDeleted = false,
                            Name = "OSTEO",
                            NormalizedDescription = "OSTEOPATHY",
                            NormalizedName = "OSTEO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PATOLOGY",
                            IsDeleted = false,
                            Name = "PAT",
                            NormalizedDescription = "PATOLOGY",
                            NormalizedName = "PAT",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PHYTOTHERAPY",
                            IsDeleted = false,
                            Name = "PHYTO",
                            NormalizedDescription = "PHYTOTHERAPY",
                            NormalizedName = "PHYTO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PODIATRY",
                            IsDeleted = false,
                            Name = "PODIAT",
                            NormalizedDescription = "PODIATRY",
                            NormalizedName = "PODIAT",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 45,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PSYCHOLOGY",
                            IsDeleted = false,
                            Name = "PSYCHO",
                            NormalizedDescription = "PSYCHOLOGY",
                            NormalizedName = "PSYCHO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 46,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "PSYCHOMETRY",
                            IsDeleted = false,
                            Name = "PSYCME",
                            NormalizedDescription = "PSYCHOMETRY",
                            NormalizedName = "PSYCME",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "RADIOLOGY NHRPL",
                            IsDeleted = false,
                            Name = "RADIO",
                            NormalizedDescription = "RADIOLOGYNHRPL",
                            NormalizedName = "RADIO",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "RADIOGRAPHY",
                            IsDeleted = false,
                            Name = "RADIOGR",
                            NormalizedDescription = "RADIOGRAPHY",
                            NormalizedName = "RADIOGR",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 49,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "SOCIAL WORKERS",
                            IsDeleted = false,
                            Name = "SOCIAL",
                            NormalizedDescription = "SOCIALWORKERS",
                            NormalizedName = "SOCIAL",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 50,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "SPEECH THERAPY AND AUDIOLOGY",
                            IsDeleted = false,
                            Name = "SPEECH",
                            NormalizedDescription = "SPEECHTHERAPYANDAUDIOLOGY",
                            NormalizedName = "SPEECH",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 51,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "TISSUE TRANSPLANT",
                            IsDeleted = false,
                            Name = "TISSUE",
                            NormalizedDescription = "TISSUETRANSPLANT",
                            NormalizedName = "TISSUE",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 52,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "UNATTACHED OPERATING THEATRE",
                            IsDeleted = false,
                            Name = "UNATTACH",
                            NormalizedDescription = "UNATTACHEDOPERATINGTHEATRE",
                            NormalizedName = "UNATTACH",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 53,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "COID UNIT",
                            IsDeleted = false,
                            Name = "UNIT",
                            NormalizedDescription = "COIDUNIT",
                            NormalizedName = "UNIT",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 54,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "UPFS",
                            IsDeleted = false,
                            Name = "UPFS",
                            NormalizedDescription = "UPFS",
                            NormalizedName = "UPFS",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 55,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "DENTAL THERAPY",
                            IsDeleted = false,
                            Name = "DENTT",
                            NormalizedDescription = "DENTALTHERAPY",
                            NormalizedName = "DENTT",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 56,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "NONE",
                            IsDeleted = false,
                            Name = "NONE",
                            NormalizedDescription = "NONE",
                            NormalizedName = "NONE",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 57,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Blood Transfusion",
                            IsDeleted = false,
                            Name = "Blood",
                            NormalizedDescription = "BLOODTRANSFUSION",
                            NormalizedName = "BLOOD",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 58,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Renal Care",
                            IsDeleted = false,
                            Name = "Renal",
                            NormalizedDescription = "RENALCARE",
                            NormalizedName = "RENAL",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Users.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Users.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("PracticeNumber");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Users.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PublicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedDescription")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("PublicationNo")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("'Administrator'")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GetDate()");

                    b.HasKey("Id");

                    b.ToTable("PublicationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(8154),
                            Description = "Chiropractor Tariffs",
                            IsDeleted = false,
                            Name = "Chiropractor",
                            NormalizedDescription = "CHIROPRACTORTARIFFS",
                            NormalizedName = "CHIROPRACTOR",
                            PublicationNo = "11111",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(8177)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9151),
                            Description = "Radiologists Tariffs",
                            IsDeleted = false,
                            Name = "Radiologist",
                            NormalizedDescription = "RADIOLOGISTSTARIFFS",
                            NormalizedName = "RADIOLOGIST",
                            PublicationNo = "11111",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9155)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9182),
                            Description = "Dentists tarrifs",
                            IsDeleted = false,
                            Name = "Dentist",
                            NormalizedDescription = "DENTISTSTARRIFS",
                            NormalizedName = "DENTIST",
                            PublicationNo = "11111",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9205)
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9209),
                            Description = "Physiotherapist tariffs",
                            IsDeleted = false,
                            Name = "Physiotherapist",
                            NormalizedDescription = "PHYSIOTHERAPISTTARIFFS",
                            NormalizedName = "PHYSIOTHERAPIST",
                            PublicationNo = "11111",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9209)
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9209),
                            Description = "Private Ambulance Tariffs",
                            IsDeleted = false,
                            Name = "Private Ambulance",
                            NormalizedDescription = "PRIVATEAMBULANCETARIFFS",
                            NormalizedName = "PRIVATEAMBULANCE",
                            PublicationNo = "11111",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9213)
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9213),
                            Description = "General Practioner Tariffs",
                            IsDeleted = false,
                            Name = "General Practioner",
                            NormalizedDescription = "GENERALPRACTIONERTARIFFS",
                            NormalizedName = "GENERALPRACTIONER",
                            PublicationNo = "11111",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9213)
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9216),
                            Description = "Renal Care Tariffs",
                            IsDeleted = false,
                            Name = "Renal Care",
                            NormalizedDescription = "RENALCARETARIFFS",
                            NormalizedName = "RENALCARE",
                            PublicationNo = "11111",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9216)
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9220),
                            Description = "Social Worker Tariffs",
                            IsDeleted = false,
                            Name = "Social Worker",
                            NormalizedDescription = "SOCIALWORKERTARIFFS",
                            NormalizedName = "SOCIALWORKER",
                            PublicationNo = "11111",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9220)
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "Administrator",
                            CreatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9224),
                            Description = "Wound Care Tariffs",
                            IsDeleted = false,
                            Name = "Wound Care",
                            NormalizedDescription = "WOUNDCARETARIFFS",
                            NormalizedName = "WOUNDCARE",
                            PublicationNo = "11111",
                            UpdatedBy = "Administrator",
                            UpdatedDate = new DateTime(2019, 8, 11, 16, 33, 34, 751, DateTimeKind.Local).AddTicks(9224)
                        });
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.Tariff", b =>
                {
                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Tariffs.MedicalItemPublicationPeriod", "MedicalItemPublicationPeriod")
                        .WithMany()
                        .HasForeignKey("MedicalItemPublicationPeriodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Tariffs.PractitionerType", "PractitionerType")
                        .WithMany()
                        .HasForeignKey("PractitionerTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Tariffs.TariffBaseUnitCost", "TariffUnitCost")
                        .WithMany()
                        .HasForeignKey("TariffUnitCostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Lookups.VatType", "VatType")
                        .WithMany()
                        .HasForeignKey("VatTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Product", b =>
                {
                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Lookups.ManufactureType", "ManufactureType")
                        .WithMany()
                        .HasForeignKey("ManufactureTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.MedicalItem", b =>
                {
                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Tariffs.MedicalItemType", "MedicalItemType")
                        .WithMany()
                        .HasForeignKey("MedicalItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Tariffs.NappiCodeType", "NappiCodeType")
                        .WithMany()
                        .HasForeignKey("NappiCodeTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.MedicalItemPublication", b =>
                {
                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Tariffs.MedicalItem", "MedicalItem")
                        .WithMany()
                        .HasForeignKey("MedicalItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PublicationType", "PublicationType")
                        .WithMany()
                        .HasForeignKey("PublicationTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.MedicalItemPublicationPeriod", b =>
                {
                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Tariffs.MedicalItemPublication", "MedicalItemPublication")
                        .WithMany()
                        .HasForeignKey("MedicalItemPublicationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.NappiCodeType", b =>
                {
                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.Practitioner", b =>
                {
                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Tariffs.PractitionerGroupType", "PractitionerGroupType")
                        .WithMany()
                        .HasForeignKey("PractitionerGroupTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Tariffs.PractitionerPractitionerType", b =>
                {
                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Tariffs.Practitioner", "Practitioner")
                        .WithMany()
                        .HasForeignKey("PractitionerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Tariffs.PractitionerType", "PractitionerType")
                        .WithMany()
                        .HasForeignKey("PractitionerTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MedicalEngineMicroService.Core.Models.Entities.Users.ApplicationUserRole", b =>
                {
                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Users.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Users.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Users.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Users.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Users.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MedicalEngineMicroService.Core.Models.Entities.Users.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
