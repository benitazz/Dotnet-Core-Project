using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace MedicalEngineMicroService.Migrations
{
    public partial class AddedProcedureDescriptions : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 287, DateTimeKind.Local).AddTicks(2775), new DateTime(2019, 9, 22, 14, 17, 54, 294, DateTimeKind.Local).AddTicks(5864) });

            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 294, DateTimeKind.Local).AddTicks(6661), new DateTime(2019, 9, 22, 14, 17, 54, 294, DateTimeKind.Local).AddTicks(6680) });

            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 294, DateTimeKind.Local).AddTicks(6692), new DateTime(2019, 9, 22, 14, 17, 54, 294, DateTimeKind.Local).AddTicks(6696) });

            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 294, DateTimeKind.Local).AddTicks(6700), new DateTime(2019, 9, 22, 14, 17, 54, 294, DateTimeKind.Local).AddTicks(6703) });

            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 294, DateTimeKind.Local).AddTicks(6707), new DateTime(2019, 9, 22, 14, 17, 54, 294, DateTimeKind.Local).AddTicks(6711) });

            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 294, DateTimeKind.Local).AddTicks(6715), new DateTime(2019, 9, 22, 14, 17, 54, 294, DateTimeKind.Local).AddTicks(6715) });

            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 7,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 294, DateTimeKind.Local).AddTicks(6723), new DateTime(2019, 9, 22, 14, 17, 54, 294, DateTimeKind.Local).AddTicks(6723) });

            migrationBuilder.UpdateData(
                table: "InvoiceStatuses",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 300, DateTimeKind.Local).AddTicks(9814), new DateTime(2019, 9, 22, 14, 17, 54, 300, DateTimeKind.Local).AddTicks(9837) });

            migrationBuilder.UpdateData(
                table: "InvoiceStatuses",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 300, DateTimeKind.Local).AddTicks(9880), new DateTime(2019, 9, 22, 14, 17, 54, 300, DateTimeKind.Local).AddTicks(9883) });

            migrationBuilder.UpdateData(
                table: "InvoiceStatuses",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 300, DateTimeKind.Local).AddTicks(9887), new DateTime(2019, 9, 22, 14, 17, 54, 300, DateTimeKind.Local).AddTicks(9887) });

            migrationBuilder.UpdateData(
                table: "InvoiceStatuses",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 300, DateTimeKind.Local).AddTicks(9895), new DateTime(2019, 9, 22, 14, 17, 54, 300, DateTimeKind.Local).AddTicks(9895) });

            migrationBuilder.UpdateData(
                table: "InvoiceStatuses",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 300, DateTimeKind.Local).AddTicks(9899), new DateTime(2019, 9, 22, 14, 17, 54, 300, DateTimeKind.Local).AddTicks(9899) });

            migrationBuilder.UpdateData(
                table: "InvoiceStatuses",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 300, DateTimeKind.Local).AddTicks(9903), new DateTime(2019, 9, 22, 14, 17, 54, 300, DateTimeKind.Local).AddTicks(9906) });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2130, "Oesophagus, stomach and duodenum (control film of abdomen included) and limited follow through", 2130, "OESOPHAGUS,STOMACHANDDUODENUM(CONTROLFILMOFABDOMENINCLUDED)ANDLIMITEDFOLLOWTHROUGH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2131, "Double contrast: ADD", 2131, "DOUBLECONTRAST:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2132, "Small bowel meal (control film of abdomen included except when part of item 3408)", 2132, "SMALLBOWELMEAL(CONTROLFILMOFABDOMENINCLUDEDEXCEPTWHENPARTOFITEM3408)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2133, "Barium meal and dedicated gastro-intestinal tract follow through (including control film of the abdomen, oesophagus, duodenum, small bowel and colon)", 2133, "BARIUMMEALANDDEDICATEDGASTRO-INTESTINALTRACTFOLLOWTHROUGH(INCLUDINGCONTROLFILMOFTHEABDOMEN,OESOPHAGUS,DUODENUM,SMALLBOWELANDCOLON)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2134, "Barium enema (control film of abdomen included)", 2134, "BARIUMENEMA(CONTROLFILMOFABDOMENINCLUDED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2135, "Air contrast study: ADD", 2135, "AIRCONTRASTSTUDY:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2136, "Biliary Tract: ERCP own equipment: Choledogram and/or pancreatography screening included", 2136, "BILIARYTRACT:ERCPOWNEQUIPMENT:CHOLEDOGRAMAND/ORPANCREATOGRAPHYSCREENINGINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2137, "Pancreas: ERCP hospital equipment: Choledogram and/or pancreatography screening included", 2137, "PANCREAS:ERCPHOSPITALEQUIPMENT:CHOLEDOGRAMAND/ORPANCREATOGRAPHYSCREENINGINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2138, "Gastric/oesophageal/duodenal intubation control", 2138, "GASTRIC/OESOPHAGEAL/DUODENALINTUBATIONCONTROL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2139, "Gastric/oesophageal intubation insertion of tube: ADD", 2139, "GASTRIC/OESOPHAGEALINTUBATIONINSERTIONOFTUBE:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2145, "Post operative: T-tube", 2145, "POSTOPERATIVE:T-TUBE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2141, "Hypotonic duodenography (item 3403 and item 3405 included)", 2141, "HYPOTONICDUODENOGRAPHY(ITEM3403ANDITEM3405INCLUDED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2142, "Oral cholecystography", 2142, "ORALCHOLECYSTOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2143, "Cholangiography: Intravenous", 2143, "CHOLANGIOGRAPHY:INTRAVENOUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2144, "Operative cholangiography: First series: ADD item 3607 only when the Radiologist attends personally in theatre", 2144, "OPERATIVECHOLANGIOGRAPHY:FIRSTSERIES:ADDITEM3607ONLYWHENTHERADIOLOGISTATTENDSPERSONALLYINTHEATRE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2129, "Pharynx and oesophagus", 2129, "PHARYNXANDOESOPHAGUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2146, "Introduction of contrast medium: ADD", 2146, "INTRODUCTIONOFCONTRASTMEDIUM:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2147, "Trans hepatic, percutaneous", 2147, "TRANSHEPATIC,PERCUTANEOUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2148, "Introduction of contrast medium: ADD", 2148, "INTRODUCTIONOFCONTRASTMEDIUM:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2149, "Tomography of biliary tract: ADD", 2149, "TOMOGRAPHYOFBILIARYTRACT:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2140, "Duodenal intubation: Insertion of tube: ADD", 2140, "DUODENALINTUBATION:INSERTIONOFTUBE:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2128, "Introduction of contrast medium (plus 80% for each additional gland: ADD)", 2128, "INTRODUCTIONOFCONTRASTMEDIUM(PLUS80%FOREACHADDITIONALGLAND:ADD)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2122, "Post-nasal studies: Lateral neck", 2122, "POST-NASALSTUDIES:LATERALNECK", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2126, "Bowel washout: ADD", 2126, "BOWELWASHOUT:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2106, "Discography", 2106, "DISCOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2107, "Introduction of contrast medium per disc level: ADD", 2107, "INTRODUCTIONOFCONTRASTMEDIUMPERDISCLEVEL:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2108, "Skull studies", 2108, "SKULLSTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2109, "Paranasal sinuses", 2109, "PARANASALSINUSES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2110, "Facial bones and/or orbits", 2110, "FACIALBONESAND/ORORBITS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2111, "Mandible", 2111, "MANDIBLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2112, "Nasal bone", 2112, "NASALBONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2113, "Mastoid: Bilateral", 2113, "MASTOID:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2114, "Teeth: One quadrant", 2114, "TEETH:ONEQUADRANT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2127, "Sialography (plus 80% for each additional gland)", 2127, "SIALOGRAPHY(PLUS80%FOREACHADDITIONALGLAND)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2115, "Teeth: Two quadrants", 2115, "TEETH:TWOQUADRANTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2117, "Teeth: Rotation tomography of the teeth and jaws", 2117, "TEETH:ROTATIONTOMOGRAPHYOFTHETEETHANDJAWS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2118, "Teeth: Tempero-mandibular joints: Per side", 2118, "TEETH:TEMPERO-MANDIBULARJOINTS:PERSIDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2119, "Teeth: Tomography: Per side", 2119, "TEETH:TOMOGRAPHY:PERSIDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2120, "Localisation of foreign body in the eye", 2120, "LOCALISATIONOFFOREIGNBODYINTHEEYE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2121, "Ventriculography", 2121, "VENTRICULOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2150, "Larynx (Tomography included)", 2150, "LARYNX(TOMOGRAPHYINCLUDED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2123, "Maxillo-facial cephalometry", 2123, "MAXILLO-FACIALCEPHALOMETRY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2124, "Dacrocystography", 2124, "DACROCYSTOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2125, "For introduction of contrast medium: ADD", 2125, "FORINTRODUCTIONOFCONTRASTMEDIUM:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2116, "Teeth: Full mouth", 2116, "TEETH:FULLMOUTH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2151, "Chest (item 3601 included)", 2151, "CHEST(ITEM3601INCLUDED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2157, "Introduction of contrast medium included", 2157, "INTRODUCTIONOFCONTRASTMEDIUMINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2153, "Ribs", 2153, "RIBS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2178, "Analogue monoplane table with DSA attachment", 2178, "ANALOGUEMONOPLANETABLEWITHDSAATTACHMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2179, "Dedicated angiography suite: Digital bi-plane unit. Once off charge per patient by owner of equipment", 2179, "DEDICATEDANGIOGRAPHYSUITE:DIGITALBI-PLANEUNIT.ONCEOFFCHARGEPERPATIENTBYOWNEROFEQUIPMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2180, "Radiography fee for coronary catheterisation laboratory, per radiographer, per half hour or part thereof", 2180, "RADIOGRAPHYFEEFORCORONARYCATHETERISATIONLABORATORY,PERRADIOGRAPHER,PERHALFHOURORPARTTHEREOF", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2181, "Venography: Per limb", 2181, "VENOGRAPHY:PERLIMB", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2182, "Analogue monoplane screening table", 2182, "ANALOGUEMONOPLANESCREENINGTABLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2183, "Digital monoplane screening table", 2183, "DIGITALMONOPLANESCREENINGTABLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2184, "Lymphangiogram per limb (global fee) including lymphatic catheterisation (no machine fee applicable)", 2184, "LYMPHANGIOGRAMPERLIMB(GLOBALFEE)INCLUDINGLYMPHATICCATHETERISATION(NOMACHINEFEEAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2185, "Catheterisation aorta or vena cava, any level, any route, with aortogram/cavogram", 2185, "CATHETERISATIONAORTAORVENACAVA,ANYLEVEL,ANYROUTE,WITHAORTOGRAM/CAVOGRAM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2186, "Translumbar aortic puncture, with full study", 2186, "TRANSLUMBARAORTICPUNCTURE,WITHFULLSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2177, "Dedicated angiography suite: Digital monoplane unit. Once off charge per patient by owner of equipment", 2177, "DEDICATEDANGIOGRAPHYSUITE:DIGITALMONOPLANEUNIT.ONCEOFFCHARGEPERPATIENTBYOWNEROFEQUIPMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2187, "Selective first order catheterisation, arterial or venous, with angiogram/venogram", 2187, "SELECTIVEFIRSTORDERCATHETERISATION,ARTERIALORVENOUS,WITHANGIOGRAM/VENOGRAM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2189, "Selective third order catheterisation, arterial or venous, with angiogram/venogram", 2189, "SELECTIVETHIRDORDERCATHETERISATION,ARTERIALORVENOUS,WITHANGIOGRAM/VENOGRAM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2190, "Direct femoral arterial or venous or jugular venous puncture", 2190, "DIRECTFEMORALARTERIALORVENOUSORJUGULARVENOUSPUNCTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2191, "Guiding catheter placement, any site arterial or venous, for any intracranial procedure or anteriovenous malformation (AVM)", 2191, "GUIDINGCATHETERPLACEMENT,ANYSITEARTERIALORVENOUS,FORANYINTRACRANIALPROCEDUREORANTERIOVENOUSMALFORMATION(AVM)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2192, "Intravascular pressure studies, arterial or venous, once off per case", 2192, "INTRAVASCULARPRESSURESTUDIES,ARTERIALORVENOUS,ONCEOFFPERCASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2193, "Microcatheter insertion, any cranial vessel and/or pulmonary vessel, arterial or venous (including guiding catheter placement)", 2193, "MICROCATHETERINSERTION,ANYCRANIALVESSELAND/ORPULMONARYVESSEL,ARTERIALORVENOUS(INCLUDINGGUIDINGCATHETERPLACEMENT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2194, "Transcatheter selective blood sampling, arterial or venous", 2194, "TRANSCATHETERSELECTIVEBLOODSAMPLING,ARTERIALORVENOUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2195, "Spinal angiogram (global fee) including all selective catheterisations", 2195, "SPINALANGIOGRAM(GLOBALFEE)INCLUDINGALLSELECTIVECATHETERISATIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2196, "Direct intravenous for limb", 2196, "DIRECTINTRAVENOUSFORLIMB", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2197, "Cut-downs for venography: ADD", 2197, "CUT-DOWNSFORVENOGRAPHY:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2188, "Selective second order catheterisation, arterial or venous, with angiogram/ venogram", 2188, "SELECTIVESECONDORDERCATHETERISATION,ARTERIALORVENOUS,WITHANGIOGRAM/VENOGRAM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2152, "Chest and cardiac studies (item 3601)", 2152, "CHESTANDCARDIACSTUDIES(ITEM3601)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2176, "Dedicated angiography suite: Analogue monoplane unit. Once off charge per patient by owner of equipment", 2176, "DEDICATEDANGIOGRAPHYSUITE:ANALOGUEMONOPLANEUNIT.ONCEOFFCHARGEPERPATIENTBYOWNEROFEQUIPMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2174, "Hystero-salpingography", 2174, "HYSTERO-SALPINGOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2154, "Sternum or sterno-clavicular joints", 2154, "STERNUMORSTERNO-CLAVICULARJOINTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2155, "Bronchography: Unilateral", 2155, "BRONCHOGRAPHY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2156, "Bronchography: Bilateral", 2156, "BRONCHOGRAPHY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2105, "Introduction of contrast medium", 2105, "INTRODUCTIONOFCONTRASTMEDIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2158, "Pleurography", 2158, "PLEUROGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2159, "For introduction of contrast medium: ADD", 2159, "FORINTRODUCTIONOFCONTRASTMEDIUM:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2160, "Laryngography", 2160, "LARYNGOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2161, "For introduction of contrast medium: ADD", 2161, "FORINTRODUCTIONOFCONTRASTMEDIUM:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2162, "Thoracic inlet", 2162, "THORACICINLET", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2175, "Introduction of contrast medium: ADD", 2175, "INTRODUCTIONOFCONTRASTMEDIUM:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2163, "Control films of the Abdomen (not being part of examination for barium meal, barium enema, pyelogram, cholecystogram, cholangiogram etc.)", 2163, "CONTROLFILMSOFTHEABDOMEN(NOTBEINGPARTOFEXAMINATIONFORBARIUMMEAL,BARIUMENEMA,PYELOGRAM,CHOLECYSTOGRAM,CHOLANGIOGRAMETC.)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2165, "Excretory urogram: Control film included and bladder views before and after micturition (intravenous pyelogram) (item 0206 not applicable)", 2165, "EXCRETORYUROGRAM:CONTROLFILMINCLUDEDANDBLADDERVIEWSBEFOREANDAFTERMICTURITION(INTRAVENOUSPYELOGRAM)(ITEM0206NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2166, "Waterload test: ADD", 2166, "WATERLOADTEST:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2167, "Cystography only or urethrography only (retrograde)", 2167, "CYSTOGRAPHYONLYORURETHROGRAPHYONLY(RETROGRADE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2168, "Cysto-urethrography: Retrograde", 2168, "CYSTO-URETHROGRAPHY:RETROGRADE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2169, "Cysto-urethrography: Introduction of contrast medium", 2169, "CYSTO-URETHROGRAPHY:INTRODUCTIONOFCONTRASTMEDIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2170, "Retrograde-prograde pyelography", 2170, "RETROGRADE-PROGRADEPYELOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2171, "Aspiration renal cyst", 2171, "ASPIRATIONRENALCYST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2172, "Pregnancy", 2172, "PREGNANCY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2173, "Pelvimetry", 2173, "PELVIMETRY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2164, "Acute abdomen or equivalent studies", 2164, "ACUTEABDOMENOREQUIVALENTSTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2104, "Multiple (lumbar, thoracic, cervical): Same fee as for first segment (no additional introduction of contrast medium)", 2104, "MULTIPLE(LUMBAR,THORACIC,CERVICAL):SAMEFEEASFORFIRSTSEGMENT(NOADDITIONALINTRODUCTIONOFCONTRASTMEDIUM)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2097, "Per region, e.g. cervical, sacral, lumbar coccygeal, one region thoracic", 2097, "PERREGION,E.G.CERVICAL,SACRAL,LUMBARCOCCYGEAL,ONEREGIONTHORACIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2102, "Myelography: Thoracic", 2102, "MYELOGRAPHY:THORACIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2033, "Cochleo-vestibular neurectomy", 2033, "COCHLEO-VESTIBULARNEURECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2034, "Facial nerve surgery in the internal auditory canal, translabyrinthine (if grafting is required, the grafting and harvesting of graft are included)", 2034, "FACIALNERVESURGERYINTHEINTERNALAUDITORYCANAL,TRANSLABYRINTHINE(IFGRAFTINGISREQUIRED,THEGRAFTINGANDHARVESTINGOFGRAFTAREINCLUDED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2035, "Removal of acoustic neuroma or cyst of the internal auditory canal", 2035, "REMOVALOFACOUSTICNEUROMAORCYSTOFTHEINTERNALAUDITORYCANAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2036, "Removal of tumour for the jugular foramen, internal carotid artery, petrous apex and large intratemporal tumours", 2036, "REMOVALOFTUMOURFORTHEJUGULARFORAMEN,INTERNALCAROTIDARTERY,PETROUSAPEXANDLARGEINTRATEMPORALTUMOURS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2037, "Removal of tumour of the petrous apex", 2037, "REMOVALOFTUMOUROFTHEPETROUSAPEX", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2038, "Removal of tumour of the clivus", 2038, "REMOVALOFTUMOUROFTHECLIVUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2039, "Removal of nasopharyngeal angiofibroma or carcinoma", 2039, "REMOVALOFNASOPHARYNGEALANGIOFIBROMAORCARCINOMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2040, "Removal of tumour from the intratemporal fossa, pterygopalatine fossa, parasellar region or nasopharynx", 2040, "REMOVALOFTUMOURFROMTHEINTRATEMPORALFOSSA,PTERYGOPALATINEFOSSA,PARASELLARREGIONORNASOPHARYNX", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2041, "Subtotal petrosectomy for removal of temporal bone tumour", 2041, "SUBTOTALPETROSECTOMYFORREMOVALOFTEMPORALBONETUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2032, "Acoustic neuroma removal translabyrinthine", 2032, "ACOUSTICNEUROMAREMOVALTRANSLABYRINTHINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2042, "Subtotal petrosectomy for CSF leak and/or for total obliteration of the mastoid cavity", 2042, "SUBTOTALPETROSECTOMYFORCSFLEAKAND/ORFORTOTALOBLITERATIONOFTHEMASTOIDCAVITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2044, "Total mastoido-tympanectomy for more extensive malignancy of the deep lobe of the parotid gland", 2044, "TOTALMASTOIDO-TYMPANECTOMYFORMOREEXTENSIVEMALIGNANCYOFTHEDEEPLOBEOFTHEPAROTIDGLAND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2045, "Extended petrosectomy for extensive malignancy of the deep lobe of the parotid gland", 2045, "EXTENDEDPETROSECTOMYFOREXTENSIVEMALIGNANCYOFTHEDEEPLOBEOFTHEPAROTIDGLAND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2046, "Domiciliary or nursing home treatment (only applicable where a patient is physically incapable of attending the rooms, and the equipment has to be transported to the patient)", 2046, "DOMICILIARYORNURSINGHOMETREATMENT(ONLYAPPLICABLEWHEREAPATIENTISPHYSICALLYINCAPABLEOFATTENDINGTHEROOMS,ANDTHEEQUIPMENTHASTOBETRANSPORTEDTOTHEPATIENT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2047, "Consultation units for specialists in physical medicine when treatment is given (per treatment)", 2047, "CONSULTATIONUNITSFORSPECIALISTSINPHYSICALMEDICINEWHENTREATMENTISGIVEN(PERTREATMENT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2048, "Ultrasonic therapy", 2048, "ULTRASONICTHERAPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2049, "Shortwave diathermy", 2049, "SHORTWAVEDIATHERMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2050, "Sensory nerve conduction studies", 2050, "SENSORYNERVECONDUCTIONSTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2051, "Motor nerve conduction studies", 2051, "MOTORNERVECONDUCTIONSTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2052, "Spinal joint and ligament injection", 2052, "SPINALJOINTANDLIGAMENTINJECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2043, "Partial mastoido-tympanectomy for malignancy of the deep lobe of the parotid gland", 2043, "PARTIALMASTOIDO-TYMPANECTOMYFORMALIGNANCYOFTHEDEEPLOBEOFTHEPAROTIDGLAND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2053, "Epidural injection", 2053, "EPIDURALINJECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2031, "Removal of acoustic neuroma via the middle fossa approach", 2031, "REMOVALOFACOUSTICNEUROMAVIATHEMIDDLEFOSSAAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2029, "Facial nerve surgery inside the internal auditory canal (if grafting is required, the grafting and harvesting of graft are included)", 2029, "FACIALNERVESURGERYINSIDETHEINTERNALAUDITORYCANAL(IFGRAFTINGISREQUIRED,THEGRAFTINGANDHARVESTINGOFGRAFTAREINCLUDED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2009, "Pure tone audiometry (air conduction)", 2009, "PURETONEAUDIOMETRY(AIRCONDUCTION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2010, "Pure tone audiometry (bone conduction with masking)", 2010, "PURETONEAUDIOMETRY(BONECONDUCTIONWITHMASKING)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2011, "Impedance audiometry (tympanometry)", 2011, "IMPEDANCEAUDIOMETRY(TYMPANOMETRY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2012, "Impedance audiometry (stapedial reflex) - no charge for volume, compliance etc.", 2012, "IMPEDANCEAUDIOMETRY(STAPEDIALREFLEX)-NOCHARGEFORVOLUME,COMPLIANCEETC.", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2013, "Speech audiometry: Fee includes speech audiogram, speech reception threshold, discrimination score", 2013, "SPEECHAUDIOMETRY:FEEINCLUDESSPEECHAUDIOGRAM,SPEECHRECEPTIONTHRESHOLD,DISCRIMINATIONSCORE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2014, "Recruitment tests: Inclusive fee (Bekesy, Fowler, etc.)", 2014, "RECRUITMENTTESTS:INCLUSIVEFEE(BEKESY,FOWLER,ETC.)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2015, "Minimal caloric test (excluding consultation fee)", 2015, "MINIMALCALORICTEST(EXCLUDINGCONSULTATIONFEE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2016, "Bithermal Halpike caloric test (excluding consultation fee)", 2016, "BITHERMALHALPIKECALORICTEST(EXCLUDINGCONSULTATIONFEE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2017, "Electro-nystagmography for spontaneous and positional nystagmus", 2017, "ELECTRO-NYSTAGMOGRAPHYFORSPONTANEOUSANDPOSITIONALNYSTAGMUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2030, "Vestibular neurectomy, removal of supra-labyrinthine tumours, or similar procedures", 2030, "VESTIBULARNEURECTOMY,REMOVALOFSUPRA-LABYRINTHINETUMOURS,ORSIMILARPROCEDURES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2018, "Video nystagmoscopy (monocular)", 2018, "VIDEONYSTAGMOSCOPY(MONOCULAR)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2020, "Video nystagmoscopy (binocular)", 2020, "VIDEONYSTAGMOSCOPY(BINOCULAR)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2021, "Otolith repositioning manoeuvre", 2021, "OTOLITHREPOSITIONINGMANOEUVRE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2022, "Computerised static posturography consists of standing a patient on a Piezo-electric platform which tests the vestibular and proprioceptive systems", 2022, "COMPUTERISEDSTATICPOSTUROGRAPHYCONSISTSOFSTANDINGAPATIENTONAPIEZO-ELECTRICPLATFORMWHICHTESTSTHEVESTIBULARANDPROPRIOCEPTIVESYSTEMS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2023, "Labyrinthectomy via the middle ear or mastoid", 2023, "LABYRINTHECTOMYVIATHEMIDDLEEARORMASTOID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2024, "Endolymphatic sac surgery", 2024, "ENDOLYMPHATICSACSURGERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2025, "Fenestration and occulasion of the posterior semicircular canal (FOS) for benign paroxysmal positioning vertigo (BPPV)", 2025, "FENESTRATIONANDOCCULASIONOFTHEPOSTERIORSEMICIRCULARCANAL(FOS)FORBENIGNPAROXYSMALPOSITIONINGVERTIGO(BPPV)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2026, "Cochlear implant surgery", 2026, "COCHLEARIMPLANTSURGERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2027, "Facial nerve: Exploration of the labyrinthine segment", 2027, "FACIALNERVE:EXPLORATIONOFTHELABYRINTHINESEGMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2028, "Facial nerve: Grafting of labyrinthine segment (graft removal and exploration of labyrinthine segment are included)", 2028, "FACIALNERVE:GRAFTINGOFLABYRINTHINESEGMENT(GRAFTREMOVALANDEXPLORATIONOFLABYRINTHINESEGMENTAREINCLUDED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2019, "Caloric test done with electronystamography", 2019, "CALORICTESTDONEWITHELECTRONYSTAMOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2054, "Multiple injections: First joint", 2054, "MULTIPLEINJECTIONS:FIRSTJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2055, "Multiple injections: Each additional joint", 2055, "MULTIPLEINJECTIONS:EACHADDITIONALJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2056, "Tendon or ligament injection", 2056, "TENDONORLIGAMENTINJECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2082, "Elbow", 2082, "ELBOW", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2083, "Humerus", 2083, "HUMERUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2084, "Shoulder", 2084, "SHOULDER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2085, "Acromio-Clavicula joint", 2085, "ACROMIO-CLAVICULAJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2086, "Clavicle", 2086, "CLAVICLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2087, "Scapula", 2087, "SCAPULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2088, "Foot", 2088, "FOOT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2089, "Ankle", 2089, "ANKLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2090, "Calcaneus", 2090, "CALCANEUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2081, "Radius and ulna", 2081, "RADIUSANDULNA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2091, "Tibia and fibula", 2091, "TIBIAANDFIBULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2093, "Patella", 2093, "PATELLA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2094, "Femur", 2094, "FEMUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2095, "Hip", 2095, "HIP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2096, "Sesamoid Bone", 2096, "SESAMOIDBONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2198, "Tomography (conventional except where otherwise specified): ADD 100% provided that if it is more than one dimension fee shall be charged for the additional investigation at 50% of the tariff with a maximum of two additional investigations", 2198, "TOMOGRAPHY(CONVENTIONALEXCEPTWHEREOTHERWISESPECIFIED):ADD100%PROVIDEDTHATIFITISMORETHANONEDIMENSIONFEESHALLBECHARGEDFORTHEADDITIONALINVESTIGATIONAT50%OFTHETARIFFWITHAMAXIMUMOFTWOADDITIONALINVESTIGATIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2098, "Stress studies", 2098, "STRESSSTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2099, "Scoliosis studies", 2099, "SCOLIOSISSTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2100, "Pelvis (Sacro-iliac or hip joints only to be added where an extra set of view is required)", 2100, "PELVIS(SACRO-ILIACORHIPJOINTSONLYTOBEADDEDWHEREANEXTRASETOFVIEWISREQUIRED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2101, "Myelography: Lumbar", 2101, "MYELOGRAPHY:LUMBAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2092, "Knee", 2092, "KNEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2080, "Scaphoid", 2080, "SCAPHOID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2079, "Wrist (specify region)", 2079, "WRIST(SPECIFYREGION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2078, "Hand", 2078, "HAND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2057, "Aspiration of joint or inter-articular injection", 2057, "ASPIRATIONOFJOINTORINTER-ARTICULARINJECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2058, "Aspiration or injection of bursa or ganglion", 2058, "ASPIRATIONORINJECTIONOFBURSAORGANGLION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2059, "Paracervical (neck) nerve block (for pelvis refer to item 2389)", 2059, "PARACERVICAL(NECK)NERVEBLOCK(FORPELVISREFERTOITEM2389)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2060, "Paravertebral root block: Unilateral", 2060, "PARAVERTEBRALROOTBLOCK:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2061, "Paravertebral root block: Bilateral", 2061, "PARAVERTEBRALROOTBLOCK:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2062, "Manipulation of spine performed by a specialist in Physical Medicine", 2062, "MANIPULATIONOFSPINEPERFORMEDBYASPECIALISTINPHYSICALMEDICINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2063, "Spinal traction", 2063, "SPINALTRACTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2064, "Manipulation of large joints: Under general anaesthesia", 2064, "MANIPULATIONOFLARGEJOINTS:UNDERGENERALANAESTHESIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2065, "Manipulation of large joints: Without anaesthetic", 2065, "MANIPULATIONOFLARGEJOINTS:WITHOUTANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2066, "Muscle fatigue studies", 2066, "MUSCLEFATIGUESTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2067, "Strength duration curve per session", 2067, "STRENGTHDURATIONCURVEPERSESSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2068, "Electromyography", 2068, "ELECTROMYOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2069, "All other physical treatments carried out: Complete physical treatment: Specify treatment (For subsequent treatments by a general practitioner, for the same condition within 4 months after initial treatment: A fee for the treatment only, is applicable: See general rules L and M)", 2069, "ALLOTHERPHYSICALTREATMENTSCARRIEDOUT:COMPLETEPHYSICALTREATMENT:SPECIFYTREATMENT(FORSUBSEQUENTTREATMENTSBYAGENERALPRACTITIONER,FORTHESAMECONDITIONWITHIN4MONTHSAFTERINITIALTREATMENT:AFEEFORTHETREATMENTONLY,ISAPPLICABLE:SEEGENERALRULESLANDM)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2070, "Finger, toe", 2070, "FINGER,TOE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2071, "Smith-Petersen or equivalent control, in theatre", 2071, "SMITH-PETERSENOREQUIVALENTCONTROL,INTHEATRE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2072, "Stress studies, e.g, joint", 2072, "STRESSSTUDIES,E.G,JOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2073, "Full length study, both legs", 2073, "FULLLENGTHSTUDY,BOTHLEGS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2074, "Skeletal survey under 5 years", 2074, "SKELETALSURVEYUNDER5YEARS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2075, "Skeletal survey over 5 years", 2075, "SKELETALSURVEYOVER5YEARS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2076, "Arthrography per joint", 2076, "ARTHROGRAPHYPERJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2077, "Introduction of contrast medium or air: ADD", 2077, "INTRODUCTIONOFCONTRASTMEDIUMORAIR:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2103, "Myelography: Cervical", 2103, "MYELOGRAPHY:CERVICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2199, "Tomography (multi-dimensional in motion): ADD 150%", 2199, "TOMOGRAPHY(MULTI-DIMENSIONALINMOTION):ADD150%", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2206, "Plus spiral CT", 2206, "PLUSSPIRALCT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2201, "Cinematography: For each series after the first: ADD 80% of the primary fee", 2201, "CINEMATOGRAPHY:FOREACHSERIESAFTERTHEFIRST:ADD80%OFTHEPRIMARYFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2323, "Ultrasound of joints (e.g. shoulder, hip, knee), per joint", 2323, "ULTRASOUNDOFJOINTS(E.G.SHOULDER,HIP,KNEE),PERJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2324, "Ultrasound soft tissue, any region", 2324, "ULTRASOUNDSOFTTISSUE,ANYREGION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2325, "Obstetric ultrasound before 10 weeks gestational age for complicated pregnancy i.e. suspected ectopic pregnancy abortion or discrepancy between gestational age and dates. Not to be used for routine diagnosis of pregnancy", 2325, "OBSTETRICULTRASOUNDBEFORE10WEEKSGESTATIONALAGEFORCOMPLICATEDPREGNANCYI.E.SUSPECTEDECTOPICPREGNANCYABORTIONORDISCREPANCYBETWEENGESTATIONALAGEANDDATES.NOTTOBEUSEDFORROUTINEDIAGNOSISOFPREGNANCY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2326, "Ultrasound after 24 weeks - motivation required", 2326, "ULTRASOUNDAFTER24WEEKS-MOTIVATIONREQUIRED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2327, "Second opinion obstetric ultrasound may be charged by practitioners accepted by SASOG or RSSA (list of names available from SASOG or RSSA)", 2327, "SECONDOPINIONOBSTETRICULTRASOUNDMAYBECHARGEDBYPRACTITIONERSACCEPTEDBYSASOGORRSSA(LISTOFNAMESAVAILABLEFROMSASOGORRSSA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2328, "Carotid ultrasound vascular study : B mode, pulsed and colour Doppler ", 2328, "CAROTIDULTRASOUNDVASCULARSTUDY:BMODE,PULSEDANDCOLOURDOPPLER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2329, "Full ultrasonic and colour Doppler evaluation of entire extracranial vascular tree: Carotids, vertebral and subclavian vessels (not to be used together with items 5110, 5112, 5113 or 5114)", 2329, "FULLULTRASONICANDCOLOURDOPPLEREVALUATIONOFENTIREEXTRACRANIALVASCULARTREE:CAROTIDS,VERTEBRALANDSUBCLAVIANVESSELS(NOTTOBEUSEDTOGETHERWITHITEMS5110,5112,5113OR5114)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2330, "Peripheral arterial ultrasound vascular study : B mode, pulsed and colour Doppler ", 2330, "PERIPHERALARTERIALULTRASOUNDVASCULARSTUDY:BMODE,PULSEDANDCOLOURDOPPLER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2331, "Peripheral venous ultrasound vascular study ", 2331, "PERIPHERALVENOUSULTRASOUNDVASCULARSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2322, "Pleural space ultrasound", 2322, "PLEURALSPACEULTRASOUND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2332, "Peripheral venous ultrasound vascular study ", 2332, "PERIPHERALVENOUSULTRASOUNDVASCULARSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2334, "Diagnostic intravascular ultrasound (IVUS) imaging or wave wire mapping (without accompanying angioplasty). May be used only once per angiographic procedure", 2334, "DIAGNOSTICINTRAVASCULARULTRASOUND(IVUS)IMAGINGORWAVEWIREMAPPING(WITHOUTACCOMPANYINGANGIOPLASTY).MAYBEUSEDONLYONCEPERANGIOGRAPHICPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2335, "Diagnostic intravascular ultrasound imaging or wave wire imaging (with accompanying angioplasty or accompanying intravascular ultrasound imaging or wave wire mapping in a different coronary artery [LAD (left anterior desending), Circumflex or Right coronary artery]). May be used a maximum of twice per angiographic procedure", 2335, "DIAGNOSTICINTRAVASCULARULTRASOUNDIMAGINGORWAVEWIREIMAGING(WITHACCOMPANYINGANGIOPLASTYORACCOMPANYINGINTRAVASCULARULTRASOUNDIMAGINGORWAVEWIREMAPPINGINADIFFERENTCORONARYARTERY[LAD(LEFTANTERIORDESENDING),CIRCUMFLEXORRIGHTCORONARYARTERY]).MAYBEUSEDAMAXIMUMOFTWICEPERANGIOGRAPHICPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2336, "Where portable X-ray unit is used in the hospital or theatre: ADD", 2336, "WHEREPORTABLEX-RAYUNITISUSEDINTHEHOSPITALORTHEATRE:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2337, "Theatre investigations with fixed installation", 2337, "THEATREINVESTIGATIONSWITHFIXEDINSTALLATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2338, "Tracer test", 2338, "TRACERTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2339, "Repeat of further tracer tests for same investigation: Half of above fee", 2339, "REPEATOFFURTHERTRACERTESTSFORSAMEINVESTIGATION:HALFOFABOVEFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2340, "If both tracer and therapeutic procedures are done, half fee of tracer test to be charged plus therapeutic fee", 2340, "IFBOTHTRACERANDTHERAPEUTICPROCEDURESAREDONE,HALFFEEOFTRACERTESTTOBECHARGEDPLUSTHERAPEUTICFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2341, "Tracer test of complete body or brain tumour location", 2341, "TRACERTESTOFCOMPLETEBODYORBRAINTUMOURLOCATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2342, "Other organ scanning with use of relevant radio isotopes", 2342, "OTHERORGANSCANNINGWITHUSEOFRELEVANTRADIOISOTOPES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2333, "Intra-operative ultrasound study", 2333, "INTRA-OPERATIVEULTRASOUNDSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2343, "Thyroid scanning", 2343, "THYROIDSCANNING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2321, "Pelvic organs ultrasound: Transvaginal or trans rectal probe", 2321, "PELVICORGANSULTRASOUND:TRANSVAGINALORTRANSRECTALPROBE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2319, "+ Colour Doppler (may be added onto any other regional exam, but not to be added to items 3605, 5110, 5111, 5112, 5113 or 5114)", 2319, "+COLOURDOPPLER(MAYBEADDEDONTOANYOTHERREGIONALEXAM,BUTNOTTOBEADDEDTOITEMS3605,5110,5111,5112,5113OR5114)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2299, "Contrast media: General Rule Y applies", 2299, "CONTRASTMEDIA:GENERALRULEYAPPLIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2300, "Routine obstetric ultrasound at 20 to 24 weeks to include detailed anatomical assessment", 2300, "ROUTINEOBSTETRICULTRASOUNDAT20TO24WEEKSTOINCLUDEDETAILEDANATOMICALASSESSMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2301, "Pelvic organs ultrasound transabdominal probe (this is a gynaecological ultrasound examination and may not be used in pregnancy)", 2301, "PELVICORGANSULTRASOUNDTRANSABDOMINALPROBE(THISISAGYNAECOLOGICALULTRASOUNDEXAMINATIONANDMAYNOTBEUSEDINPREGNANCY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2302, "Intravascular ultrasound imaging assesses the atheroschlerotic process to guide the placement of an intracoronary stent. This item may be applied once per vessel (left anterior descending territory, circumflex territory and/or right coronary territory) in which a stent or multiple stents are deployed", 2302, "INTRAVASCULARULTRASOUNDIMAGINGASSESSESTHEATHEROSCHLEROTICPROCESSTOGUIDETHEPLACEMENTOFANINTRACORONARYSTENT.THISITEMMAYBEAPPLIEDONCEPERVESSEL(LEFTANTERIORDESCENDINGTERRITORY,CIRCUMFLEXTERRITORYAND/ORRIGHTCORONARYTERRITORY)INWHICHASTENTORMULTIPLESTENTSAREDEPLOYED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2303, "Cardiac examination plus Doppler colour mapping", 2303, "CARDIACEXAMINATIONPLUSDOPPLERCOLOURMAPPING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2304, "Cardiac examination (MMode)", 2304, "CARDIACEXAMINATION(MMODE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2305, "Cardiac examination: 2 Dimensional", 2305, "CARDIACEXAMINATION:2DIMENSIONAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2306, "Cardiac examination + effort", 2306, "CARDIACEXAMINATION+EFFORT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2307, "Cardiac examinations + contrast", 2307, "CARDIACEXAMINATIONS+CONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2320, "Ultrasound guided amniocentesis", 2320, "ULTRASOUNDGUIDEDAMNIOCENTESIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2308, "Cardiac examinations + doppler", 2308, "CARDIACEXAMINATIONS+DOPPLER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2310, "Ultrasound examination includes whole abdomen and pelvic organs, where pelvic organs are clinically indicated (including liver, gall bladder, spleen, pancreas, abdominal vascular anatomy, para-aortic area, renal tract, pelvic organs)", 2310, "ULTRASOUNDEXAMINATIONINCLUDESWHOLEABDOMENANDPELVICORGANS,WHEREPELVICORGANSARECLINICALLYINDICATED(INCLUDINGLIVER,GALLBLADDER,SPLEEN,PANCREAS,ABDOMINALVASCULARANATOMY,PARA-AORTICAREA,RENALTRACT,PELVICORGANS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2311, "Renal tract", 2311, "RENALTRACT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2312, "High definition (small parts) scan: Thyroid, breast lump, scrotum, etc.", 2312, "HIGHDEFINITION(SMALLPARTS)SCAN:THYROID,BREASTLUMP,SCROTUM,ETC.", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2313, "Ophthalmic examination", 2313, "OPHTHALMICEXAMINATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2314, "Axial length measurement and calculation of intra ocular lens power. Per eye. Not to be used with item 3034", 2314, "AXIALLENGTHMEASUREMENTANDCALCULATIONOFINTRAOCULARLENSPOWER.PEREYE.NOTTOBEUSEDWITHITEM3034", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2315, "Neonatal head scan", 2315, "NEONATALHEADSCAN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2316, "Peripheral vascular study, B mode only", 2316, "PERIPHERALVASCULARSTUDY,BMODEONLY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2317, "+ Doppler", 2317, "+DOPPLER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2318, "Trans-oesophageal echocardiography including passing the device", 2318, "TRANS-OESOPHAGEALECHOCARDIOGRAPHYINCLUDINGPASSINGTHEDEVICE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2309, "Cardiac examination + phonocardiography", 2309, "CARDIACEXAMINATION+PHONOCARDIOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2344, "Positron Emission Tomography (PET) imaging of the whole body using a Coincidence Camera", 2344, "POSITRONEMISSIONTOMOGRAPHY(PET)IMAGINGOFTHEWHOLEBODYUSINGACOINCIDENCECAMERA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2345, "Positron Emission Tomography (PET) imaging of a limited body region using a Coincidence Camera", 2345, "POSITRONEMISSIONTOMOGRAPHY(PET)IMAGINGOFALIMITEDBODYREGIONUSINGACOINCIDENCECAMERA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2346, "Percutaneous transluminal angioplasty: Aortic/IVC", 2346, "PERCUTANEOUSTRANSLUMINALANGIOPLASTY:AORTIC/IVC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2372, "Biliary stent insertion", 2372, "BILIARYSTENTINSERTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2373, "Percutaneous gall bladder drainage", 2373, "PERCUTANEOUSGALLBLADDERDRAINAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2374, "Percutaneous or renal gall bladder stone removal", 2374, "PERCUTANEOUSORRENALGALLBLADDERSTONEREMOVAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2375, "Stent insertion: Aortic/IVC - including percutaneous transluminal angioplasty (PTA)", 2375, "STENTINSERTION:AORTIC/IVC-INCLUDINGPERCUTANEOUSTRANSLUMINALANGIOPLASTY(PTA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2376, "Stent insertion: Iliac/subclavian/AV fistula - including percutaneous transluminal angioplasty (PTA)", 2376, "STENTINSERTION:ILIAC/SUBCLAVIAN/AVFISTULA-INCLUDINGPERCUTANEOUSTRANSLUMINALANGIOPLASTY(PTA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2377, "Stent insertion: Femoral popliteal bifurcation, axillary and brachial - including percutaneous transluminal angioplasty (PTA)", 2377, "STENTINSERTION:FEMORALPOPLITEALBIFURCATION,AXILLARYANDBRACHIAL-INCLUDINGPERCUTANEOUSTRANSLUMINALANGIOPLASTY(PTA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2378, "Stent insertion: Sub-popliteal - including percutaneous transluminal angioplasty (PTA)", 2378, "STENTINSERTION:SUB-POPLITEAL-INCLUDINGPERCUTANEOUSTRANSLUMINALANGIOPLASTY(PTA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2379, "Stent insertion: Renal/visceral/brachiocephalic - including percutaneous transluminal angioplasty (PTA)", 2379, "STENTINSERTION:RENAL/VISCERAL/BRACHIOCEPHALIC-INCLUDINGPERCUTANEOUSTRANSLUMINALANGIOPLASTY(PTA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2380, "Stent insertion: Extracranial carotid/vertebral - including percutaneous transluminal angioplasty (PTA) - stand alone procedure", 2380, "STENTINSERTION:EXTRACRANIALCAROTID/VERTEBRAL-INCLUDINGPERCUTANEOUSTRANSLUMINALANGIOPLASTY(PTA)-STANDALONEPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2371, "Combined internal/external biliary drainage", 2371, "COMBINEDINTERNAL/EXTERNALBILIARYDRAINAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2381, "Stent insertion: Aorto-iliac stent graft - including percutaneous transluminal angioplasty (PTA)", 2381, "STENTINSERTION:AORTO-ILIACSTENTGRAFT-INCLUDINGPERCUTANEOUSTRANSLUMINALANGIOPLASTY(PTA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2383, "IVC filter insertion jugular or femoral route", 2383, "IVCFILTERINSERTIONJUGULARORFEMORALROUTE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2384, "Intravascular foreign body removal, arterial or venous, any route", 2384, "INTRAVASCULARFOREIGNBODYREMOVAL,ARTERIALORVENOUS,ANYROUTE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2385, "Percutaneous sclerotherapy of an arteriovenous malformation (AVM)", 2385, "PERCUTANEOUSSCLEROTHERAPYOFANARTERIOVENOUSMALFORMATION(AVM)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2386, "Transjugular intrahepatic porto-systemic shunt", 2386, "TRANSJUGULARINTRAHEPATICPORTO-SYSTEMICSHUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2387, "Transjugular liver biopsy", 2387, "TRANSJUGULARLIVERBIOPSY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2388, "Endoluminal fallopian tube recanalisation", 2388, "ENDOLUMINALFALLOPIANTUBERECANALISATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2389, "Renal cyst aspiration/ablation", 2389, "RENALCYSTASPIRATION/ABLATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2390, "Oesophageal stent insertion in radiology suite", 2390, "OESOPHAGEALSTENTINSERTIONINRADIOLOGYSUITE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2391, "Tracheal stent insertion", 2391, "TRACHEALSTENTINSERTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2382, "Tunnelled/subcutaneous arterial/venous line performed in radiology suite", 2382, "TUNNELLED/SUBCUTANEOUSARTERIAL/VENOUSLINEPERFORMEDINRADIOLOGYSUITE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2370, "Percutaneous biliary drainage (external)", 2370, "PERCUTANEOUSBILIARYDRAINAGE(EXTERNAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2369, "Hepatic arterial infusion catheter insertion", 2369, "HEPATICARTERIALINFUSIONCATHETERINSERTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2368, "Transhepatic portogram", 2368, "TRANSHEPATICPORTOGRAM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2347, "Percutaneous transluminal angioplasty, arterial or venous, iliac vessel/subclavian vessel", 2347, "PERCUTANEOUSTRANSLUMINALANGIOPLASTY,ARTERIALORVENOUS,ILIACVESSEL/SUBCLAVIANVESSEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2348, "Percutaneous transluminal angioplasty: Femoral to popliteal bifurcation, axillary and brachial", 2348, "PERCUTANEOUSTRANSLUMINALANGIOPLASTY:FEMORALTOPOPLITEALBIFURCATION,AXILLARYANDBRACHIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2349, "Percutaneous transluminal angioplasty: Sub-popliteal sub-brachial", 2349, "PERCUTANEOUSTRANSLUMINALANGIOPLASTY:SUB-POPLITEALSUB-BRACHIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2350, "Percutaneous transluminal angioplasty: Renal/Visceral/Brachiocephalic", 2350, "PERCUTANEOUSTRANSLUMINALANGIOPLASTY:RENAL/VISCERAL/BRACHIOCEPHALIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2351, "Percutaneous transluminal angioplasty: Extracranial Carotid/Vertebral - stand alone procedure", 2351, "PERCUTANEOUSTRANSLUMINALANGIOPLASTY:EXTRACRANIALCAROTID/VERTEBRAL-STANDALONEPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2352, "Atherectomy (per vessel)", 2352, "ATHERECTOMY(PERVESSEL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2353, "Aspiration thrombectomy (per vessel)", 2353, "ASPIRATIONTHROMBECTOMY(PERVESSEL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2354, "On-table thrombolysis/transcatheter infusion performed in angiography suite", 2354, "ON-TABLETHROMBOLYSIS/TRANSCATHETERINFUSIONPERFORMEDINANGIOGRAPHYSUITE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2355, "Embolisation non-intracranial, per vessel", 2355, "EMBOLISATIONNON-INTRACRANIAL,PERVESSEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2356, "Percutaneous nephrostomy for further procedure or drainage", 2356, "PERCUTANEOUSNEPHROSTOMYFORFURTHERPROCEDUREORDRAINAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2357, "Antegrade ureteric stent insertion", 2357, "ANTEGRADEURETERICSTENTINSERTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2358, "Percutaneous cystostomy in radiology suite", 2358, "PERCUTANEOUSCYSTOSTOMYINRADIOLOGYSUITE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2359, "Urethral balloon dilatation in radiology suite", 2359, "URETHRALBALLOONDILATATIONINRADIOLOGYSUITE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2360, "Percutaneous abdominal/pelvic/other drain insertion, any modality", 2360, "PERCUTANEOUSABDOMINAL/PELVIC/OTHERDRAININSERTION,ANYMODALITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2361, "Urethral stenting in radiology suite", 2361, "URETHRALSTENTINGINRADIOLOGYSUITE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2362, "Intracranial/spinal AVM embolisation (per session)", 2362, "INTRACRANIAL/SPINALAVMEMBOLISATION(PERSESSION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2363, "Intracranial thrombolysis (on-table) per session", 2363, "INTRACRANIALTHROMBOLYSIS(ON-TABLE)PERSESSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2364, "Intracranial aneurysm occlusion", 2364, "INTRACRANIALANEURYSMOCCLUSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2365, "Balloon occlusion/Wada test", 2365, "BALLOONOCCLUSION/WADATEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2366, "Carotico/cavernous fistula/head and neck AV fistula embolisation", 2366, "CAROTICO/CAVERNOUSFISTULA/HEADANDNECKAVFISTULAEMBOLISATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2367, "Intracranial angioplasty", 2367, "INTRACRANIALANGIOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2298, "Routine obstetric ultrasound at 10 to 20 weeks gestational age preferable at 10 to 14 weeks gestational age to include nuchal translucency assessment", 2298, "ROUTINEOBSTETRICULTRASOUNDAT10TO20WEEKSGESTATIONALAGEPREFERABLEAT10TO14WEEKSGESTATIONALAGETOINCLUDENUCHALTRANSLUCENCYASSESSMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2200, "Cinematography: For first series: ADD 100%", 2200, "CINEMATOGRAPHY:FORFIRSTSERIES:ADD100%", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2297, "Transvaginal aspiration of ova", 2297, "TRANSVAGINALASPIRATIONOFOVA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2295, "Transrectal ultrasonographic prostate volume study for prostate brachytherapy (own equipment)", 2295, "TRANSRECTALULTRASONOGRAPHICPROSTATEVOLUMESTUDYFORPROSTATEBRACHYTHERAPY(OWNEQUIPMENT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2226, "CT paranasal sinuses complete study, axial OR coronal, pre AND post contrast", 2226, "CTPARANASALSINUSESCOMPLETESTUDY,AXIALORCORONAL,PREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2227, "CT paranasal sinuses complete study, axial AND coronal, pre AND post contrast", 2227, "CTPARANASALSINUSESCOMPLETESTUDY,AXIALANDCORONAL,PREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2228, "CT pituitary fossa, uncontrasted", 2228, "CTPITUITARYFOSSA,UNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2229, "CT pituitary fossa, pre AND post contrast", 2229, "CTPITUITARYFOSSA,PREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2230, "CT internal auditory meati, uncontrasted", 2230, "CTINTERNALAUDITORYMEATI,UNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2231, "CT internal audiory meati, pre AND post contrast", 2231, "CTINTERNALAUDIORYMEATI,PREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2232, "CT mastoids", 2232, "CTMASTOIDS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2233, "CT ear structures, limited study", 2233, "CTEARSTRUCTURES,LIMITEDSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2234, "CT middle AND inner ear, complete study including reconstructions", 2234, "CTMIDDLEANDINNEREAR,COMPLETESTUDYINCLUDINGRECONSTRUCTIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2225, "CT paranasal sinuses complete study, axial AND coronal, uncontrasted", 2225, "CTPARANASALSINUSESCOMPLETESTUDY,AXIALANDCORONAL,UNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2235, "CT facial bones", 2235, "CTFACIALBONES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2237, "CT neck soft tissue with contrast only", 2237, "CTNECKSOFTTISSUEWITHCONTRASTONLY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2238, "CT neck pre AND post contrast", 2238, "CTNECKPREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2239, "CT cervical spine uncontrasted", 2239, "CTCERVICALSPINEUNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2240, "CT cervical spine pre AND post contrast", 2240, "CTCERVICALSPINEPREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2241, "CT cervical spine post myelogram", 2241, "CTCERVICALSPINEPOSTMYELOGRAM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2242, "CT dorsal spine uncontrasted", 2242, "CTDORSALSPINEUNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2243, "CT dorsal spine pre AND post contrast", 2243, "CTDORSALSPINEPREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2244, "CT dorsal spine post myelogram", 2244, "CTDORSALSPINEPOSTMYELOGRAM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2245, "CT lumbar spine uncontrasted", 2245, "CTLUMBARSPINEUNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2236, "CT neck soft tissue, uncontrasted", 2236, "CTNECKSOFTTISSUE,UNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2246, "CT lumbar spine pre AND post contrast", 2246, "CTLUMBARSPINEPREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2224, "CT paranasal sinuses complete study, axial or coronal, uncontrasted", 2224, "CTPARANASALSINUSESCOMPLETESTUDY,AXIALORCORONAL,UNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2222, "CT paranasal sinuses limited study axial OR coronal", 2222, "CTPARANASALSINUSESLIMITEDSTUDYAXIALORCORONAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2202, "Where a fully digital C-arm portable x-ray unit, with angiography/interventional capability is used in hospital or theatre, per half hour", 2202, "WHEREAFULLYDIGITALC-ARMPORTABLEX-RAYUNIT,WITHANGIOGRAPHY/INTERVENTIONALCAPABILITYISUSEDINHOSPITALORTHEATRE,PERHALFHOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2203, "Contrast media: General Rule Y applies (Please note: Item 0201 is not applicable for contrast media)", 2203, "CONTRASTMEDIA:GENERALRULEYAPPLIES(PLEASENOTE:ITEM0201ISNOTAPPLICABLEFORCONTRASTMEDIA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2204, "Electron beam computed tomography (EBCT) for assessment of coronary artery calcification (complete fee - no additions)", 2204, "ELECTRONBEAMCOMPUTEDTOMOGRAPHY(EBCT)FORASSESSMENTOFCORONARYARTERYCALCIFICATION(COMPLETEFEE-NOADDITIONS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2205, "Electron beam computed tomography (EBCT) of the heart. Total fee for contract examination excluding cost of contrast medium (not to be used for coronary artery calcium assessment or scoring - see item 3598)", 2205, "ELECTRONBEAMCOMPUTEDTOMOGRAPHY(EBCT)OFTHEHEART.TOTALFEEFORCONTRACTEXAMINATIONEXCLUDINGCOSTOFCONTRASTMEDIUM(NOTTOBEUSEDFORCORONARYARTERYCALCIUMASSESSMENTORSCORING-SEEITEM3598)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2008, "Otoacoustic emission (high risk patients only)", 2008, "OTOACOUSTICEMISSION(HIGHRISKPATIENTSONLY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2207, "Plus 3D reconstruction", 2207, "PLUS3DRECONSTRUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2208, "Plus high resolution study", 2208, "PLUSHIGHRESOLUTIONSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2209, "CT limb uncontrasted", 2209, "CTLIMBUNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2210, "CT limb with contrast only", 2210, "CTLIMBWITHCONTRASTONLY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2223, "CT paranasal sinuses limited study axial AND coronal", 2223, "CTPARANASALSINUSESLIMITEDSTUDYAXIALANDCORONAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2211, "CT limb pre- AND post contrast", 2211, "CTLIMBPRE-ANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2213, "CT joint with contrast only", 2213, "CTJOINTWITHCONTRASTONLY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2214, "CT joint pre AND post contrast", 2214, "CTJOINTPREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2215, "CT brain uncontrasted (including posterior fossa)", 2215, "CTBRAINUNCONTRASTED(INCLUDINGPOSTERIORFOSSA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2216, "CT brain with contrast only (including posterior fossa)", 2216, "CTBRAINWITHCONTRASTONLY(INCLUDINGPOSTERIORFOSSA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2217, "CT brain pre AND post contrast (including posterior fossa)", 2217, "CTBRAINPREANDPOSTCONTRAST(INCLUDINGPOSTERIORFOSSA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2218, "CT orbits complete study, axial OR coronal, uncontrasted", 2218, "CTORBITSCOMPLETESTUDY,AXIALORCORONAL,UNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2219, "CT orbits complete study, axial AND coronal, uncontrasted", 2219, "CTORBITSCOMPLETESTUDY,AXIALANDCORONAL,UNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2220, "CT orbits complete study, axial OR coronal pre AND post contrast", 2220, "CTORBITSCOMPLETESTUDY,AXIALORCORONALPREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2221, "CT orbits complete study, axial AND coronal pre AND post contrast", 2221, "CTORBITSCOMPLETESTUDY,AXIALANDCORONALPREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2212, "CT joint uncontrasted", 2212, "CTJOINTUNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2247, "CT lumbar spine post myelogram", 2247, "CTLUMBARSPINEPOSTMYELOGRAM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2248, "CT pelvimetry (topogram only)", 2248, "CTPELVIMETRY(TOPOGRAMONLY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2249, "CT chest uncontrasted", 2249, "CTCHESTUNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2275, "Quantitative CT for bone mineral density", 2275, "QUANTITATIVECTFORBONEMINERALDENSITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2276, "Triphasic study of the liver with CT Abdomen and Pelvis pre and post contrast", 2276, "TRIPHASICSTUDYOFTHELIVERWITHCTABDOMENANDPELVISPREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2277, "CT of the chest, triphasic study of the liver, abdomen and pelvis with contrast", 2277, "CTOFTHECHEST,TRIPHASICSTUDYOFTHELIVER,ABDOMENANDPELVISWITHCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2278, "Computer Aided Diagnosis for Mammography", 2278, "COMPUTERAIDEDDIAGNOSISFORMAMMOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2279, "Mammogram of surgically removed breast biopsy specimen", 2279, "MAMMOGRAMOFSURGICALLYREMOVEDBREASTBIOPSYSPECIMEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2280, "Peripheral bone densitometry utilizing ionizing radiation", 2280, "PERIPHERALBONEDENSITOMETRYUTILIZINGIONIZINGRADIATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2281, "Fluoroscopy: Per half hour: ADD (not applicable for items 3445 and 3447)", 2281, "FLUOROSCOPY:PERHALFHOUR:ADD(NOTAPPLICABLEFORITEMS3445AND3447)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2282, "Where a C-arm portable X-ray unit is used in hospital or theatre: Per half hour: ADD", 2282, "WHEREAC-ARMPORTABLEX-RAYUNITISUSEDINHOSPITALORTHEATRE:PERHALFHOUR:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2283, "Sinography", 2283, "SINOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2274, "CT for radiotherapy planning (not to be used as an add-on)", 2274, "CTFORRADIOTHERAPYPLANNING(NOTTOBEUSEDASANADD-ON)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2284, "Bone densitometry (to be charged once only for one or more levels done at the same session)", 2284, "BONEDENSITOMETRY(TOBECHARGEDONCEONLYFORONEORMORELEVELSDONEATTHESAMESESSION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2286, "Repeat mammography, unilateral or bilateral, for localisation of tumour", 2286, "REPEATMAMMOGRAPHY,UNILATERALORBILATERAL,FORLOCALISATIONOFTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2287, "Attendance at operation in theatre or at radiological procedure performed by a surgeon or physician in X-ray department (except item 3309): Per half hour: Plus fee or examination performed (Only to be used by radiological technical staff)", 2287, "ATTENDANCEATOPERATIONINTHEATREORATRADIOLOGICALPROCEDUREPERFORMEDBYASURGEONORPHYSICIANINX-RAYDEPARTMENT(EXCEPTITEM3309):PERHALFHOUR:PLUSFEEOREXAMINATIONPERFORMED(ONLYTOBEUSEDBYRADIOLOGICALTECHNICALSTAFF)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2288, "Repeat mammography procedure with minimally invasive breast biopsy, core biopsy or fine needle aspiration biopsy utilising dedicated stereotactic equipment with patient in erect or prone position", 2288, "REPEATMAMMOGRAPHYPROCEDUREWITHMINIMALLYINVASIVEBREASTBIOPSY,COREBIOPSYORFINENEEDLEASPIRATIONBIOPSYUTILISINGDEDICATEDSTEREOTACTICEQUIPMENTWITHPATIENTINERECTORPRONEPOSITION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2289, "Foreign body localisation: Fee for part examined plus two-thirds for every additional series plus fluoroscopy fee if this is done", 2289, "FOREIGNBODYLOCALISATION:FEEFORPARTEXAMINEDPLUSTWO-THIRDSFOREVERYADDITIONALSERIESPLUSFLUOROSCOPYFEEIFTHISISDONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2290, "Foreign body localisation: Introduction of sterile needle markers: ADD", 2290, "FOREIGNBODYLOCALISATION:INTRODUCTIONOFSTERILENEEDLEMARKERS:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2291, "Setting of sterile trays", 2291, "SETTINGOFSTERILETRAYS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2292, "Mammotome - stereotaxis: Hand held", 2292, "MAMMOTOME-STEREOTAXIS:HANDHELD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2293, "Fine needle aspiration or biopsy or core biopsy of mamma", 2293, "FINENEEDLEASPIRATIONORBIOPSYORCOREBIOPSYOFMAMMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2294, "Intravascular ultrasound per case, arterial or venous, for intervention", 2294, "INTRAVASCULARULTRASOUNDPERCASE,ARTERIALORVENOUS,FORINTERVENTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2285, "Mammography: Unilateral or bilateral, including ultrasound and doppler ultrasound examination, where necessary. This item may not be used together with an item from the ultrasound section. Note that when an ultrasound of the breast is requested without mammography, item 3629 is used", 2285, "MAMMOGRAPHY:UNILATERALORBILATERAL,INCLUDINGULTRASOUNDANDDOPPLERULTRASOUNDEXAMINATION,WHERENECESSARY.THISITEMMAYNOTBEUSEDTOGETHERWITHANITEMFROMTHEULTRASOUNDSECTION.NOTETHATWHENANULTRASOUNDOFTHEBREASTISREQUESTEDWITHOUTMAMMOGRAPHY,ITEM3629ISUSED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2273, "CT stereotactic localisation for biopsy", 2273, "CTSTEREOTACTICLOCALISATIONFORBIOPSY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2272, "CT guidance for aspiration at time of CT diagnostic study", 2272, "CTGUIDANCEFORASPIRATIONATTIMEOFCTDIAGNOSTICSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2271, "CT guidance for aspiration, biopsy or drainage", 2271, "CTGUIDANCEFORASPIRATION,BIOPSYORDRAINAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2250, "CT chest with contrast", 2250, "CTCHESTWITHCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2251, "CT chest pre AND post contrast", 2251, "CTCHESTPREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2252, "CT chest high resolution lungs, limited study", 2252, "CTCHESTHIGHRESOLUTIONLUNGS,LIMITEDSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2253, "CT high resolution lungs, complete study", 2253, "CTHIGHRESOLUTIONLUNGS,COMPLETESTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2254, "CT abdomen uncontrasted", 2254, "CTABDOMENUNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2255, "CT abdomen with contrast", 2255, "CTABDOMENWITHCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2256, "CT abdomen pre AND post contrast", 2256, "CTABDOMENPREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2257, "CT abdomen triphasic study", 2257, "CTABDOMENTRIPHASICSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2258, "CT pelvis uncontrasted", 2258, "CTPELVISUNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2259, "CT pelvis with contrast", 2259, "CTPELVISWITHCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2260, "CT pelvis pre AND post contrast", 2260, "CTPELVISPREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2261, "CT abdomen AND pelvis uncontrasted", 2261, "CTABDOMENANDPELVISUNCONTRASTED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2262, "CT abdomen AND pelvis with contrast", 2262, "CTABDOMENANDPELVISWITHCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2263, "CT abdomen AND pelvis pre AND post contrast", 2263, "CTABDOMENANDPELVISPREANDPOSTCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2264, "CT chest, abdomen AND pelvis with contrast", 2264, "CTCHEST,ABDOMENANDPELVISWITHCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2265, "CT base of skull to symphysis pubis with contrast", 2265, "CTBASEOFSKULLTOSYMPHYSISPUBISWITHCONTRAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2266, "CT for dental implants maxilla OR mandible", 2266, "CTFORDENTALIMPLANTSMAXILLAORMANDIBLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2267, "CT for dental implants maxilla AND mandible", 2267, "CTFORDENTALIMPLANTSMAXILLAANDMANDIBLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2268, "CT angiography per limited region (including spiral, high resolution, AND all reconstructions)", 2268, "CTANGIOGRAPHYPERLIMITEDREGION(INCLUDINGSPIRAL,HIGHRESOLUTION,ANDALLRECONSTRUCTIONS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2269, "CT angiography per extensive region (including spiral, high resolution, 3D AND all other reconstructions)", 2269, "CTANGIOGRAPHYPEREXTENSIVEREGION(INCLUDINGSPIRAL,HIGHRESOLUTION,3DANDALLOTHERRECONSTRUCTIONS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2270, "CT limited study, any region. Region to be identified on the account", 2270, "CTLIMITEDSTUDY,ANYREGION.REGIONTOBEIDENTIFIEDONTHEACCOUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2296, "Ultrasonic bone densitometry", 2296, "ULTRASONICBONEDENSITOMETRY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2007, "Otoacoustic emission performed as a screening test", 2007, "OTOACOUSTICEMISSIONPERFORMEDASASCREENINGTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2001, "Audiology 40Hz response: Bilateral", 2001, "AUDIOLOGY40HZRESPONSE:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2005, "Electro-cochleography: Bilateral", 2005, "ELECTRO-COCHLEOGRAPHY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1743, "Excision of tumour of glomus jugulare: Hemispherectomy", 1743, "EXCISIONOFTUMOUROFGLOMUSJUGULARE:HEMISPHERECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1744, "Craniectomy for extra-dural haematoma or empyema", 1744, "CRANIECTOMYFOREXTRA-DURALHAEMATOMAOREMPYEMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1745, "Craniotomy for Extra-dural orbital decompression or excision of orbital tumour", 1745, "CRANIOTOMYFOREXTRA-DURALORBITALDECOMPRESSIONOREXCISIONOFORBITALTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1746, "Craniotomy for Osteoplastic Flap for removal of: Meningioma, basal extracerebral mass, intra ventricular tumours, pineal tumours, pituitary adenoma, total excision cranio-pharyngioma/pharyngioma", 1746, "CRANIOTOMYFOROSTEOPLASTICFLAPFORREMOVALOF:MENINGIOMA,BASALEXTRACEREBRALMASS,INTRAVENTRICULARTUMOURS,PINEALTUMOURS,PITUITARYADENOMA,TOTALEXCISIONCRANIO-PHARYNGIOMA/PHARYNGIOMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1747, "Craniotomy for Abscess, Glioma", 1747, "CRANIOTOMYFORABSCESS,GLIOMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1748, "Craniotomy for Haematoma, foreign body: Cerebral or cerebellar", 1748, "CRANIOTOMYFORHAEMATOMA,FOREIGNBODY:CEREBRALORCEREBELLAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1749, "Craniotomy for Focal epilepsy: Excision of cortical scar", 1749, "CRANIOTOMYFORFOCALEPILEPSY:EXCISIONOFCORTICALSCAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1750, "Craniotomy with anterior fossa meningocele and repair of bony skull defect", 1750, "CRANIOTOMYWITHANTERIORFOSSAMENINGOCELEANDREPAIROFBONYSKULLDEFECT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1751, "Craniotomy for Temporal lobectomy", 1751, "CRANIOTOMYFORTEMPORALLOBECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1742, "Excision of tumour of glomus jugulare: Extracranial", 1742, "EXCISIONOFTUMOUROFGLOMUSJUGULARE:EXTRACRANIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1752, "Craniotomy for Torkildsen anastomosis", 1752, "CRANIOTOMYFORTORKILDSENANASTOMOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1754, "Craniotomy for removal of arteriovenous malformation", 1754, "CRANIOTOMYFORREMOVALOFARTERIOVENOUSMALFORMATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1755, "Stereo-tactic cerebral and spinal cord procedure: First sitting", 1755, "STEREO-TACTICCEREBRALANDSPINALCORDPROCEDURE:FIRSTSITTING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1756, "Stereo-tactic cerebral and spinal cord procedure: Repeat", 1756, "STEREO-TACTICCEREBRALANDSPINALCORDPROCEDURE:REPEAT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1757, "Transnasal hypophysectomy", 1757, "TRANSNASALHYPOPHYSECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1758, "Transfrontal hypophysectomy", 1758, "TRANSFRONTALHYPOPHYSECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1759, "Transnasal hypophyseal implants", 1759, "TRANSNASALHYPOPHYSEALIMPLANTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1760, "Non-operative supervision of paraplegics for all disciplines except urologists. Per service (specified)", 1760, "NON-OPERATIVESUPERVISIONOFPARAPLEGICSFORALLDISCIPLINESEXCEPTUROLOGISTS.PERSERVICE(SPECIFIED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1761, "Chordotomy: Unilateral", 1761, "CHORDOTOMY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1762, "Chordotomy: Open", 1762, "CHORDOTOMY:OPEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1753, "Craniotomy for CSF-leaks", 1753, "CRANIOTOMYFORCSF-LEAKS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1763, "Rhizotomy: Extradural, but intraspinal", 1763, "RHIZOTOMY:EXTRADURAL,BUTINTRASPINAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1741, "Excision of tumour of glomus jugulare: Intracranial", 1741, "EXCISIONOFTUMOUROFGLOMUSJUGULARE:INTRACRANIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1739, "Posterior fossa tumour removal: Glioma, secondary deposits", 1739, "POSTERIORFOSSATUMOURREMOVAL:GLIOMA,SECONDARYDEPOSITS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1719, "Repair of depressed fracture of skull: With brain lacerations: Major", 1719, "REPAIROFDEPRESSEDFRACTUREOFSKULL:WITHBRAINLACERATIONS:MAJOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1720, "Cranioplasty", 1720, "CRANIOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1721, "Encephalocele (excluding frontal)", 1721, "ENCEPHALOCELE(EXCLUDINGFRONTAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1722, "Craniostenosis: Few suturae", 1722, "CRANIOSTENOSIS:FEWSUTURAE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1723, "Craniostenosis: Multiple suturae", 1723, "CRANIOSTENOSIS:MULTIPLESUTURAE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1724, "Ventriculo-cisternostomy", 1724, "VENTRICULO-CISTERNOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1725, "Ventriculo-caval shunt", 1725, "VENTRICULO-CAVALSHUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1726, "Ventriculo-peritoneal shunt", 1726, "VENTRICULO-PERITONEALSHUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1727, "Theco-peritoneal C.S.F. shunt", 1727, "THECO-PERITONEALC.S.F.SHUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1740, "Posterior fossa tumour removal: Abscess", 1740, "POSTERIORFOSSATUMOURREMOVAL:ABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1728, "Repair of aneurysms or arteriovenous anomalies (Intracranial)", 1728, "REPAIROFANEURYSMSORARTERIOVENOUSANOMALIES(INTRACRANIAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1730, "Posterior fossa arteriovenous anomalies", 1730, "POSTERIORFOSSAARTERIOVENOUSANOMALIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1731, "Glosso pharyngeal nerve", 1731, "GLOSSOPHARYNGEALNERVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1732, "Eighth nerve: Intracranial", 1732, "EIGHTHNERVE:INTRACRANIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1733, "Eighth nerve: Extracranial", 1733, "EIGHTHNERVE:EXTRACRANIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1734, "Sub-temporal section of the trigeminal nerve", 1734, "SUB-TEMPORALSECTIONOFTHETRIGEMINALNERVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1735, "Trigeminal tractotomy", 1735, "TRIGEMINALTRACTOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1736, "Posterior fossa decompression with or without laminectomy with or without dural insertion for Arnold Chiarri malformation or obstructive cysts e.g. Dandy Walker or parasites", 1736, "POSTERIORFOSSADECOMPRESSIONWITHORWITHOUTLAMINECTOMYWITHORWITHOUTDURALINSERTIONFORARNOLDCHIARRIMALFORMATIONOROBSTRUCTIVECYSTSE.G.DANDYWALKERORPARASITES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1737, "Vestibular nerve", 1737, "VESTIBULARNERVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1738, "Posterior fossa tumour removal: Acoustic neuroma, benign cerebello-pontine tumours, meningioma, clivus meningioma, chordoma, clivus chordoma or cholesteatoma", 1738, "POSTERIORFOSSATUMOURREMOVAL:ACOUSTICNEUROMA,BENIGNCEREBELLO-PONTINETUMOURS,MENINGIOMA,CLIVUSMENINGIOMA,CHORDOMA,CLIVUSCHORDOMAORCHOLESTEATOMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1729, "Extracranial to intracranial vascular", 1729, "EXTRACRANIALTOINTRACRANIALVASCULAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1718, "Repair of depressed fracture of skull: With brain lacerations: Small", 1718, "REPAIROFDEPRESSEDFRACTUREOFSKULL:WITHBRAINLACERATIONS:SMALL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1764, "Rhizotomy: Intradural", 1764, "RHIZOTOMY:INTRADURAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1766, "Removal of spinal cord tumour: Intramedullar: Anterio-lateral approach", 1766, "REMOVALOFSPINALCORDTUMOUR:INTRAMEDULLAR:ANTERIO-LATERALAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1791, "Lobectomy: Partial", 1791, "LOBECTOMY:PARTIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1792, "Lobectomy: Total", 1792, "LOBECTOMY:TOTAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1793, "Thyroidectomy: Subtotal", 1793, "THYROIDECTOMY:SUBTOTAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1794, "Thyroidectomy: Total", 1794, "THYROIDECTOMY:TOTAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1795, "Thyroglossal cyst or fistula excision", 1795, "THYROGLOSSALCYSTORFISTULAEXCISION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1796, "Exploration of parathyroid glands for hyperparathyroidism including removal", 1796, "EXPLORATIONOFPARATHYROIDGLANDSFORHYPERPARATHYROIDISMINCLUDINGREMOVAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1797, "Adrenalectomy: Unilateral", 1797, "ADRENALECTOMY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1798, "Bilateral exploration of adrenal glands: Including removal", 1798, "BILATERALEXPLORATIONOFADRENALGLANDS:INCLUDINGREMOVAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1799, "Transethmoidal hypophysectomy", 1799, "TRANSETHMOIDALHYPOPHYSECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1790, "Psychometry (specify examination): Per session (Maximum of 3 sessions per examination)", 1790, "PSYCHOMETRY(SPECIFYEXAMINATION):PERSESSION(MAXIMUMOF3SESSIONSPEREXAMINATION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1800, "Transnasal hypophysectomy (see also item 2915)", 1800, "TRANSNASALHYPOPHYSECTOMY(SEEALSOITEM2915)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1802, "Gonioscopy", 1802, "GONIOSCOPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1803, "Fundus contact lens or 90 D lens examination (not to be charged with item 3004 or item 3012)", 1803, "FUNDUSCONTACTLENSOR90DLENSEXAMINATION(NOTTOBECHARGEDWITHITEM3004ORITEM3012)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1804, "Peripheral fundus examination with indirect ophthalmoscope (not to be charged with item 3003 and/or item 3012)", 1804, "PERIPHERALFUNDUSEXAMINATIONWITHINDIRECTOPHTHALMOSCOPE(NOTTOBECHARGEDWITHITEM3003AND/ORITEM3012)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1805, "Keratometry", 1805, "KERATOMETRY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1806, "Basic capital equipment used in own rooms by ophthalmologists. Only to be charged at first and follow-up consultations. Not to be charged for post-operative follow-up consultations", 1806, "BASICCAPITALEQUIPMENTUSEDINOWNROOMSBYOPHTHALMOLOGISTS.ONLYTOBECHARGEDATFIRSTANDFOLLOW-UPCONSULTATIONS.NOTTOBECHARGEDFORPOST-OPERATIVEFOLLOW-UPCONSULTATIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1807, "Pre-surgical retinal examination before retinal surgery", 1807, "PRE-SURGICALRETINALEXAMINATIONBEFORERETINALSURGERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1808, "Ocular motility assessment: Comprehensive examination", 1808, "OCULARMOTILITYASSESSMENT:COMPREHENSIVEEXAMINATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1809, "Tonometry per test with maximum of 2 tests for provocative tonometry (one or both eyes)", 1809, "TONOMETRYPERTESTWITHMAXIMUMOF2TESTSFORPROVOCATIVETONOMETRY(ONEORBOTHEYES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1810, "Special eye investigations: Retinal function assessment including refraction after ocular surgery (within four months), maximum two examinations", 1810, "SPECIALEYEINVESTIGATIONS:RETINALFUNCTIONASSESSMENTINCLUDINGREFRACTIONAFTEROCULARSURGERY(WITHINFOURMONTHS),MAXIMUMTWOEXAMINATIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1801, "Implantation of pellets (excluding cost of material) (excluding after-care)", 1801, "IMPLANTATIONOFPELLETS(EXCLUDINGCOSTOFMATERIAL)(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1765, "Removal of spinal cord tumour: Intramedullar: Posterior approach", 1765, "REMOVALOFSPINALCORDTUMOUR:INTRAMEDULLAR:POSTERIORAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1789, "Narco-analysis (Maximum of 3 sessions per treatment): Per 60 min session", 1789, "NARCO-ANALYSIS(MAXIMUMOF3SESSIONSPERTREATMENT):PER60MINSESSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1787, "Extended treatment where either items 2962 or 2963 are used: Per 60-minute session", 1787, "EXTENDEDTREATMENTWHEREEITHERITEMS2962OR2963AREUSED:PER60-MINUTESESSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1767, "Removal of spinal cord tumour: Extramedullary, but intradural: Posterior approach", 1767, "REMOVALOFSPINALCORDTUMOUR:EXTRAMEDULLARY,BUTINTRADURAL:POSTERIORAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1768, "Removal of spinal cord tumour: Extramedullary, but intradural: Anterio-lateral approach", 1768, "REMOVALOFSPINALCORDTUMOUR:EXTRAMEDULLARY,BUTINTRADURAL:ANTERIO-LATERALAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1769, "Removal of spinal cord tumour: Extramedullary, but intradural: Intraspinal, but extradural: Posterior approach", 1769, "REMOVALOFSPINALCORDTUMOUR:EXTRAMEDULLARY,BUTINTRADURAL:INTRASPINAL,BUTEXTRADURAL:POSTERIORAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1770, "Removal of spinal cord tumour: Extramedullary, but intradural: Transcutaneous chordotomy", 1770, "REMOVALOFSPINALCORDTUMOUR:EXTRAMEDULLARY,BUTINTRADURAL:TRANSCUTANEOUSCHORDOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1771, "Repair of meningocele, involving nerve tissue", 1771, "REPAIROFMENINGOCELE,INVOLVINGNERVETISSUE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1772, "Simple", 1772, "SIMPLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1773, "Excision of arterial vascular malformations and cysts of the spinal cord", 1773, "EXCISIONOFARTERIALVASCULARMALFORMATIONSANDCYSTSOFTHESPINALCORD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1774, "Lumbar osteophyte removal", 1774, "LUMBAROSTEOPHYTEREMOVAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1775, "Cervical or thoracic osteophyte removal", 1775, "CERVICALORTHORACICOSTEOPHYTEREMOVAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1788, "Electro-convulsive treatment (ECT): Each time (See rule Va)", 1788, "ELECTRO-CONVULSIVETREATMENT(ECT):EACHTIME(SEERULEVA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1776, "Carotis: Trauma", 1776, "CAROTIS:TRAUMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1778, "Removal of carotid body tumour (without vascular reconstruction)", 1778, "REMOVALOFCAROTIDBODYTUMOUR(WITHOUTVASCULARRECONSTRUCTION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1779, "Individual psychotherapy (specify type): Including play therapy for children: Per short session (20 minutes)", 1779, "INDIVIDUALPSYCHOTHERAPY(SPECIFYTYPE):INCLUDINGPLAYTHERAPYFORCHILDREN:PERSHORTSESSION(20MINUTES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1780, "Psychoanalytic therapy: Per 60-minute session", 1780, "PSYCHOANALYTICTHERAPY:PER60-MINUTESESSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1781, "Directive therapy to family, parent(s), spouse: Per 20-minute session", 1781, "DIRECTIVETHERAPYTOFAMILY,PARENT(S),SPOUSE:PER20-MINUTESESSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1782, "Pairs, marriage or sex therapy: Per 20-minute session", 1782, "PAIRS,MARRIAGEORSEXTHERAPY:PER20-MINUTESESSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1783, "Group therapy : Adults (specify number) : Tariff per person per 80 - minute session ", 1783, "GROUPTHERAPY:ADULTS(SPECIFYNUMBER):TARIFFPERPERSONPER80-MINUTESESSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1784, "Individual psychotherapy (specify type): Including play therapy for children: Per intermediate session (40 minutes)", 1784, "INDIVIDUALPSYCHOTHERAPY(SPECIFYTYPE):INCLUDINGPLAYTHERAPYFORCHILDREN:PERINTERMEDIATESESSION(40MINUTES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1785, "Individual psychotherapy (specify type): Including play therapy for children: Per extended session (60 minutes or longer)", 1785, "INDIVIDUALPSYCHOTHERAPY(SPECIFYTYPE):INCLUDINGPLAYTHERAPYFORCHILDREN:PEREXTENDEDSESSION(60MINUTESORLONGER)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1786, "Intermediate treatment where either items 2962 or 2963 are used: Per 40-minute session", 1786, "INTERMEDIATETREATMENTWHEREEITHERITEMS2962OR2963AREUSED:PER40-MINUTESESSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1777, "Carotis: For aneurysm (AV anomaly)", 1777, "CAROTIS:FORANEURYSM(AVANOMALY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1717, "Repair of depressed fracture of skull: Without brain laceration: Small", 1717, "REPAIROFDEPRESSEDFRACTUREOFSKULL:WITHOUTBRAINLACERATION:SMALL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1716, "Repair of depressed fracture of skull: Without brain laceration: Major", 1716, "REPAIROFDEPRESSEDFRACTUREOFSKULL:WITHOUTBRAINLACERATION:MAJOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1715, "Removal of skull tumour: With or without plastic repair: Major", 1715, "REMOVALOFSKULLTUMOUR:WITHORWITHOUTPLASTICREPAIR:MAJOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1646, "Air encephalography and posterior fossa tomography: Posterior fossa tomography attendance by clinician", 1646, "AIRENCEPHALOGRAPHYANDPOSTERIORFOSSATOMOGRAPHY:POSTERIORFOSSATOMOGRAPHYATTENDANCEBYCLINICIAN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1647, "Air encephalography and posterior fossa tomography: Visual field charting on Bjerrum Screen", 1647, "AIRENCEPHALOGRAPHYANDPOSTERIORFOSSATOMOGRAPHY:VISUALFIELDCHARTINGONBJERRUMSCREEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1648, "Ventricular needling without burring: Tapping only", 1648, "VENTRICULARNEEDLINGWITHOUTBURRING:TAPPINGONLY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1649, "Ventricular needling without burring: Plus introduction of air and/or contrast dye for ventriculography", 1649, "VENTRICULARNEEDLINGWITHOUTBURRING:PLUSINTRODUCTIONOFAIRAND/ORCONTRASTDYEFORVENTRICULOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1650, "Subdural tapping: First sitting", 1650, "SUBDURALTAPPING:FIRSTSITTING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1651, "Subdural tapping: Subsequent", 1651, "SUBDURALTAPPING:SUBSEQUENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1652, "Sleep electro-encephalography: Infants that fit into a perambulator: Taking of record", 1652, "SLEEPELECTRO-ENCEPHALOGRAPHY:INFANTSTHATFITINTOAPERAMBULATOR:TAKINGOFRECORD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1653, "Sleep electro-encephalography: Infants that fit into a perambulator: Interpretation", 1653, "SLEEPELECTRO-ENCEPHALOGRAPHY:INFANTSTHATFITINTOAPERAMBULATOR:INTERPRETATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1654, "Sleep electro-encephalography: Adults and children over infant age: Taking of record", 1654, "SLEEPELECTRO-ENCEPHALOGRAPHY:ADULTSANDCHILDRENOVERINFANTAGE:TAKINGOFRECORD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1645, "Sodium Amytal Testing (WADA test)", 1645, "SODIUMAMYTALTESTING(WADATEST)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1655, "Sleep electro-encephalography: Adults and children over infant age: Interpretation", 1655, "SLEEPELECTRO-ENCEPHALOGRAPHY:ADULTSANDCHILDRENOVERINFANTAGE:INTERPRETATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1657, "Interpretation of item 6010: Electro-encephalogram monitoring: To be charged once only for each full 24 hour period of monitoring", 1657, "INTERPRETATIONOFITEM6010:ELECTRO-ENCEPHALOGRAMMONITORING:TOBECHARGEDONCEONLYFOREACHFULL24HOURPERIODOFMONITORING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1658, "Ventriculography", 1658, "VENTRICULOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1659, "Catheterisation for ventriculography and/or drainage", 1659, "CATHETERISATIONFORVENTRICULOGRAPHYAND/ORDRAINAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1660, "Biopsy of brain tumour", 1660, "BIOPSYOFBRAINTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1661, "Subdural haematoma or hygroma", 1661, "SUBDURALHAEMATOMAORHYGROMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1662, "Subdural empyema", 1662, "SUBDURALEMPYEMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1663, "Brain abscess", 1663, "BRAINABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1664, "Nerve biopsy: Peripheral", 1664, "NERVEBIOPSY:PERIPHERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1665, "Nerve biopsy: Cranial nerves: Extra-cranial", 1665, "NERVEBIOPSY:CRANIALNERVES:EXTRA-CRANIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1656, "Electroenchephalogram monitoring: Monitoring for localisation of cerebral seizure focus using computerised sixteen or more channel EEG, which may include video recording (e.g. for pre-operative localisation): Each full 24 hour period", 1656, "ELECTROENCHEPHALOGRAMMONITORING:MONITORINGFORLOCALISATIONOFCEREBRALSEIZUREFOCUSUSINGCOMPUTERISEDSIXTEENORMORECHANNELEEG,WHICHMAYINCLUDEVIDEORECORDING(E.G.FORPRE-OPERATIVELOCALISATION):EACHFULL24HOURPERIOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1666, "Nerve biopsy: Nerve conduction studies (see items 0733 and 3285)", 1666, "NERVEBIOPSY:NERVECONDUCTIONSTUDIES(SEEITEMS0733AND3285)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1644, "Cortical Stimulation", 1644, "CORTICALSTIMULATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1642, "Neostigmine Test, the diagnostic test for Myasthenia Gravis under the supervision of a neurologist ('20') (not to be used with item 0714)", 1642, "NEOSTIGMINETEST,THEDIAGNOSTICTESTFORMYASTHENIAGRAVISUNDERTHESUPERVISIONOFANEUROLOGIST('20')(NOTTOBEUSEDWITHITEM0714)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1621, "Evaluation of cognitive evoked potential with visual or audiology stimulus", 1621, "EVALUATIONOFCOGNITIVEEVOKEDPOTENTIALWITHVISUALORAUDIOLOGYSTIMULUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1623, "Morphia saturation testing in rooms (consultation x2 plus item 0206: Intravenous infusion) (excluding injection material)", 1623, "MORPHIASATURATIONTESTINGINROOMS(CONSULTATIONX2PLUSITEM0206:INTRAVENOUSINFUSION)(EXCLUDINGINJECTIONMATERIAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1624, "Electro-encephalography: Taking of record", 1624, "ELECTRO-ENCEPHALOGRAPHY:TAKINGOFRECORD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1625, "Electro-encephalography: Interpretation", 1625, "ELECTRO-ENCEPHALOGRAPHY:INTERPRETATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1626, "Spinal (lumbar) puncture. For diagnosis, for drainage of spinal fluid or for therapeutic indications", 1626, "SPINAL(LUMBAR)PUNCTURE.FORDIAGNOSIS,FORDRAINAGEOFSPINALFLUIDORFORTHERAPEUTICINDICATIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1627, "Cisternal puncture and/or intrathecal injections", 1627, "CISTERNALPUNCTUREAND/ORINTRATHECALINJECTIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1628, "8 Hour ambulatory EEG monitoring (Holter): Hire", 1628, "8HOURAMBULATORYEEGMONITORING(HOLTER):HIRE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1629, "8 Hour ambulatory EEG monitoring (Holter): Interpretation", 1629, "8HOURAMBULATORYEEGMONITORING(HOLTER):INTERPRETATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1630, "Electromyography: First", 1630, "ELECTROMYOGRAPHY:FIRST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1643, "Air encephalography and posterior fossa tomography: Injection of air (independent procedure)", 1643, "AIRENCEPHALOGRAPHYANDPOSTERIORFOSSATOMOGRAPHY:INJECTIONOFAIR(INDEPENDENTPROCEDURE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1631, "Electromyography: Subsequent", 1631, "ELECTROMYOGRAPHY:SUBSEQUENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1633, "Overnight polysomnogram and sleep staging: Interpretation", 1633, "OVERNIGHTPOLYSOMNOGRAMANDSLEEPSTAGING:INTERPRETATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1634, "Daytime polysomnogram: Hire", 1634, "DAYTIMEPOLYSOMNOGRAM:HIRE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1635, "Daytime polysomnogram: Interpretation", 1635, "DAYTIMEPOLYSOMNOGRAM:INTERPRETATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1636, "Multiple sleep latency test: Interpretation", 1636, "MULTIPLESLEEPLATENCYTEST:INTERPRETATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1637, "Overnight continuous positive airways pressure (CPAP) titration", 1637, "OVERNIGHTCONTINUOUSPOSITIVEAIRWAYSPRESSURE(CPAP)TITRATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1638, "Angiography carotis: Unilateral", 1638, "ANGIOGRAPHYCAROTIS:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1639, "Angiography carotis: Bilateral", 1639, "ANGIOGRAPHYCAROTIS:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1640, "Vertebral artery: Direct needling", 1640, "VERTEBRALARTERY:DIRECTNEEDLING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1641, "Vertebral catheterisation", 1641, "VERTEBRALCATHETERISATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1632, "Overnight polysomnogram and sleep staging: Hire", 1632, "OVERNIGHTPOLYSOMNOGRAMANDSLEEPSTAGING:HIRE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1667, "Botulinus toxin injections: For blepharospasm (+ 0198 + item 0201 + item 0202)", 1667, "BOTULINUSTOXININJECTIONS:FORBLEPHAROSPASM(+0198+ITEM0201+ITEM0202)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1668, "Botulinus toxin injections: For hemifacial spasm or for hyperhidrosis per region (+ item 0198 + item 0201 + item 0202)", 1668, "BOTULINUSTOXININJECTIONS:FORHEMIFACIALSPASMORFORHYPERHIDROSISPERREGION(+ITEM0198+ITEM0201+ITEM0202)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1669, "Botulinus toxin injections: For adductor disphonia (+ item 0198 + 0201 + item 0202)", 1669, "BOTULINUSTOXININJECTIONS:FORADDUCTORDISPHONIA(+ITEM0198+0201+ITEM0202)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1695, "Obturator or Stoffels", 1695, "OBTURATORORSTOFFELS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1696, "Interdigital", 1696, "INTERDIGITAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1697, "Excision: Neuroma: Peripheral", 1697, "EXCISION:NEUROMA:PERIPHERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1698, "Transposition of ulnar nerve", 1698, "TRANSPOSITIONOFULNARNERVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1699, "Neurolysis: Minor", 1699, "NEUROLYSIS:MINOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1700, "Neurolysis: Major", 1700, "NEUROLYSIS:MAJOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1701, "Neurolysis: Digital", 1701, "NEUROLYSIS:DIGITAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1702, "Scalenotomy", 1702, "SCALENOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1703, "Brachial plexus, suture or neurolysis (item 2767)", 1703, "BRACHIALPLEXUS,SUTUREORNEUROLYSIS(ITEM2767)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1694, "Pudendal neurectomy: Bilateral", 1694, "PUDENDALNEURECTOMY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1704, "Total brachial plexus exposure with graft, neurolysis and transplantation", 1704, "TOTALBRACHIALPLEXUSEXPOSUREWITHGRAFT,NEUROLYSISANDTRANSPLANTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1706, "Lumbar sympathectomy: Unilateral", 1706, "LUMBARSYMPATHECTOMY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1707, "Lumbar sympathectomy: Bilateral", 1707, "LUMBARSYMPATHECTOMY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1708, "Cervical sympathectomy: Trans-thoracic approach (use item 2847 or item 2848 as appropriate)", 1708, "CERVICALSYMPATHECTOMY:TRANS-THORACICAPPROACH(USEITEM2847ORITEM2848ASAPPROPRIATE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1709, "Cervical sympathectomy: Unilateral", 1709, "CERVICALSYMPATHECTOMY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1710, "Cervical sympathectomy: Bilateral", 1710, "CERVICALSYMPATHECTOMY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1711, "Sympathetic block: Other levels: Unilateral", 1711, "SYMPATHETICBLOCK:OTHERLEVELS:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1712, "Sympathetic block: Other levels: Bilateral", 1712, "SYMPATHETICBLOCK:OTHERLEVELS:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1713, "Sympathetic block: Other levels: Diagnostic/Therapeutic nerve block (unassociated with surgery) - either intercostal, or brachial, or peripheral, or stellate ganglion", 1713, "SYMPATHETICBLOCK:OTHERLEVELS:DIAGNOSTIC/THERAPEUTICNERVEBLOCK(UNASSOCIATEDWITHSURGERY)-EITHERINTERCOSTAL,ORBRACHIAL,ORPERIPHERAL,ORSTELLATEGANGLION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1714, "Removal of skull tumour: With or without plastic repair: Small", 1714, "REMOVALOFSKULLTUMOUR:WITHORWITHOUTPLASTICREPAIR:SMALL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1705, "Carpal Tunnel", 1705, "CARPALTUNNEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1693, "Peripheral nerve section for pain", 1693, "PERIPHERALNERVESECTIONFORPAIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1692, "Alcohol injection in peripheral nerves for pain: Bilateral", 1692, "ALCOHOLINJECTIONINPERIPHERALNERVESFORPAIN:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1691, "Inserting an indwelling nerve catheter (includes removal of catheter) (not for bolus technique)", 1691, "INSERTINGANINDWELLINGNERVECATHETER(INCLUDESREMOVALOFCATHETER)(NOTFORBOLUSTECHNIQUE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1670, "Botulinus toxin injections: In extra-ocular muscles (+ item 0198 + item 0201 + item 0202)", 1670, "BOTULINUSTOXININJECTIONS:INEXTRA-OCULARMUSCLES(+ITEM0198+ITEM0201+ITEM0202)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1671, "Botulinus toxin injections: For spasmodic torticollis and/or cranial dystonia or for spasticity or for focal dystonia (+ item 0198 + item 0201 + item 0202)", 1671, "BOTULINUSTOXININJECTIONS:FORSPASMODICTORTICOLLISAND/ORCRANIALDYSTONIAORFORSPASTICITYORFORFOCALDYSTONIA(+ITEM0198+ITEM0201+ITEM0202)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1672, "Suture brachial plexus (see also items 2837 and 2839)", 1672, "SUTUREBRACHIALPLEXUS(SEEALSOITEMS2837AND2839)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1673, "Suture: Large nerve: Primary", 1673, "SUTURE:LARGENERVE:PRIMARY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1674, "Suture: Large nerve: Secondary", 1674, "SUTURE:LARGENERVE:SECONDARY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1675, "Digital nerve: Primary", 1675, "DIGITALNERVE:PRIMARY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1676, "Digital nerve: Secondary", 1676, "DIGITALNERVE:SECONDARY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1677, "Nerve graft: Simple", 1677, "NERVEGRAFT:SIMPLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1678, "Fascicular: First fasciculus", 1678, "FASCICULAR:FIRSTFASCICULUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1679, "Fascicular: Each additional fasciculus", 1679, "FASCICULAR:EACHADDITIONALFASCICULUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1680, "Fascicular: Nerve flap: To include all stages", 1680, "FASCICULAR:NERVEFLAP:TOINCLUDEALLSTAGES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1681, "Fascicular: Facio-accessory or facio-hypoglossal anastomosis", 1681, "FASCICULAR:FACIO-ACCESSORYORFACIO-HYPOGLOSSALANASTOMOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1682, "Fascicular: Grafting of facial nerve", 1682, "FASCICULAR:GRAFTINGOFFACIALNERVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1683, "Trigeminal ganglion: Injection of alcohol", 1683, "TRIGEMINALGANGLION:INJECTIONOFALCOHOL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1684, "Trigeminal ganglion: Injection of cortisone", 1684, "TRIGEMINALGANGLION:INJECTIONOFCORTISONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1685, "Trigeminal ganglion: Coagulation through high frequency", 1685, "TRIGEMINALGANGLION:COAGULATIONTHROUGHHIGHFREQUENCY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1686, "Procedures for pain relief: Intrathecal injections for pain", 1686, "PROCEDURESFORPAINRELIEF:INTRATHECALINJECTIONSFORPAIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1687, "Procedures for pain relief: Plexus nerve block", 1687, "PROCEDURESFORPAINRELIEF:PLEXUSNERVEBLOCK", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1688, "Procedures for pain relief: Epidural injection for pain (refer to modifier 0045 for post-operative pain relief) (refer to modifier 0021 for epidural anaesthetic)", 1688, "PROCEDURESFORPAINRELIEF:EPIDURALINJECTIONFORPAIN(REFERTOMODIFIER0045FORPOST-OPERATIVEPAINRELIEF)(REFERTOMODIFIER0021FOREPIDURALANAESTHETIC)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1689, "Procedures for pain relief: Peripheral nerve block", 1689, "PROCEDURESFORPAINRELIEF:PERIPHERALNERVEBLOCK", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1690, "Alcohol injection in peripheral nerves for pain: Unilateral", 1690, "ALCOHOLINJECTIONINPERIPHERALNERVESFORPAIN:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1811, "Endothelial cell count", 1811, "ENDOTHELIALCELLCOUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1812, "Potential acuity measurement", 1812, "POTENTIALACUITYMEASUREMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1813, "Contrast sensitivity test", 1813, "CONTRASTSENSITIVITYTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1814, "Orthoptics consultation", 1814, "ORTHOPTICSCONSULTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1936, "Epicanthal folds", 1936, "EPICANTHALFOLDS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1937, "Botulinus toxin injection for blepharospasm (+ item 0198 + item 0201 + item 0202)", 1937, "BOTULINUSTOXININJECTIONFORBLEPHAROSPASM(+ITEM0198+ITEM0201+ITEM0202)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1938, "Botulinus toxin injection in extra-ocular muscles (+ item 0198 + item 0201+ item 0202)", 1938, "BOTULINUSTOXININJECTIONINEXTRA-OCULARMUSCLES(+ITEM0198+ITEM0201+ITEM0202)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1939, "Lid operation for facial nerve paralysis including tarsorrhaphy but excluding cost of material", 1939, "LIDOPERATIONFORFACIALNERVEPARALYSISINCLUDINGTARSORRHAPHYBUTEXCLUDINGCOSTOFMATERIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1940, "Entropion or ectropion by Cautery", 1940, "ENTROPIONORECTROPIONBYCAUTERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1941, "Entropion or ectropion by Suture", 1941, "ENTROPIONORECTROPIONBYSUTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1942, "Entropion or ectropion by Open operation", 1942, "ENTROPIONORECTROPIONBYOPENOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1943, "Entropion or ectropion by Free skin, mucosal grafting or flap", 1943, "ENTROPIONORECTROPIONBYFREESKIN,MUCOSALGRAFTINGORFLAP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1944, "Staged procedure for partial or total loss of eyelid: First stage", 1944, "STAGEDPROCEDUREFORPARTIALORTOTALLOSSOFEYELID:FIRSTSTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1935, "Excision of Meibomian cyst. Additional fee for sterile tray (see item 0202)", 1935, "EXCISIONOFMEIBOMIANCYST.ADDITIONALFEEFORSTERILETRAY(SEEITEM0202)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1945, "Staged procedure for partial or total loss of eyelid: Subsequent stage", 1945, "STAGEDPROCEDUREFORPARTIALORTOTALLOSSOFEYELID:SUBSEQUENTSTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1947, "Blepharoplasty: Upper lid for improvement in function (unilateral)", 1947, "BLEPHAROPLASTY:UPPERLIDFORIMPROVEMENTINFUNCTION(UNILATERAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1948, "Blepharoplasty lower eyelid plus fat pad", 1948, "BLEPHAROPLASTYLOWEREYELIDPLUSFATPAD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1949, "Repair by superior rectus, levator or frontalis muscle operation", 1949, "REPAIRBYSUPERIORRECTUS,LEVATORORFRONTALISMUSCLEOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1950, "Ptosis: By lesser procedure e.g. sling operation: Unilateral", 1950, "PTOSIS:BYLESSERPROCEDUREE.G.SLINGOPERATION:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1951, "Ptosis: By lesser procedure e.g. sling operation: Bilateral", 1951, "PTOSIS:BYLESSERPROCEDUREE.G.SLINGOPERATION:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1952, "Repair of conjunctiva by grafting", 1952, "REPAIROFCONJUNCTIVABYGRAFTING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1953, "Repair of lacerated conjunctiva", 1953, "REPAIROFLACERATEDCONJUNCTIVA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1954, "Holmium laser apparatus (ophthalmic): Hire fee for one or both eyes done in one sitting", 1954, "HOLMIUMLASERAPPARATUS(OPHTHALMIC):HIREFEEFORONEORBOTHEYESDONEINONESITTING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1955, "Applicable to Medical Scheme Benefits only: Item 3192: If a practitioner performs the procedure in his own facility an excimer laser theatre fee of R15,00 per minute may be charged", 1955, "APPLICABLETOMEDICALSCHEMEBENEFITSONLY:ITEM3192:IFAPRACTITIONERPERFORMSTHEPROCEDUREINHISOWNFACILITYANEXCIMERLASERTHEATREFEEOFR15,00PERMINUTEMAYBECHARGED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1946, "Full thickness eyelid laceration for tumour or injury: Direct repair", 1946, "FULLTHICKNESSEYELIDLACERATIONFORTUMOURORINJURY:DIRECTREPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1956, "Diamond knife: Use of own diamond knife during intraocular surgery", 1956, "DIAMONDKNIFE:USEOFOWNDIAMONDKNIFEDURINGINTRAOCULARSURGERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1934, "Electrolysis of any number of eyelashes: Per eye", 1934, "ELECTROLYSISOFANYNUMBEROFEYELASHES:PEREYE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1932, "Repair of skin laceration lid: Simple", 1932, "REPAIROFSKINLACERATIONLID:SIMPLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1912, "Pterygium or conjunctival cyst or conjunctival tumour. Conjunctival flap or graft used - stand alone procedure", 1912, "PTERYGIUMORCONJUNCTIVALCYSTORCONJUNCTIVALTUMOUR.CONJUNCTIVALFLAPORGRAFTUSED-STANDALONEPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1913, "Conjunctival flap or graft (not for use with pterigium surgery)", 1913, "CONJUNCTIVALFLAPORGRAFT(NOTFORUSEWITHPTERIGIUMSURGERY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1914, "Removal corneal epithelium and chelating agent for band keratopathy", 1914, "REMOVALCORNEALEPITHELIUMANDCHELATINGAGENTFORBANDKERATOPATHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1915, "Probing and/or syringing, per duct", 1915, "PROBINGAND/ORSYRINGING,PERDUCT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1916, "Insert polythene tubes", 1916, "INSERTPOLYTHENETUBES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1917, "Excision of lacrimal sac: Unilateral", 1917, "EXCISIONOFLACRIMALSAC:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1918, "Dacrocystorhinostomy (Single) with or without polythene tube", 1918, "DACROCYSTORHINOSTOMY(SINGLE)WITHORWITHOUTPOLYTHENETUBE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1919, "Sealing Punctum surgical or by cautery: Per eye", 1919, "SEALINGPUNCTUMSURGICALORBYCAUTERY:PEREYE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1920, "Sealing Punctum with plugs: Per eye", 1920, "SEALINGPUNCTUMWITHPLUGS:PEREYE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1933, "Diathermy to wart on lid margin", 1933, "DIATHERMYTOWARTONLIDMARGIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1921, "Three-snip operation", 1921, "THREE-SNIPOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1923, "Repair of caniculus: Secondary procedure", 1923, "REPAIROFCANICULUS:SECONDARYPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1924, "Iridectomy or iridotomy by open operation as isolated procedure", 1924, "IRIDECTOMYORIRIDOTOMYBYOPENOPERATIONASISOLATEDPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1925, "Excision of iris tumour", 1925, "EXCISIONOFIRISTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1926, "Iridectomy or iridotomy by laser or photocoagulation as isolated procedure (maximum one procedure)", 1926, "IRIDECTOMYORIRIDOTOMYBYLASERORPHOTOCOAGULATIONASISOLATEDPROCEDURE(MAXIMUMONEPROCEDURE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1927, "Iridocyclectomy for tumour", 1927, "IRIDOCYCLECTOMYFORTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1928, "Division of anterior synechiae as isolated procedure", 1928, "DIVISIONOFANTERIORSYNECHIAEASISOLATEDPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1929, "Repair iris as in dialysis: Anterior chamber reconstruction", 1929, "REPAIRIRISASINDIALYSIS:ANTERIORCHAMBERRECONSTRUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1930, "Tarsorrhaphy", 1930, "TARSORRHAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1931, "Excision of superficial lid tumour", 1931, "EXCISIONOFSUPERFICIALLIDTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1922, "Repair of caniculus: Primary procedure", 1922, "REPAIROFCANICULUS:PRIMARYPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1957, "Excimer laser: Hire fee (per eye)", 1957, "EXCIMERLASER:HIREFEE(PEREYE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1958, "Laser apparatus (ophthalmic): Hire fee for one or both eyes done in one sitting (Not to be used with IOL Master)", 1958, "LASERAPPARATUS(OPHTHALMIC):HIREFEEFORONEORBOTHEYESDONEINONESITTING(NOTTOBEUSEDWITHIOLMASTER)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1959, "Phako emulsification apparatus: Hire fee", 1959, "PHAKOEMULSIFICATIONAPPARATUS:HIREFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1985, "Muscle grafting to mastoid cavity without tympanoplasty", 1985, "MUSCLEGRAFTINGTOMASTOIDCAVITYWITHOUTTYMPANOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1986, "Autogenous bone graft to mastoid cavity", 1986, "AUTOGENOUSBONEGRAFTTOMASTOIDCAVITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1987, "Tympanomastoidectomy", 1987, "TYMPANOMASTOIDECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1988, "Reconstruction of posterior canal wall, following radical mastoid", 1988, "RECONSTRUCTIONOFPOSTERIORCANALWALL,FOLLOWINGRADICALMASTOID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1989, "Gentamycin steroids instillation into the middle ear for M?ni?re's disease (myringotomy and cost of material excluded)", 1989, "GENTAMYCINSTEROIDSINSTILLATIONINTOTHEMIDDLEEARFORM?NI?RE'SDISEASE(MYRINGOTOMYANDCOSTOFMATERIALEXCLUDED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1990, "Percutaneous stimulation of the facial nerve", 1990, "PERCUTANEOUSSTIMULATIONOFTHEFACIALNERVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1991, "Electroneurography (ENOG)", 1991, "ELECTRONEUROGRAPHY(ENOG)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1992, "Exploration of facial nerve: Exploration of tympanomastiod segment", 1992, "EXPLORATIONOFFACIALNERVE:EXPLORATIONOFTYMPANOMASTIODSEGMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1993, "Exploration of facial nerve: Grafting of the tympanomastoid section (including item 3227)", 1993, "EXPLORATIONOFFACIALNERVE:GRAFTINGOFTHETYMPANOMASTOIDSECTION(INCLUDINGITEM3227)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1984, "Radical mastoidectomy (excluding minor procedures)", 1984, "RADICALMASTOIDECTOMY(EXCLUDINGMINORPROCEDURES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1994, "Exploration of facial nerve: Extratemporal grafting of the facial nerve", 1994, "EXPLORATIONOFFACIALNERVE:EXTRATEMPORALGRAFTINGOFTHEFACIALNERVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1996, "Short latency brainstem evoked potentials (AEP) neurological examination, single decibel: Unilateral", 1996, "SHORTLATENCYBRAINSTEMEVOKEDPOTENTIALS(AEP)NEUROLOGICALEXAMINATION,SINGLEDECIBEL:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1997, "Short latency brainstem evoked potentials (AEP) neurological examination, single decibel: Bilateral", 1997, "SHORTLATENCYBRAINSTEMEVOKEDPOTENTIALS(AEP)NEUROLOGICALEXAMINATION,SINGLEDECIBEL:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1998, "AEP: Audiological examination: Unilateral at a minimum of 4 decibels", 1998, "AEP:AUDIOLOGICALEXAMINATION:UNILATERALATAMINIMUMOF4DECIBELS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1999, "AEP: Audiological examination: Bilateral at a minimum of 4 decibels", 1999, "AEP:AUDIOLOGICALEXAMINATION:BILATERALATAMINIMUMOF4DECIBELS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2000, "Audiology 40Hz response: Unilateral", 2000, "AUDIOLOGY40HZRESPONSE:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2392, "GIT balloon dilatation under fluoroscopy", 2392, "GITBALLOONDILATATIONUNDERFLUOROSCOPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2002, "Mid- and long latency auditory evoked potentials: Unilateral", 2002, "MID-ANDLONGLATENCYAUDITORYEVOKEDPOTENTIALS:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2003, "Mid- and long latency auditory evoked potentials: Bilateral", 2003, "MID-ANDLONGLATENCYAUDITORYEVOKEDPOTENTIALS:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2004, "Electro-cochleography: Unilateral", 2004, "ELECTRO-COCHLEOGRAPHY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1995, "Exploration of facial nerve: Facio-assessory or facio-hypoglossal anastomosis", 1995, "EXPLORATIONOFFACIALNERVE:FACIO-ASSESSORYORFACIO-HYPOGLOSSALANASTOMOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1983, "Cortical mastoidectomy", 1983, "CORTICALMASTOIDECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1982, "Stapedotomy and stapedectomy", 1982, "STAPEDOTOMYANDSTAPEDECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1981, "Functional reconstruction of tympanic membrane", 1981, "FUNCTIONALRECONSTRUCTIONOFTYMPANICMEMBRANE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1960, "Vitrectomy apparatus: Hire fee", 1960, "VITRECTOMYAPPARATUS:HIREFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1961, "Major congenital deformity reconstruction of external ear: Unilateral", 1961, "MAJORCONGENITALDEFORMITYRECONSTRUCTIONOFEXTERNALEAR:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1962, "Major congenital deformity reconstruction of external ear: Bilateral", 1962, "MAJORCONGENITALDEFORMITYRECONSTRUCTIONOFEXTERNALEAR:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1963, "Excision of superficial pre-auricular fistula", 1963, "EXCISIONOFSUPERFICIALPRE-AURICULARFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1964, "Partial or total reconstruction for congenital or traumatic absence or following tumour excision of external ear", 1964, "PARTIALORTOTALRECONSTRUCTIONFORCONGENITALORTRAUMATICABSENCEORFOLLOWINGTUMOUREXCISIONOFEXTERNALEAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1965, "Excision of complicated pre-auricular fistula", 1965, "EXCISIONOFCOMPLICATEDPRE-AURICULARFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1966, "External ear canal: Removal of foreign body: At rooms", 1966, "EXTERNALEARCANAL:REMOVALOFFOREIGNBODY:ATROOMS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1967, "External ear canal: Removal of foreign body: Under general anaesthetic", 1967, "EXTERNALEARCANAL:REMOVALOFFOREIGNBODY:UNDERGENERALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1968, "Meatus atresia: Repair of stenosis of cartilaginous portion", 1968, "MEATUSATRESIA:REPAIROFSTENOSISOFCARTILAGINOUSPORTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1969, "Meatus atresia: Congenital", 1969, "MEATUSATRESIA:CONGENITAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1970, "Meatus atresia: Removal of osteoma from meatus: Solitary", 1970, "MEATUSATRESIA:REMOVALOFOSTEOMAFROMMEATUS:SOLITARY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1971, "Meatus atresia: Removal of osteoma from meatus: Multiple", 1971, "MEATUSATRESIA:REMOVALOFOSTEOMAFROMMEATUS:MULTIPLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1972, "Microscopic examination of tympanic membrane including microsuction", 1972, "MICROSCOPICEXAMINATIONOFTYMPANICMEMBRANEINCLUDINGMICROSUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1973, "Myringotomy: Unilateral", 1973, "MYRINGOTOMY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1974, "Myringotomy: Bilateral", 1974, "MYRINGOTOMY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1975, "Unilateral myringotomy with insertion of ventilation tube", 1975, "UNILATERALMYRINGOTOMYWITHINSERTIONOFVENTILATIONTUBE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1976, "Bilateral myringotomy with insertion of unilateral ventilation tube", 1976, "BILATERALMYRINGOTOMYWITHINSERTIONOFUNILATERALVENTILATIONTUBE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1977, "Bilateral myringotomy with insertion of bilateral ventilation tube (modifier 0005 not applicable)", 1977, "BILATERALMYRINGOTOMYWITHINSERTIONOFBILATERALVENTILATIONTUBE(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1978, "Reconstruction of middle ear ossicles (ossiculoplasty)", 1978, "RECONSTRUCTIONOFMIDDLEEAROSSICLES(OSSICULOPLASTY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1979, "Exploratory tympanotomy", 1979, "EXPLORATORYTYMPANOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1980, "Myringoplasty", 1980, "MYRINGOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1911, "Lamellar keratectomy for refractive surgery (LK, ALK, MLK)", 1911, "LAMELLARKERATECTOMYFORREFRACTIVESURGERY(LK,ALK,MLK)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2006, "Total fee for audiological evaluation including bilateral AEP and bilateral electro-cochleography", 2006, "TOTALFEEFORAUDIOLOGICALEVALUATIONINCLUDINGBILATERALAEPANDBILATERALELECTRO-COCHLEOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1910, "Cornea: Paracentesis", 1910, "CORNEA:PARACENTESIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1908, "Additional to item 3128 for the use of own diamond knives", 1908, "ADDITIONALTOITEM3128FORTHEUSEOFOWNDIAMONDKNIVES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1839, "Removal of encircling band and/or buckling material", 1839, "REMOVALOFENCIRCLINGBANDAND/ORBUCKLINGMATERIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1840, "Cataract: Intra-capsular", 1840, "CATARACT:INTRA-CAPSULAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1841, "Cataract: Extra-capsular (including capsulotomy)", 1841, "CATARACT:EXTRA-CAPSULAR(INCLUDINGCAPSULOTOMY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1842, "Insertion of lenticulus in addition to item 3045 or item 3047 (cost of lens excluded) (modifier 0005 not applicable)", 1842, "INSERTIONOFLENTICULUSINADDITIONTOITEM3045ORITEM3047(COSTOFLENSEXCLUDED)(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1843, "Repositioning of intra ocular lens", 1843, "REPOSITIONINGOFINTRAOCULARLENS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1844, "Needling or capsulotomy", 1844, "NEEDLINGORCAPSULOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1845, "Laser capsulotomy", 1845, "LASERCAPSULOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1846, "Removal of lenticulus", 1846, "REMOVALOFLENTICULUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1847, "Exchange of intra ocular lens", 1847, "EXCHANGEOFINTRAOCULARLENS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1838, "Pan retinal photocoagulation (per eye): Done in one sitting", 1838, "PANRETINALPHOTOCOAGULATION(PEREYE):DONEINONESITTING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1848, "Insertion of lenticulus when item 3045 or item 3047 was not executed (cost of lens excluded)", 1848, "INSERTIONOFLENTICULUSWHENITEM3045ORITEM3047WASNOTEXECUTED(COSTOFLENSEXCLUDED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1850, "Drainage operation", 1850, "DRAINAGEOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1851, "Implantation of aqueous shunt device/seton in glaucoma (additional to item 3061)", 1851, "IMPLANTATIONOFAQUEOUSSHUNTDEVICE/SETONINGLAUCOMA(ADDITIONALTOITEM3061)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1852, "Cyclocryotherapy or cyclodiathermy", 1852, "CYCLOCRYOTHERAPYORCYCLODIATHERMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1853, "Laser trabeculoplasty", 1853, "LASERTRABECULOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1854, "Removal of blood from anterior chamber", 1854, "REMOVALOFBLOODFROMANTERIORCHAMBER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1855, "Goniotomy", 1855, "GONIOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1856, "Intra-ocular foreign body: Anterior to Iris", 1856, "INTRA-OCULARFOREIGNBODY:ANTERIORTOIRIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1857, "Intra-ocular foreign body: Posterior to Iris (including prophylactic thermal treatment to retina)", 1857, "INTRA-OCULARFOREIGNBODY:POSTERIORTOIRIS(INCLUDINGPROPHYLACTICTHERMALTREATMENTTORETINA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1858, "Strabismus (whether operation performed on one eye or both): Adjustment of sutures if not done at the time of the operation. Additional fee for sterile tray (refer to item 0202)", 1858, "STRABISMUS(WHETHEROPERATIONPERFORMEDONONEEYEORBOTH):ADJUSTMENTOFSUTURESIFNOTDONEATTHETIMEOFTHEOPERATION.ADDITIONALFEEFORSTERILETRAY(REFERTOITEM0202)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1849, "Use of own surgical microscope for surgery or examination (not for slit lamp microscope) (for use by ophthalmologists only)", 1849, "USEOFOWNSURGICALMICROSCOPEFORSURGERYOREXAMINATION(NOTFORSLITLAMPMICROSCOPE)(FORUSEBYOPHTHALMOLOGISTSONLY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1859, "Strabismus (whether operation performed on one eye or both): Operation on one or two muscles", 1859, "STRABISMUS(WHETHEROPERATIONPERFORMEDONONEEYEORBOTH):OPERATIONONONEORTWOMUSCLES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1837, "Prophylaxis and treatment of retina and choroid by cryotherapy and/or diathermy and/or photocoagulation and/or laser per eye", 1837, "PROPHYLAXISANDTREATMENTOFRETINAANDCHOROIDBYCRYOTHERAPYAND/ORDIATHERMYAND/ORPHOTOCOAGULATIONAND/ORLASERPEREYE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1835, "Corneal topography: For pathological corneas only on special motivation. For refractive surgery - may be charged once pre-operative and once post-operative per sitting (for one or both eyes)", 1835, "CORNEALTOPOGRAPHY:FORPATHOLOGICALCORNEASONLYONSPECIALMOTIVATION.FORREFRACTIVESURGERY-MAYBECHARGEDONCEPRE-OPERATIVEANDONCEPOST-OPERATIVEPERSITTING(FORONEORBOTHEYES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1815, "Orthoptic subsequent sessions", 1815, "ORTHOPTICSUBSEQUENTSESSIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1816, "Charting of visual field with manual perimeter", 1816, "CHARTINGOFVISUALFIELDWITHMANUALPERIMETER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1817, "Retinal threshold test without storage facilities", 1817, "RETINALTHRESHOLDTESTWITHOUTSTORAGEFACILITIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1818, "Retinal threshold test inclusive of computer disc storage for Delta of Statpak programs", 1818, "RETINALTHRESHOLDTESTINCLUSIVEOFCOMPUTERDISCSTORAGEFORDELTAOFSTATPAKPROGRAMS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1819, "Retinal threshold trend evaluation (additional to item 3017)", 1819, "RETINALTHRESHOLDTRENDEVALUATION(ADDITIONALTOITEM3017)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1820, "Ocular muscle function with Hess screen or perimeter", 1820, "OCULARMUSCLEFUNCTIONWITHHESSSCREENORPERIMETER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1821, "Special eye investigations: Pachymetry: Only when own instrument is used, per eye. Only in addition to corneal surgery", 1821, "SPECIALEYEINVESTIGATIONS:PACHYMETRY:ONLYWHENOWNINSTRUMENTISUSED,PEREYE.ONLYINADDITIONTOCORNEALSURGERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1822, "Digital fluorescein video angiography", 1822, "DIGITALFLUORESCEINVIDEOANGIOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1823, "Digital indocyanine video angiography", 1823, "DIGITALINDOCYANINEVIDEOANGIOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1836, "Surgical treatment of retinal detachment including vitreous replacement but excluding vitrectomy", 1836, "SURGICALTREATMENTOFRETINALDETACHMENTINCLUDINGVITREOUSREPLACEMENTBUTEXCLUDINGVITRECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1824, "Infusion of dye used during Fluorescein Angiography, Indocyanine Green Video Angiography and Photodynamic therapy. Linked to items 3022, 3023, 3031, 3039", 1824, "INFUSIONOFDYEUSEDDURINGFLUORESCEINANGIOGRAPHY,INDOCYANINEGREENVIDEOANGIOGRAPHYANDPHOTODYNAMICTHERAPY.LINKEDTOITEMS3022,3023,3031,3039", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1826, "Digital Tomography of optic nerve with Scanning Laser Ophthalmoscope (SLO). Limited to two exams per annum", 1826, "DIGITALTOMOGRAPHYOFOPTICNERVEWITHSCANNINGLASEROPHTHALMOSCOPE(SLO).LIMITEDTOTWOEXAMSPERANNUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1827, "Fundus photography", 1827, "FUNDUSPHOTOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1828, "Optical Coherent Tomography (OCT) of Optic nerve or macula: Per eye", 1828, "OPTICALCOHERENTTOMOGRAPHY(OCT)OFOPTICNERVEORMACULA:PEREYE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1829, "Anterior segment microphotography", 1829, "ANTERIORSEGMENTMICROPHOTOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1830, "Fluorescein Angiography: One or both eyes (not to be used with item 3022)", 1830, "FLUORESCEINANGIOGRAPHY:ONEORBOTHEYES(NOTTOBEUSEDWITHITEM3022)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1831, "Eyelid and orbit photography", 1831, "EYELIDANDORBITPHOTOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1832, "Interpretation of items 3022, 3023 and 3031 referred by other clinicians", 1832, "INTERPRETATIONOFITEMS3022,3023AND3031REFERREDBYOTHERCLINICIANS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1833, "Determination of lens implant power per eye", 1833, "DETERMINATIONOFLENSIMPLANTPOWERPEREYE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1834, "Where a minor procedure usually done in the consulting rooms requires a general anaesthetic or use of an operating theatre, an additional fee may be charged", 1834, "WHEREAMINORPROCEDUREUSUALLYDONEINTHECONSULTINGROOMSREQUIRESAGENERALANAESTHETICORUSEOFANOPERATINGTHEATRE,ANADDITIONALFEEMAYBECHARGED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1825, "Electronic tonography", 1825, "ELECTRONICTONOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1860, "Strabismus (whether operation performed on one eye or both): Operation on three or four muscles", 1860, "STRABISMUS(WHETHEROPERATIONPERFORMEDONONEEYEORBOTH):OPERATIONONTHREEORFOURMUSCLES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1861, "Strabismus (whether operation performed on one eye or both): Subsequent operation one or two muscles", 1861, "STRABISMUS(WHETHEROPERATIONPERFORMEDONONEEYEORBOTH):SUBSEQUENTOPERATIONONEORTWOMUSCLES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1862, "Strabismus (whether operation performed on one eye or both): Subsequent operation on three or four muscles", 1862, "STRABISMUS(WHETHEROPERATIONPERFORMEDONONEEYEORBOTH):SUBSEQUENTOPERATIONONTHREEORFOURMUSCLES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1888, "Hydroxyapetite implantation in eye cavity when evisceration or enucleation was done previously", 1888, "HYDROXYAPETITEIMPLANTATIONINEYECAVITYWHENEVISCERATIONORENUCLEATIONWASDONEPREVIOUSLY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1889, "Second stage hydroxyapetite implantation", 1889, "SECONDSTAGEHYDROXYAPETITEIMPLANTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1890, "Contact lenses: Assessment involving preliminary fittings and tolerance visits (costs of lenses borne by patient)", 1890, "CONTACTLENSES:ASSESSMENTINVOLVINGPRELIMINARYFITTINGSANDTOLERANCEVISITS(COSTSOFLENSESBORNEBYPATIENT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1891, "Fitting of contact lens for treatment of disease including supply of lens", 1891, "FITTINGOFCONTACTLENSFORTREATMENTOFDISEASEINCLUDINGSUPPLYOFLENS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1892, "Fitting of contact lenses and instructions to patient: Includes eye examination, first fitting of the contact lenses and further post-fitting visits for one (1) year", 1892, "FITTINGOFCONTACTLENSESANDINSTRUCTIONSTOPATIENT:INCLUDESEYEEXAMINATION,FIRSTFITTINGOFTHECONTACTLENSESANDFURTHERPOST-FITTINGVISITSFORONE(1)YEAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1893, "Wavefront analysis (Aberometry) for customized ablation of pathological corneas prior to LASIK surgery - EQUIPMENT component only", 1893, "WAVEFRONTANALYSIS(ABEROMETRY)FORCUSTOMIZEDABLATIONOFPATHOLOGICALCORNEASPRIORTOLASIKSURGERY-EQUIPMENTCOMPONENTONLY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1894, "Fitting of only one contact lens and instructions to the patient: Eye examination, first fitting of the contact lens and further post-fitting visits for one year included", 1894, "FITTINGOFONLYONECONTACTLENSANDINSTRUCTIONSTOTHEPATIENT:EYEEXAMINATION,FIRSTFITTINGOFTHECONTACTLENSANDFURTHERPOST-FITTINGVISITSFORONEYEARINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1895, "Astigmatic correction with T-cuts or wedge resection in pathological corneal astigmatism following trauma, intra ocular surgery or penetrating keratoplasty", 1895, "ASTIGMATICCORRECTIONWITHT-CUTSORWEDGERESECTIONINPATHOLOGICALCORNEALASTIGMATISMFOLLOWINGTRAUMA,INTRAOCULARSURGERYORPENETRATINGKERATOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1896, "Removal of foreign body: On the basis of fee per consultation", 1896, "REMOVALOFFOREIGNBODY:ONTHEBASISOFFEEPERCONSULTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1887, "Eye socket reconstruction", 1887, "EYESOCKETRECONSTRUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1897, "Curettage of cornea after removal of foreign body (after-care excluded)", 1897, "CURETTAGEOFCORNEAAFTERREMOVALOFFOREIGNBODY(AFTER-CAREEXCLUDED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1899, "Excimer laser (per eye) for refractive keratectomy or Holmium laser thermo keratoplasty (LTK) (For machine hire fee for LTK: Use item 3201)", 1899, "EXCIMERLASER(PEREYE)FORREFRACTIVEKERATECTOMYORHOLMIUMLASERTHERMOKERATOPLASTY(LTK)(FORMACHINEHIREFEEFORLTK:USEITEM3201)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1900, "Corneal graft (Lamellar or full thickness)", 1900, "CORNEALGRAFT(LAMELLARORFULLTHICKNESS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1901, "Epikeratophakia", 1901, "EPIKERATOPHAKIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1902, "Insertion of intra-corneal or intrascleral prosthesis for refractive surgery", 1902, "INSERTIONOFINTRA-CORNEALORINTRASCLERALPROSTHESISFORREFRACTIVESURGERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1903, "Removal of corneal stitches under microscope (maximum of 2 procedures). Additional fee for sterile tray (see item 0202)", 1903, "REMOVALOFCORNEALSTITCHESUNDERMICROSCOPE(MAXIMUMOF2PROCEDURES).ADDITIONALFEEFORSTERILETRAY(SEEITEM0202)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1904, "Keratectomy", 1904, "KERATECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1905, "Additional to item 3120 for the use of own microkeratome used with a excimer laser", 1905, "ADDITIONALTOITEM3120FORTHEUSEOFOWNMICROKERATOMEUSEDWITHAEXCIMERLASER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1906, "Cauterisation of cornea (by chemical, thermal or cryotherapy methods)", 1906, "CAUTERISATIONOFCORNEA(BYCHEMICAL,THERMALORCRYOTHERAPYMETHODS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1907, "Radial keratotomy or keratoplasty for astigmatism (cosmetic unless medical reasons can be proved)", 1907, "RADIALKERATOTOMYORKERATOPLASTYFORASTIGMATISM(COSMETICUNLESSMEDICALREASONSCANBEPROVED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1898, "Tattooing", 1898, "TATTOOING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1886, "Orbitotomy requiring bone flap", 1886, "ORBITOTOMYREQUIRINGBONEFLAP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1885, "Orbit: Exenteration", 1885, "ORBIT:EXENTERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1884, "Removal orbital prosthesis", 1884, "REMOVALORBITALPROSTHESIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1863, "Transcleral biopsy", 1863, "TRANSCLERALBIOPSY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1864, "Examination of eyes under general anaesthetic where no surgery is done", 1864, "EXAMINATIONOFEYESUNDERGENERALANAESTHETICWHERENOSURGERYISDONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1865, "Treatment of minor perforating injury", 1865, "TREATMENTOFMINORPERFORATINGINJURY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1866, "Treatment of major perforating injury", 1866, "TREATMENTOFMAJORPERFORATINGINJURY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1867, "Enucleation or Evisceration", 1867, "ENUCLEATIONOREVISCERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1868, "Enucleation or Evisceration with mobile implant: Excluding cost of implant and prosthesis", 1868, "ENUCLEATIONOREVISCERATIONWITHMOBILEIMPLANT:EXCLUDINGCOSTOFIMPLANTANDPROSTHESIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1869, "Hydroxyapetite insertion (additional to item 3087)", 1869, "HYDROXYAPETITEINSERTION(ADDITIONALTOITEM3087)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1870, "Subconjunctival injection if not done at time of operation", 1870, "SUBCONJUNCTIVALINJECTIONIFNOTDONEATTIMEOFOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1871, "Intra vitreal injection drug", 1871, "INTRAVITREALINJECTIONDRUG", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1872, "Retrobulbar injection (if not done at time of operation)", 1872, "RETROBULBARINJECTION(IFNOTDONEATTIMEOFOPERATION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1873, "External laser treatment for superficial lesions", 1873, "EXTERNALLASERTREATMENTFORSUPERFICIALLESIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1874, "Treatment of tumours of retina or choriod by radioactive plaque and/or diathermy and/or cryotherapy and/or laser therapy and/or photocoagulation", 1874, "TREATMENTOFTUMOURSOFRETINAORCHORIODBYRADIOACTIVEPLAQUEAND/ORDIATHERMYAND/ORCRYOTHERAPYAND/ORLASERTHERAPYAND/ORPHOTOCOAGULATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1875, "Implantation of intra vitreal drug delivery system", 1875, "IMPLANTATIONOFINTRAVITREALDRUGDELIVERYSYSTEM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1876, "Biopsy of vitreous body or anterior chamber contents", 1876, "BIOPSYOFVITREOUSBODYORANTERIORCHAMBERCONTENTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1877, "Adding of air or gas in vitreous as a post-operative procedure or pneumo-retinopexy", 1877, "ADDINGOFAIRORGASINVITREOUSASAPOST-OPERATIVEPROCEDUREORPNEUMO-RETINOPEXY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1878, "Anterior vitrectomy", 1878, "ANTERIORVITRECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1879, "Removal of silicon from globe", 1879, "REMOVALOFSILICONFROMGLOBE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1880, "Posterior vitrectomy including anterior vitrectomy, encircling of globe and vitreous replacement", 1880, "POSTERIORVITRECTOMYINCLUDINGANTERIORVITRECTOMY,ENCIRCLINGOFGLOBEANDVITREOUSREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1881, "Lensectomy done at time of posterior vitrectomy", 1881, "LENSECTOMYDONEATTIMEOFPOSTERIORVITRECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1882, "Drainage of orbital abscess", 1882, "DRAINAGEOFORBITALABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1883, "Orbit: Removal of tumour", 1883, "ORBIT:REMOVALOFTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1909, "Pterygium or conjunctival cyst or conjunctival tumour. No conjunctival flap or graft used", 1909, "PTERYGIUMORCONJUNCTIVALCYSTORCONJUNCTIVALTUMOUR.NOCONJUNCTIVALFLAPORGRAFTUSED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2393, "Other GIT stent insertion", 2393, "OTHERGITSTENTINSERTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2400, "Magnetic Resonance Imaging: Per anatomical region: Orbitae", 2400, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:ORBITAE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2395, "Cutting needle biopsy with image guidance", 2395, "CUTTINGNEEDLEBIOPSYWITHIMAGEGUIDANCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2905, "Klinolab Newborn Screen", 2905, "KLINOLABNEWBORNSCREEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2906, "Creatinine", 2906, "CREATININE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2907, "Creatinine clearance", 2907, "CREATININECLEARANCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2908, "Electrophoresis: Qualitative", 2908, "ELECTROPHORESIS:QUALITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2909, "Fetal Lung Maturity", 2909, "FETALLUNGMATURITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2910, "Uric acid clearance", 2910, "URICACIDCLEARANCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2911, "Urine/Fluid - Specific Gravity", 2911, "URINE/FLUID-SPECIFICGRAVITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2912, "Metabolites HPLC (High Pressure Liquid Chromatography)", 2912, "METABOLITESHPLC(HIGHPRESSURELIQUIDCHROMATOGRAPHY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2913, "Metabolites (Gaschromatography/Mass spectrophotometry)", 2913, "METABOLITES(GASCHROMATOGRAPHY/MASSSPECTROPHOTOMETRY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2904, "Steroids: Chromatography (each)", 2904, "STEROIDS:CHROMATOGRAPHY(EACH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2914, "Pharmacological/Drugs of abuse: Metabolites HPLC (High Pressure Liquid Chromatography)", 2914, "PHARMACOLOGICAL/DRUGSOFABUSE:METABOLITESHPLC(HIGHPRESSURELIQUIDCHROMATOGRAPHY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2916, "5-Hydroxy-indole-acetic acid: Screen test", 2916, "5-HYDROXY-INDOLE-ACETICACID:SCREENTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2917, "5HIAA (Hplc)", 2917, "5HIAA(HPLC)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2918, "5-Hydroxy-indole-acetic acid: Quantitative", 2918, "5-HYDROXY-INDOLE-ACETICACID:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2919, "Ketones: Excluding dip-stick method", 2919, "KETONES:EXCLUDINGDIP-STICKMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2920, "Reducing substances", 2920, "REDUCINGSUBSTANCES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2921, "Metanephrines: Column chromatography", 2921, "METANEPHRINES:COLUMNCHROMATOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2922, "Metanephrine (Hplc)", 2922, "METANEPHRINE(HPLC)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2923, "Aromatic amines (gas chromatography/mass spectrophotometry)", 2923, "AROMATICAMINES(GASCHROMATOGRAPHY/MASSSPECTROPHOTOMETRY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2924, "Nitrosonaphtol test for tyrosine", 2924, "NITROSONAPHTOLTESTFORTYROSINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2915, "Pharmacological/Drugs of abuse: Metabolites (Gaschromatography/Mass spectrophotometry)", 2915, "PHARMACOLOGICAL/DRUGSOFABUSE:METABOLITES(GASCHROMATOGRAPHY/MASSSPECTROPHOTOMETRY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2925, "Orotic Acid - Urine", 2925, "OROTICACID-URINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2903, "Glucose: Quantitative", 2903, "GLUCOSE:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2901, "Mucopolysaccharides: Qualitative", 2901, "MUCOPOLYSACCHARIDES:QUALITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2881, "Lactose", 2881, "LACTOSE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2882, "Vitamin B6", 2882, "VITAMINB6", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2883, "Zinc: Atomic absorption", 2883, "ZINC:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2884, "Urine dipstick, per stick (irrespective of the number of tests on stick)", 2884, "URINEDIPSTICK,PERSTICK(IRRESPECTIVEOFTHENUMBEROFTESTSONSTICK)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2885, "Abnormal pigments", 2885, "ABNORMALPIGMENTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2886, "Alkapton test: Homogentisic acid", 2886, "ALKAPTONTEST:HOMOGENTISICACID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2887, "Amino acids: Quantitative (Post derivatisation HPLC)", 2887, "AMINOACIDS:QUANTITATIVE(POSTDERIVATISATIONHPLC)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2888, "Amino laevulinic acid", 2888, "AMINOLAEVULINICACID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2889, "Amylase", 2889, "AMYLASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2902, "Oxalate", 2902, "OXALATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2890, "Arsenic", 2890, "ARSENIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2892, "Bence-Jones protein", 2892, "BENCE-JONESPROTEIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2893, "Phenol", 2893, "PHENOL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2894, "Calcium: Atomic absorption", 2894, "CALCIUM:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2895, "Calcium: Spectrophotometric", 2895, "CALCIUM:SPECTROPHOTOMETRIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2896, "Calcium: Absorption and excretion studies", 2896, "CALCIUM:ABSORPTIONANDEXCRETIONSTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2897, "Lead: Atomic absorption", 2897, "LEAD:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2898, "Urine collagen telopeptides", 2898, "URINECOLLAGENTELOPEPTIDES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2899, "Bile pigments: Qualitative", 2899, "BILEPIGMENTS:QUALITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2900, "Protein: Quantitative", 2900, "PROTEIN:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2891, "Ascorbic acid", 2891, "ASCORBICACID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2880, "C-reactive protein (Ultra sensitive)", 2880, "C-REACTIVEPROTEIN(ULTRASENSITIVE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2926, "Very long Chain Fatty Acids", 2926, "VERYLONGCHAINFATTYACIDS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2928, "Micro Albumin: Qualitative", 2928, "MICROALBUMIN:QUALITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2953, "Sodium", 2953, "SODIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2954, "Urea", 2954, "UREA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2955, "Uric acid", 2955, "URICACID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2956, "Fluoride", 2956, "FLUORIDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2957, "Total protein and protein electrophoresis", 2957, "TOTALPROTEINANDPROTEINELECTROPHORESIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2958, "VMA: Quantitative", 2958, "VMA:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2959, "Catecholamines (HPLC)", 2959, "CATECHOLAMINES(HPLC)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2960, "Immunofixation: Total protein, IgG, IgA, IgM, Kappa, Lambda", 2960, "IMMUNOFIXATION:TOTALPROTEIN,IGG,IGA,IGM,KAPPA,LAMBDA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2961, "Immunoglobulin D", 2961, "IMMUNOGLOBULIND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2952, "Potassium", 2952, "POTASSIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2962, "Cystine: Quantitative", 2962, "CYSTINE:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2964, "Hydroxyproline: Quantitative", 2964, "HYDROXYPROLINE:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2965, "Chloride", 2965, "CHLORIDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2966, "Fat: Qualitative", 2966, "FAT:QUALITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2967, "Fat: Quantitative", 2967, "FAT:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2968, "Ph", 2968, "PH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2969, "Occult blood: Chemical test", 2969, "OCCULTBLOOD:CHEMICALTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2970, "Occult blood: Monoclonal antibodies", 2970, "OCCULTBLOOD:MONOCLONALANTIBODIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2971, "Potassium", 2971, "POTASSIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2972, "Sodium", 2972, "SODIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2963, "Dinitrophenol hydrazine test: Ketoacids", 2963, "DINITROPHENOLHYDRAZINETEST:KETOACIDS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2927, "Micro Albumin: Quantitative", 2927, "MICROALBUMIN:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2951, "Phosphates", 2951, "PHOSPHATES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2949, "Ammonium chloride loading test", 2949, "AMMONIUMCHLORIDELOADINGTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2929, "pH: Excluding dip-stick method", 2929, "PH:EXCLUDINGDIP-STICKMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2930, "Thin layer chromatography: One way", 2930, "THINLAYERCHROMATOGRAPHY:ONEWAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2931, "Thin layer chromatography: Two way", 2931, "THINLAYERCHROMATOGRAPHY:TWOWAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2932, "Total organic matter screen: Infrared", 2932, "TOTALORGANICMATTERSCREEN:INFRARED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2933, "Organic acids: Quantitative: GCMS", 2933, "ORGANICACIDS:QUANTITATIVE:GCMS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2934, "Phenylpyruvic acid: Ferric chloride", 2934, "PHENYLPYRUVICACID:FERRICCHLORIDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2935, "Chromium Total Urine", 2935, "CHROMIUMTOTALURINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2936, "Phosphate excretion index", 2936, "PHOSPHATEEXCRETIONINDEX", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2937, "Porphobilinogen qualitative screen: Urine", 2937, "PORPHOBILINOGENQUALITATIVESCREEN:URINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2950, "Urobilinogen: Quantitative", 2950, "UROBILINOGEN:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2938, "Porphobilinogen/ALA: Quantitative each", 2938, "PORPHOBILINOGEN/ALA:QUANTITATIVEEACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2940, "Magnesium: Atomic absorption", 2940, "MAGNESIUM:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2941, "Identification of carbohydrate", 2941, "IDENTIFICATIONOFCARBOHYDRATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2942, "Identification of drug: Qualitative", 2942, "IDENTIFICATIONOFDRUG:QUALITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2943, "Identification of drug: Quantitative", 2943, "IDENTIFICATIONOFDRUG:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2944, "Urea clearance", 2944, "UREACLEARANCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2945, "Copper: Spectrophotometric", 2945, "COPPER:SPECTROPHOTOMETRIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2946, "Copper: Atomic absorption", 2946, "COPPER:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2947, "Indican or indole: Qualitative", 2947, "INDICANORINDOLE:QUALITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2948, "Chloride", 2948, "CHLORIDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2939, "Magnesium: Spectrophotometric", 2939, "MAGNESIUM:SPECTROPHOTOMETRIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2879, "Quantitative protein estimation: Labelled antibody", 2879, "QUANTITATIVEPROTEINESTIMATION:LABELLEDANTIBODY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2878, "Quantitative protein estimation: Nephelometer or Turbidometeric method", 2878, "QUANTITATIVEPROTEINESTIMATION:NEPHELOMETERORTURBIDOMETERICMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2877, "Quantitative protein estimation: Mancini method", 2877, "QUANTITATIVEPROTEINESTIMATION:MANCINIMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2808, "Lithium: Flame ionisation", 2808, "LITHIUM:FLAMEIONISATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2809, "Lithium: Atomic absorption", 2809, "LITHIUM:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2810, "Iron", 2810, "IRON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2811, "Iron-binding capacity", 2811, "IRON-BINDINGCAPACITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2812, "Blood gases: Astrup/pO2 and ancillary tests - can only be charged to a maximum of 6 times per patient per day", 2812, "BLOODGASES:ASTRUP/PO2ANDANCILLARYTESTS-CANONLYBECHARGEDTOAMAXIMUMOF6TIMESPERPATIENTPERDAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2813, "Oximetry analysis: MetHb, COHb, O2Hb, RHb, SulfHb", 2813, "OXIMETRYANALYSIS:METHB,COHB,O2HB,RHB,SULFHB", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2814, "Ketones in plasma: Qualitative", 2814, "KETONESINPLASMA:QUALITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2815, "Drug level-biological fluid: Quantitative", 2815, "DRUGLEVEL-BIOLOGICALFLUID:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2816, "Tacrolimus assay", 2816, "TACROLIMUSASSAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2807, "Immunofixation: Total protein, IgG, IgA, IgM, Kappa, Lambda", 2807, "IMMUNOFIXATION:TOTALPROTEIN,IGG,IGA,IGM,KAPPA,LAMBDA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2817, "Lysosomal enzyme assay", 2817, "LYSOSOMALENZYMEASSAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2819, "Lipase", 2819, "LIPASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2820, "Lactate", 2820, "LACTATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2821, "Lipoprotein electrophoresis", 2821, "LIPOPROTEINELECTROPHORESIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2822, "Orosmucoid", 2822, "OROSMUCOID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2823, "Osmolality: Serum or urine", 2823, "OSMOLALITY:SERUMORURINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2824, "Magnesium: Spectrophotometric", 2824, "MAGNESIUM:SPECTROPHOTOMETRIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2825, "Magnesium: Atomic absorption", 2825, "MAGNESIUM:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2826, "Mercury: Atomic absorption", 2826, "MERCURY:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2827, "Copper: Atomic absorption", 2827, "COPPER:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2818, "Thymidine kinase", 2818, "THYMIDINEKINASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2828, "Protein electrophoresis", 2828, "PROTEINELECTROPHORESIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2806, "HbA1C", 2806, "HBA1C", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2804, "Galactose-1-phosphate uridyl transferase", 2804, "GALACTOSE-1-PHOSPHATEURIDYLTRANSFERASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2784, "Cholinesterase phenotype (Dibucaine or fluoride each)", 2784, "CHOLINESTERASEPHENOTYPE(DIBUCAINEORFLUORIDEEACH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2785, "Total CO2", 2785, "TOTALCO2", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2786, "Creatinine", 2786, "CREATININE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2787, "CSF-Immunoglobulin G", 2787, "CSF-IMMUNOGLOBULING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2788, "C1-Esterase Inhibitor", 2788, "C1-ESTERASEINHIBITOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2789, "CSF-Albumin", 2789, "CSF-ALBUMIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2790, "CSF-IgG Index", 2790, "CSF-IGGINDEX", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2791, "Glutamic acid", 2791, "GLUTAMICACID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2792, "Homocysteine (random)", 2792, "HOMOCYSTEINE(RANDOM)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2805, "Fructosamine", 2805, "FRUCTOSAMINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2793, "Homocysteine (after Methionine load)", 2793, "HOMOCYSTEINE(AFTERMETHIONINELOAD)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2795, "Fibrinogen: Quantitative", 2795, "FIBRINOGEN:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2796, "Hollander test", 2796, "HOLLANDERTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2797, "Glucose tolerance test (2 specimens)", 2797, "GLUCOSETOLERANCETEST(2SPECIMENS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2798, "Glucose strip-test with photometric reading", 2798, "GLUCOSESTRIP-TESTWITHPHOTOMETRICREADING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2799, "Galactose", 2799, "GALACTOSE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2800, "Glucose tolerance test (3 specimens)", 2800, "GLUCOSETOLERANCETEST(3SPECIMENS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2801, "Glucose tolerance test (4 specimens)", 2801, "GLUCOSETOLERANCETEST(4SPECIMENS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2802, "Glucose: Quantitative", 2802, "GLUCOSE:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2803, "Glucose tolerance test (5 specimens)", 2803, "GLUCOSETOLERANCETEST(5SPECIMENS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2794, "D-Xylose absorption test: Two hours", 2794, "D-XYLOSEABSORPTIONTEST:TWOHOURS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2829, "IgG sub-class 1, 2, 3 or 4: Per sub-class", 2829, "IGGSUB-CLASS1,2,3OR4:PERSUB-CLASS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2830, "Phosphate", 2830, "PHOSPHATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2831, "Phospholipids", 2831, "PHOSPHOLIPIDS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2857, "Tay - Sachs Study", 2857, "TAY-SACHSSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2858, "Red cell magnesium", 2858, "REDCELLMAGNESIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2859, "Urea", 2859, "UREA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2860, "CK-MB: Mass determination: Quantitative (Automated)", 2860, "CK-MB:MASSDETERMINATION:QUANTITATIVE(AUTOMATED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2861, "CK-MB: Mass determination: Quantitative (Not automated)", 2861, "CK-MB:MASSDETERMINATION:QUANTITATIVE(NOTAUTOMATED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2862, "Myoglobin quantitative: Monoclonal immunological", 2862, "MYOGLOBINQUANTITATIVE:MONOCLONALIMMUNOLOGICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2863, "Uric acid", 2863, "URICACID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2864, "Vitamin D3", 2864, "VITAMIND3", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2865, "Vitamin A-saturation test", 2865, "VITAMINA-SATURATIONTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2856, "Triglyceride", 2856, "TRIGLYCERIDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2866, "Vitamin E (tocopherol)", 2866, "VITAMINE(TOCOPHEROL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2868, "Vitamin C (ascorbic acid)", 2868, "VITAMINC(ASCORBICACID)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2869, "Troponin isoforms: Each", 2869, "TROPONINISOFORMS:EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2870, "Apoprotein AI: Turbidometric method", 2870, "APOPROTEINAI:TURBIDOMETRICMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2871, "Apoprotein AII: Turbidometric method", 2871, "APOPROTEINAII:TURBIDOMETRICMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2872, "Apoprotein B: Turbidometric method", 2872, "APOPROTEINB:TURBIDOMETRICMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2873, "Lipoprotein (a)(Lp(a)) assay", 2873, "LIPOPROTEIN(A)(LP(A))ASSAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2874, "Sodium + potassium + chloride + CO2 + urea", 2874, "SODIUM+POTASSIUM+CHLORIDE+CO2+UREA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2875, "ELISA/EMIT technique", 2875, "ELISA/EMITTECHNIQUE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2876, "Sirolimus Assay", 2876, "SIROLIMUSASSAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2867, "Vitamin A", 2867, "VITAMINA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2855, "Lead: Atomic absorption", 2855, "LEAD:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2854, "Transferrin", 2854, "TRANSFERRIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2853, "Serum/plasma enzymes", 2853, "SERUM/PLASMAENZYMES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2832, "Potassium", 2832, "POTASSIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2833, "Sodium", 2833, "SODIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2834, "Protein: Total", 2834, "PROTEIN:TOTAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2835, "pH, pCO2 or pO2: Each", 2835, "PH,PCO2ORPO2:EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2836, "Pyruvic acid", 2836, "PYRUVICACID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2837, "Salicylates", 2837, "SALICYLATES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2838, "Secretin-pancreozymin response", 2838, "SECRETIN-PANCREOZYMINRESPONSE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2839, "Caeruloplasmin", 2839, "CAERULOPLASMIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2840, "Phenylalanine: Quantitative", 2840, "PHENYLALANINE:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2841, "Glutamate dehydrogenase (GDH)", 2841, "GLUTAMATEDEHYDROGENASE(GDH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2842, "Aspartate aminotransferase (AST)", 2842, "ASPARTATEAMINOTRANSFERASE(AST)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2843, "Alanine aminotransferase (ALT)", 2843, "ALANINEAMINOTRANSFERASE(ALT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2844, "Creatine kinase (CK)", 2844, "CREATINEKINASE(CK)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2845, "Lactate dehidrogenase (LD)", 2845, "LACTATEDEHIDROGENASE(LD)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2846, "Gamma glutamyl transferase (GGT)", 2846, "GAMMAGLUTAMYLTRANSFERASE(GGT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2847, "Aldolase", 2847, "ALDOLASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2848, "Angiotensin converting enzyme (ACE)", 2848, "ANGIOTENSINCONVERTINGENZYME(ACE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2849, "Lactate dehydrogenase isoenzyme", 2849, "LACTATEDEHYDROGENASEISOENZYME", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2850, "CK-MB: Immunoinhibition/precipitation", 2850, "CK-MB:IMMUNOINHIBITION/PRECIPITATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2851, "Adenosine deaminase", 2851, "ADENOSINEDEAMINASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2852, "Red cell enzymes: Each", 2852, "REDCELLENZYMES:EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2973, "Secretory IgA", 2973, "SECRETORYIGA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2974, "Stercobilin", 2974, "STERCOBILIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2975, "Elastase quantitative ELISA", 2975, "ELASTASEQUANTITATIVEELISA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2976, "Stercobilinogen: Quantitative", 2976, "STERCOBILINOGEN:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3098, "Follitropin (FSH)", 3098, "FOLLITROPIN(FSH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3099, "Lutropin (LH)", 3099, "LUTROPIN(LH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3100, "Soluble transferrin receptor", 3100, "SOLUBLETRANSFERRINRECEPTOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3101, "Prostate specific antigen", 3101, "PROSTATESPECIFICANTIGEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3102, "17 Hydroxy progesterone", 3102, "17HYDROXYPROGESTERONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3103, "Progesterone", 3103, "PROGESTERONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3104, "Alpha-feto protein", 3104, "ALPHA-FETOPROTEIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3105, "ACTH", 3105, "ACTH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3106, "Free PSA", 3106, "FREEPSA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3097, "Aldosterone", 3097, "ALDOSTERONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3107, "Sex hormone binding globulin", 3107, "SEXHORMONEBINDINGGLOBULIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3109, "Ferritin", 3109, "FERRITIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3110, "Anti-DNA antibodies", 3110, "ANTI-DNAANTIBODIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3111, "Antiplatelet antibodies", 3111, "ANTIPLATELETANTIBODIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3112, "Hepatitis: Per antigen or antibody", 3112, "HEPATITIS:PERANTIGENORANTIBODY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3113, "Transcobalamine", 3113, "TRANSCOBALAMINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3114, "Folic acid", 3114, "FOLICACID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3115, "Prostatic acid phosphatase", 3115, "PROSTATICACIDPHOSPHATASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3116, "Erythrocyte folate", 3116, "ERYTHROCYTEFOLATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3117, "Prolactin", 3117, "PROLACTIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3108, "Gastrin", 3108, "GASTRIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3118, "Procalcitonin: Semi-quantitative", 3118, "PROCALCITONIN:SEMI-QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3096, "Antigen specific IgE", 3096, "ANTIGENSPECIFICIGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3094, "Parathormone", 3094, "PARATHORMONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3074, "B-Type Natriuretic Peptide", 3074, "B-TYPENATRIURETICPEPTIDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3075, "Releasing hormone response", 3075, "RELEASINGHORMONERESPONSE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3076, "Vitamin B12", 3076, "VITAMINB12", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3077, "Vitamin D3: Calcitroil (RIA)", 3077, "VITAMIND3:CALCITROIL(RIA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3078, "Drug concentration: Quantitative", 3078, "DRUGCONCENTRATION:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3079, "Free hormone assay", 3079, "FREEHORMONEASSAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3080, "Growth hormone", 3080, "GROWTHHORMONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3081, "Hormone concentration: Quantitative", 3081, "HORMONECONCENTRATION:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3082, "Carbohydrate deficient transferrin", 3082, "CARBOHYDRATEDEFICIENTTRANSFERRIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3095, "IgE: Total", 3095, "IGE:TOTAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3083, "Cortisol", 3083, "CORTISOL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3085, "Testosterone", 3085, "TESTOSTERONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3086, "Free testosterone", 3086, "FREETESTOSTERONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3087, "Oestradiol", 3087, "OESTRADIOL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3088, "Oestriol", 3088, "OESTRIOL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3089, "Multiple antigen specific IgE screening test for Atopy", 3089, "MULTIPLEANTIGENSPECIFICIGESCREENINGTESTFORATOPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3090, "Thyrotropin (TSH)", 3090, "THYROTROPIN(TSH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3091, "Combined antigen specific IgE", 3091, "COMBINEDANTIGENSPECIFICIGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3092, "Free tri-iodothyronine (FT3)", 3092, "FREETRI-IODOTHYRONINE(FT3)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3093, "Renin activity", 3093, "RENINACTIVITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3084, "DHEA sulphate", 3084, "DHEASULPHATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3119, "Procalcitonin: Quantitative", 3119, "PROCALCITONIN:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3120, "HCG: Quantitative as used for Down's screen", 3120, "HCG:QUANTITATIVEASUSEDFORDOWN'SSCREEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3121, "First trimester Downs screen", 3121, "FIRSTTRIMESTERDOWNSSCREEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3147, "Foetal autopsy excluding histology", 3147, "FOETALAUTOPSYEXCLUDINGHISTOLOGY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3148, "Cell culture: Lymphocytes, cord blood", 3148, "CELLCULTURE:LYMPHOCYTES,CORDBLOOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3149, "Cell culture: Amniotic fluid, fibroblasts, leukaemia bloods, bone marrow, other specialised cultures", 3149, "CELLCULTURE:AMNIOTICFLUID,FIBROBLASTS,LEUKAEMIABLOODS,BONEMARROW,OTHERSPECIALISEDCULTURES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3150, "Cell culture: Chorionic villi", 3150, "CELLCULTURE:CHORIONICVILLI", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3151, "Cytogenetic analysis: Lymphocytes: Idiograms, karyotyping, one staining technique", 3151, "CYTOGENETICANALYSIS:LYMPHOCYTES:IDIOGRAMS,KARYOTYPING,ONESTAININGTECHNIQUE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3152, "Cytogenetic analysis: Amniotic fluid, fibroblasts, chorionic villi, products of conception, bone marrow, leukamia bloods: Idiograms, karyotyping, one straining technique", 3152, "CYTOGENETICANALYSIS:AMNIOTICFLUID,FIBROBLASTS,CHORIONICVILLI,PRODUCTSOFCONCEPTION,BONEMARROW,LEUKAMIABLOODS:IDIOGRAMS,KARYOTYPING,ONESTRAININGTECHNIQUE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3153, "Specified additional analysis e.g. mosaicism, Fanconi anaemia, Fra X, additional staining techniques", 3153, "SPECIFIEDADDITIONALANALYSISE.G.MOSAICISM,FANCONIANAEMIA,FRAX,ADDITIONALSTAININGTECHNIQUES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3154, "FISH procedure, including cell culture", 3154, "FISHPROCEDURE,INCLUDINGCELLCULTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3155, "FISH analysis per probe system", 3155, "FISHANALYSISPERPROBESYSTEM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3146, "Electron microscopy", 3146, "ELECTRONMICROSCOPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3156, "Blood: DNA extraction", 3156, "BLOOD:DNAEXTRACTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3158, "Blood: Genotype per person: PCR", 3158, "BLOOD:GENOTYPEPERPERSON:PCR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3159, "HIV Drug Resistance Testing", 3159, "HIVDRUGRESISTANCETESTING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3160, "Prenatal diagnosis: Amniotic fluid or chorionic tissue: DNA extraction", 3160, "PRENATALDIAGNOSIS:AMNIOTICFLUIDORCHORIONICTISSUE:DNAEXTRACTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3161, "Prenatal diagnosis: Amniotic fluid or chorionic tissue: Genotype per person: Southern blotting", 3161, "PRENATALDIAGNOSIS:AMNIOTICFLUIDORCHORIONICTISSUE:GENOTYPEPERPERSON:SOUTHERNBLOTTING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3162, "Prenatal diagnosis: Amniotic fluid or chorionic tissue: Genotype per person: PCR", 3162, "PRENATALDIAGNOSIS:AMNIOTICFLUIDORCHORIONICTISSUE:GENOTYPEPERPERSON:PCR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3163, "R6,67 for each kilometre in excess of 16 kilometres travelled in own car e.g. where a practitioner has to travel 19 kilometres in total to visit a patient, the fees shall be calculated as follows: 19-16=3 X R6,67 = R20,01", 3163, "R6,67FOREACHKILOMETREINEXCESSOF16KILOMETRESTRAVELLEDINOWNCARE.G.WHEREAPRACTITIONERHASTOTRAVEL19KILOMETRESINTOTALTOVISITAPATIENT,THEFEESSHALLBECALCULATEDASFOLLOWS:19-16=3XR6,67=R20,01", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3164, "Normal hours: Specialist: 18,00 clinical procedure units per hour or part thereof", 3164, "NORMALHOURS:SPECIALIST:18,00CLINICALPROCEDUREUNITSPERHOURORPARTTHEREOF", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3165, "Normal hours: General practitioner: 18,00 clinical procedure units per hour or part thereof", 3165, "NORMALHOURS:GENERALPRACTITIONER:18,00CLINICALPROCEDUREUNITSPERHOURORPARTTHEREOF", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3166, "Travelling fees are not payable to practitioners who assisted at operations on cases referred to surgeons by them", 3166, "TRAVELLINGFEESARENOTPAYABLETOPRACTITIONERSWHOASSISTEDATOPERATIONSONCASESREFERREDTOSURGEONSBYTHEM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3157, "Blood: Genotype per person: Southern blotting", 3157, "BLOOD:GENOTYPEPERPERSON:SOUTHERNBLOTTING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3145, "Immunoperoxidase studies", 3145, "IMMUNOPEROXIDASESTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3144, "Immunofluorescence studies", 3144, "IMMUNOFLUORESCENCESTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3143, "Special stains", 3143, "SPECIALSTAINS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3122, "Second Trimester Down's screen", 3122, "SECONDTRIMESTERDOWN'SSCREEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3123, "Thyroglubulin", 3123, "THYROGLUBULIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3124, "SCC marker", 3124, "SCCMARKER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3125, "Attendance in theatre", 3125, "ATTENDANCEINTHEATRE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3126, "After-hours service: (Monday to Friday) 17:00 to 08:00, Saturday 13:00 to Monday 08:00 and public holidays - Refer to General Rule B.", 3126, "AFTER-HOURSSERVICE:(MONDAYTOFRIDAY)17:00TO08:00,SATURDAY13:00TOMONDAY08:00ANDPUBLICHOLIDAYS-REFERTOGENERALRULEB.", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3127, "Unlisted pathology service: Fees for items not listed in the current Pathology schedule (sections 21, 22 and 23) will be based on the fee for a comparable service in the coding structure.  Please contact the SA Medical Association (SAMA) Private Practice Unit via e-mail on coding@samedical.org to obtain a comparable code for the unlisted pathology service which will be based on the fee for a comparable service in the coding structure. New items for these unlisted services should be added to the coding structure within six months or that specific unlisted pathology service should no longer be performed. Please note General Rule C and item 6999 are not applicable to pathology services (sections 21, 22 and 23)", 3127, "UNLISTEDPATHOLOGYSERVICE:FEESFORITEMSNOTLISTEDINTHECURRENTPATHOLOGYSCHEDULE(SECTIONS21,22AND23)WILLBEBASEDONTHEFEEFORACOMPARABLESERVICEINTHECODINGSTRUCTURE.PLEASECONTACTTHESAMEDICALASSOCIATION(SAMA)PRIVATEPRACTICEUNITVIAE-MAILONCODING@SAMEDICAL.ORGTOOBTAINACOMPARABLECODEFORTHEUNLISTEDPATHOLOGYSERVICEWHICHWILLBEBASEDONTHEFEEFORACOMPARABLESERVICEINTHECODINGSTRUCTURE.NEWITEMSFORTHESEUNLISTEDSERVICESSHOULDBEADDEDTOTHECODINGSTRUCTUREWITHINSIXMONTHSORTHATSPECIFICUNLISTEDPATHOLOGYSERVICESHOULDNOLONGERBEPERFORMED.PLEASENOTEGENERALRULECANDITEM6999ARENOTAPPLICABLETOPATHOLOGYSERVICES(SECTIONS21,22AND23)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3128, "Where pharmacological preparations (hormones, etc.) are administered as part of metabolic function tests, the cost of such preparation shall be charged separately", 3128, "WHEREPHARMACOLOGICALPREPARATIONS(HORMONES,ETC.)AREADMINISTEREDASPARTOFMETABOLICFUNCTIONTESTS,THECOSTOFSUCHPREPARATIONSHALLBECHARGEDSEPARATELY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3129, "Sputum, all body fluids and tumour aspirates: First unit", 3129, "SPUTUM,ALLBODYFLUIDSANDTUMOURASPIRATES:FIRSTUNIT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3130, "Sputum, all body fluids and tumour aspirates: Each additional unit", 3130, "SPUTUM,ALLBODYFLUIDSANDTUMOURASPIRATES:EACHADDITIONALUNIT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3131, "Performance of fine-needle aspiration for cytology", 3131, "PERFORMANCEOFFINE-NEEDLEASPIRATIONFORCYTOLOGY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3132, "Examination of fine needle aspiration in theatre", 3132, "EXAMINATIONOFFINENEEDLEASPIRATIONINTHEATRE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3133, "Vaginal or cervical smears, each", 3133, "VAGINALORCERVICALSMEARS,EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3134, "Histology per sample", 3134, "HISTOLOGYPERSAMPLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3135, "Histology per additional block, each", 3135, "HISTOLOGYPERADDITIONALBLOCK,EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3136, "Histology and frozen section in laboratory", 3136, "HISTOLOGYANDFROZENSECTIONINLABORATORY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3137, "Histology and frozen section in theatre", 3137, "HISTOLOGYANDFROZENSECTIONINTHEATRE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3138, "Second and subsequent frozen sections, each", 3138, "SECONDANDSUBSEQUENTFROZENSECTIONS,EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3139, "Attendance in theatre - no frozen section performed", 3139, "ATTENDANCEINTHEATRE-NOFROZENSECTIONPERFORMED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3140, "Serial step sections (including item 4567)", 3140, "SERIALSTEPSECTIONS(INCLUDINGITEM4567)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3141, "Serial step sections per additional block, each", 3141, "SERIALSTEPSECTIONSPERADDITIONALBLOCK,EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3142, "Histology consultation", 3142, "HISTOLOGYCONSULTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3073, "Calcitonin", 3073, "CALCITONIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2783, "Cholinesterase: Serum or erythrocyte: Each", 2783, "CHOLINESTERASE:SERUMORERYTHROCYTE:EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3072, "C-Peptide", 3072, "C-PEPTIDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3070, "Thyrotropin (TSH) + Free Thyroxine (FT4)", 3070, "THYROTROPIN(TSH)+FREETHYROXINE(FT4)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3001, "Saliva: Potassium", 3001, "SALIVA:POTASSIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3002, "Saliva: Sodium", 3002, "SALIVA:SODIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3003, "Sweat: Sodium", 3003, "SWEAT:SODIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3004, "Sweat: Potassium", 3004, "SWEAT:POTASSIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3005, "Sweat: Chloride", 3005, "SWEAT:CHLORIDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3006, "Sweat collection by iontophoresis (excluding collection material)", 3006, "SWEATCOLLECTIONBYIONTOPHORESIS(EXCLUDINGCOLLECTIONMATERIAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3007, "Tryptophane loading test", 3007, "TRYPTOPHANELOADINGTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3008, "Cell count", 3008, "CELLCOUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3009, "Cell count, protein, glucose and chloride", 3009, "CELLCOUNT,PROTEIN,GLUCOSEANDCHLORIDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3000, "Renal calculus: Crystallography", 3000, "RENALCALCULUS:CRYSTALLOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3010, "Chloride", 3010, "CHLORIDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3012, "Sodium", 3012, "SODIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3013, "Protein: Qualitative", 3013, "PROTEIN:QUALITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3014, "Protein: Quantitative", 3014, "PROTEIN:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3015, "Glucose", 3015, "GLUCOSE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3016, "Urea", 3016, "UREA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3017, "Protein electrophoresis", 3017, "PROTEINELECTROPHORESIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3018, "HLA test for specific allele DNA-PCR", 3018, "HLATESTFORSPECIFICALLELEDNA-PCR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3019, "HLA typing low resolution Class I DNA-PCR per locus", 3019, "HLATYPINGLOWRESOLUTIONCLASSIDNA-PCRPERLOCUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3020, "HLA typing low resolution Class II DNA-PCR per locus", 3020, "HLATYPINGLOWRESOLUTIONCLASSIIDNA-PCRPERLOCUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3011, "Potassium", 3011, "POTASSIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3021, "HLA typing high resolution Class I or II DNA-PCR per locus", 3021, "HLATYPINGHIGHRESOLUTIONCLASSIORIIDNA-PCRPERLOCUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2999, "Renal calculus: Chemistry", 2999, "RENALCALCULUS:CHEMISTRY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2997, "Gastric fluid: Total acid per specimen", 2997, "GASTRICFLUID:TOTALACIDPERSPECIMEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2977, "Chymotrypsin determination: Enzymatic", 2977, "CHYMOTRYPSINDETERMINATION:ENZYMATIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2978, "Porphyrin screen qualitative: Urine, stool, red blood cells: Each", 2978, "PORPHYRINSCREENQUALITATIVE:URINE,STOOL,REDBLOODCELLS:EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2979, "Porphyrin qualitative analysis by TLC: Urine, stool, red blood cells: Each", 2979, "PORPHYRINQUALITATIVEANALYSISBYTLC:URINE,STOOL,REDBLOODCELLS:EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2980, "Porphyrin: Total quantisation: Urine, stool, red blood cells: Each", 2980, "PORPHYRIN:TOTALQUANTISATION:URINE,STOOL,REDBLOODCELLS:EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2981, "Porphyrin quantitative analysis by TLC/HPLC: Urine, stool, red blood cells: Each", 2981, "PORPHYRINQUANTITATIVEANALYSISBYTLC/HPLC:URINE,STOOL,REDBLOODCELLS:EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2982, "Drug level in biological fluid: Monoclonal immunological", 2982, "DRUGLEVELINBIOLOGICALFLUID:MONOCLONALIMMUNOLOGICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2983, "Amylase in exudate", 2983, "AMYLASEINEXUDATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2984, "Fluoride in biological fluids and water", 2984, "FLUORIDEINBIOLOGICALFLUIDSANDWATER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2985, "Breast milk analysis", 2985, "BREASTMILKANALYSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2998, "Foam test: Amniotic fluid", 2998, "FOAMTEST:AMNIOTICFLUID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2986, "Trace metals in biological fluid: Atomic absorption", 2986, "TRACEMETALSINBIOLOGICALFLUID:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2988, "Calcium in fluid: Atomic absorption", 2988, "CALCIUMINFLUID:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2989, "Gallstone analysis: (Bilirubin, Ca, P, Oxalate, Cholesterol)", 2989, "GALLSTONEANALYSIS:(BILIRUBIN,CA,P,OXALATE,CHOLESTEROL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2990, "Urea breath test", 2990, "UREABREATHTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2991, "Lecithin in amniotic fluid: L/S ratio", 2991, "LECITHININAMNIOTICFLUID:L/SRATIO", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2992, "Lamellar body count in amniotic fluid", 2992, "LAMELLARBODYCOUNTINAMNIOTICFLUID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2993, "Bilirubin in amniotic fluid: Spectrophotometric essay", 2993, "BILIRUBININAMNIOTICFLUID:SPECTROPHOTOMETRICESSAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2994, "Oestrogen/Progesterone receptors: Fluorescent method", 2994, "OESTROGEN/PROGESTERONERECEPTORS:FLUORESCENTMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2995, "Oestrogen/Progesterone receptors: Cytosol radio-isotope technique", 2995, "OESTROGEN/PROGESTERONERECEPTORS:CYTOSOLRADIO-ISOTOPETECHNIQUE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2996, "Gastric contents: Maximal stimulation test", 2996, "GASTRICCONTENTS:MAXIMALSTIMULATIONTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2987, "Calcium in fluid: Spectrophotometric", 2987, "CALCIUMINFLUID:SPECTROPHOTOMETRIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3022, "Quantitative PCR (DNA/RNA)", 3022, "QUANTITATIVEPCR(DNA/RNA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3023, "Recombinant DNA technique", 3023, "RECOMBINANTDNATECHNIQUE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3024, "Ribosomal RNA targeting for bacteriological identification", 3024, "RIBOSOMALRNATARGETINGFORBACTERIOLOGICALIDENTIFICATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3050, "Nuclear Matrix Protein 22", 3050, "NUCLEARMATRIXPROTEIN22", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3051, "CA-125 tumour marker", 3051, "CA-125TUMOURMARKER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3052, "C6 complement functional essay", 3052, "C6COMPLEMENTFUNCTIONALESSAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3053, "House dust mite antigen ELIZA", 3053, "HOUSEDUSTMITEANTIGENELIZA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3054, "Beta-2-microglobulin", 3054, "BETA-2-MICROGLOBULIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3055, "Chromograqnin A", 3055, "CHROMOGRAQNINA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3056, "CA-549", 3056, "CA-549", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3057, "Tumour markers: Monoclonal immunological (each)", 3057, "TUMOURMARKERS:MONOCLONALIMMUNOLOGICAL(EACH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3058, "CA-195 tumour marker", 3058, "CA-195TUMOURMARKER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3049, "CA-199 tumour marker", 3049, "CA-199TUMOURMARKER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3059, "Carcino-embryonic antigen", 3059, "CARCINO-EMBRYONICANTIGEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3061, "TSH Receptor Ab", 3061, "TSHRECEPTORAB", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3062, "Cast Per Allergen", 3062, "CASTPERALLERGEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3063, "CA-724", 3063, "CA-724", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3064, "Neopterin", 3064, "NEOPTERIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3065, "Neuron specific enolase", 3065, "NEURONSPECIFICENOLASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3066, "Osteocalcin", 3066, "OSTEOCALCIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3067, "Vitamin B12-absorption: Shilling test", 3067, "VITAMINB12-ABSORPTION:SHILLINGTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3068, "Serotonin", 3068, "SEROTONIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3069, "Free thyroxine (FT4)", 3069, "FREETHYROXINE(FT4)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3060, "MCA antigen tumour marker", 3060, "MCAANTIGENTUMOURMARKER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3048, "Acetyl choline receptor antibody", 3048, "ACETYLCHOLINERECEPTORANTIBODY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3047, "Micro-albuminuria: Radio-isotope method", 3047, "MICRO-ALBUMINURIA:RADIO-ISOTOPEMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3046, "Mast cell tryptase", 3046, "MASTCELLTRYPTASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3025, "Ribosomal RNA amplification for bacteriological identification", 3025, "RIBOSOMALRNAAMPLIFICATIONFORBACTERIOLOGICALIDENTIFICATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3026, "Bacteriological DNA identification (LCR)", 3026, "BACTERIOLOGICALDNAIDENTIFICATION(LCR)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3027, "Bacteriological DNA identification (PCR)", 3027, "BACTERIOLOGICALDNAIDENTIFICATION(PCR)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3028, "Quantitative PCR - viral load (not HIV) - hepatitis C, hepatitis B, CMV, etc.", 3028, "QUANTITATIVEPCR-VIRALLOAD(NOTHIV)-HEPATITISC,HEPATITISB,CMV,ETC.", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3029, "Mixed antiglobulin reaction: Semen", 3029, "MIXEDANTIGLOBULINREACTION:SEMEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3030, "Friberg test: Semen", 3030, "FRIBERGTEST:SEMEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3031, "Kremer test: Semen", 3031, "KREMERTEST:SEMEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3032, "Semen analysis: Cell count", 3032, "SEMENANALYSIS:CELLCOUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3033, "Semen analysis: Cytology", 3033, "SEMENANALYSIS:CYTOLOGY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3034, "Semen analysis: Viability + motility - 6 hours", 3034, "SEMENANALYSIS:VIABILITY+MOTILITY-6HOURS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3035, "Semen analysis: Supravital stain", 3035, "SEMENANALYSIS:SUPRAVITALSTAIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3036, "Seminal fluid: Alpha glucosidase", 3036, "SEMINALFLUID:ALPHAGLUCOSIDASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3037, "Seminal fluid fructose", 3037, "SEMINALFLUIDFRUCTOSE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3038, "Seminal fluid: Acid phosphatase", 3038, "SEMINALFLUID:ACIDPHOSPHATASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3039, "HCG: Latex agglutination: Qualitative (side room)", 3039, "HCG:LATEXAGGLUTINATION:QUALITATIVE(SIDEROOM)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3040, "HCG: Latex agglutination: Semi-quantitative (side room)", 3040, "HCG:LATEXAGGLUTINATION:SEMI-QUANTITATIVE(SIDEROOM)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3041, "HCG: Monoclonal immunological: Qualitative", 3041, "HCG:MONOCLONALIMMUNOLOGICAL:QUALITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3042, "HCG: Monoclonal immunological: Quantitative", 3042, "HCG:MONOCLONALIMMUNOLOGICAL:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3043, "Bone Specific Alk Phosphatase", 3043, "BONESPECIFICALKPHOSPHATASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3044, "Anti IgE receptor antibody test (10 samples and dilution)", 3044, "ANTIIGERECEPTORANTIBODYTEST(10SAMPLESANDDILUTION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3045, "Eosinophil cationic protein", 3045, "EOSINOPHILCATIONICPROTEIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 3071, "Insulin", 3071, "INSULIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2782, "HDL cholesterol", 2782, "HDLCHOLESTEROL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2781, "Cholesterol total", 2781, "CHOLESTEROLTOTAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2780, "LDL cholesterol (chemical determination)", 2780, "LDLCHOLESTEROL(CHEMICALDETERMINATION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2517, "Global Fee for remote afterloading - includes input in calibration, graphic planning, daily treatment, monitoring, removal and disposal of implant materials on completion. The cost of materials are not included - TECHNICAL COMPONENT", 2517, "GLOBALFEEFORREMOTEAFTERLOADING-INCLUDESINPUTINCALIBRATION,GRAPHICPLANNING,DAILYTREATMENT,MONITORING,REMOVALANDDISPOSALOFIMPLANTMATERIALSONCOMPLETION.THECOSTOFMATERIALSARENOTINCLUDED-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2518, "Brachytherapy Imaging: Brachytherapy: Special imaging where needed and if used, unusual to be added to any code other than items 5883 or 5885", 2518, "BRACHYTHERAPYIMAGING:BRACHYTHERAPY:SPECIALIMAGINGWHERENEEDEDANDIFUSED,UNUSUALTOBEADDEDTOANYCODEOTHERTHANITEMS5883OR5885", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2519, "Alkali resistant haemoglobin", 2519, "ALKALIRESISTANTHAEMOGLOBIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2520, "Antiglobulin test (Coombs' or trypsinzied red cells)", 2520, "ANTIGLOBULINTEST(COOMBS'ORTRYPSINZIEDREDCELLS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2521, "Antibody titration", 2521, "ANTIBODYTITRATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2522, "Arneth count", 2522, "ARNETHCOUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2523, "Antibody identification", 2523, "ANTIBODYIDENTIFICATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2524, "Bleeding time (does not include the cost of the simplate device)", 2524, "BLEEDINGTIME(DOESNOTINCLUDETHECOSTOFTHESIMPLATEDEVICE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2525, "Blood volume, dye method", 2525, "BLOODVOLUME,DYEMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2516, "Brachytherapy Treatment: Global fee for remote afterloading - includes input in calibration, graphic planning, daily treatment, monitoring, removal and disposal of implant materials on completion. The cost of materials are not included - PROFESSIONAL COMPONENT", 2516, "BRACHYTHERAPYTREATMENT:GLOBALFEEFORREMOTEAFTERLOADING-INCLUDESINPUTINCALIBRATION,GRAPHICPLANNING,DAILYTREATMENT,MONITORING,REMOVALANDDISPOSALOFIMPLANTMATERIALSONCOMPLETION.THECOSTOFMATERIALSARENOTINCLUDED-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2526, "Buffy layer examination", 2526, "BUFFYLAYEREXAMINATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2528, "Bone marrow cytological examination only", 2528, "BONEMARROWCYTOLOGICALEXAMINATIONONLY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2529, "Bone marrow: Aspiration", 2529, "BONEMARROW:ASPIRATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2530, "Bone marrow trephine biopsy", 2530, "BONEMARROWTREPHINEBIOPSY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2531, "Bone marrow aspiration and trephine biopsy (excluding histology)", 2531, "BONEMARROWASPIRATIONANDTREPHINEBIOPSY(EXCLUDINGHISTOLOGY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2532, "Capillary fragility: Hess", 2532, "CAPILLARYFRAGILITY:HESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2533, "Circulating anticoagulants", 2533, "CIRCULATINGANTICOAGULANTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2534, "Coagulation factor inhibitor assay", 2534, "COAGULATIONFACTORINHIBITORASSAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2535, "Activated protein C resistance", 2535, "ACTIVATEDPROTEINCRESISTANCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2536, "Coagulation time", 2536, "COAGULATIONTIME", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2527, "Mean Cell Volume", 2527, "MEANCELLVOLUME", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2537, "Anti-factor Xa Activity", 2537, "ANTI-FACTORXAACTIVITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2515, "Brachytherapy Treatment: Global fee for manual afterloading - includes storage, handling, calibration, planning (manual or computerized), manual loading, daily treatment, monitoring, removal and disposal of the isotopes. The cost of any isotopes and materials are not included", 2515, "BRACHYTHERAPYTREATMENT:GLOBALFEEFORMANUALAFTERLOADING-INCLUDESSTORAGE,HANDLING,CALIBRATION,PLANNING(MANUALORCOMPUTERIZED),MANUALLOADING,DAILYTREATMENT,MONITORING,REMOVALANDDISPOSALOFTHEISOTOPES.THECOSTOFANYISOTOPESANDMATERIALSARENOTINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2513, "Brachytherapy Implants: Implants - Intermediate Complexity, planar implants requiring >1 guide tube for the administration of brachytherapy, or the use of >8 dwell points in a single guide tube, or any procedure requiring <8 dwell points but which requires general anaesthesia for insertion. The cost of materials are not included", 2513, "BRACHYTHERAPYIMPLANTS:IMPLANTS-INTERMEDIATECOMPLEXITY,PLANARIMPLANTSREQUIRING>1GUIDETUBEFORTHEADMINISTRATIONOFBRACHYTHERAPY,ORTHEUSEOF>8DWELLPOINTSINASINGLEGUIDETUBE,ORANYPROCEDUREREQUIRING<8DWELLPOINTSBUTWHICHREQUIRESGENERALANAESTHESIAFORINSERTION.THECOSTOFMATERIALSARENOTINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2493, "Weekly Radiation Treatment Sessions - Conventional Techniques: Weekly Treatment, Special Technique - PROFESSIONAL COMPONENT", 2493, "WEEKLYRADIATIONTREATMENTSESSIONS-CONVENTIONALTECHNIQUES:WEEKLYTREATMENT,SPECIALTECHNIQUE-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2494, "Weekly Radiation Treatment Sessions - Conventional Techniques: Weekly Treatment, Special Technique - TECHNICAL COMPONENT", 2494, "WEEKLYRADIATIONTREATMENTSESSIONS-CONVENTIONALTECHNIQUES:WEEKLYTREATMENT,SPECIALTECHNIQUE-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2495, "Weekly Radiation Treatment Sessions - Advanced Techniques: Weekly Treatment, Multi Leaf Collimators, Single Volume of Interest - PROFESSIONAL COMPONENT", 2495, "WEEKLYRADIATIONTREATMENTSESSIONS-ADVANCEDTECHNIQUES:WEEKLYTREATMENT,MULTILEAFCOLLIMATORS,SINGLEVOLUMEOFINTEREST-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2496, "Weekly Radiation Treatment Sessions - Advanced Techniques: Weekly Treatment, Multi Leaf Collimators, Single Volume of Interest - TECHNICAL COMPONENT", 2496, "WEEKLYRADIATIONTREATMENTSESSIONS-ADVANCEDTECHNIQUES:WEEKLYTREATMENT,MULTILEAFCOLLIMATORS,SINGLEVOLUMEOFINTEREST-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2497, "Weekly Radiation Treatment Sessions - Advanced Techniques: Weekly Treatment, Multi Leaf Collimators, Multiple Volumes of Interest - PROFESSIONAL COMPONENT", 2497, "WEEKLYRADIATIONTREATMENTSESSIONS-ADVANCEDTECHNIQUES:WEEKLYTREATMENT,MULTILEAFCOLLIMATORS,MULTIPLEVOLUMESOFINTEREST-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2498, "Weekly Radiation Treatment Sessions - Advanced Techniques: Weekly Treatment, Multi Leaf Collimators, Multiple Volumes of Interest - TECHNICAL COMPONENT", 2498, "WEEKLYRADIATIONTREATMENTSESSIONS-ADVANCEDTECHNIQUES:WEEKLYTREATMENT,MULTILEAFCOLLIMATORS,MULTIPLEVOLUMESOFINTEREST-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2499, "Weekly Radiation Treatment Sessions - Advanced Techniques: Weekly Treatment, Multi Leaf Collimators, Special Technique - PROFESSIONAL COMPONENT", 2499, "WEEKLYRADIATIONTREATMENTSESSIONS-ADVANCEDTECHNIQUES:WEEKLYTREATMENT,MULTILEAFCOLLIMATORS,SPECIALTECHNIQUE-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2500, "Weekly Radiation Treatment Sessions - Advanced Techniques: Weekly Treatment, Multi Leaf Collimators, Special Technique - TECHNICAL COMPONENT", 2500, "WEEKLYRADIATIONTREATMENTSESSIONS-ADVANCEDTECHNIQUES:WEEKLYTREATMENT,MULTILEAFCOLLIMATORS,SPECIALTECHNIQUE-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2501, "Weekly Radiation Treatment Sessions - Advanced Techniques: Weekly Treatment, Intensity Modulated Radiotherapy - PROFESSIONAL COMPONENT", 2501, "WEEKLYRADIATIONTREATMENTSESSIONS-ADVANCEDTECHNIQUES:WEEKLYTREATMENT,INTENSITYMODULATEDRADIOTHERAPY-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2514, "Brachytherapy Implants: Implants - High Complexity requiring complex volumetric studies. Inclusive fee for implant under local or general anaesthetic. The cost of materials are not included", 2514, "BRACHYTHERAPYIMPLANTS:IMPLANTS-HIGHCOMPLEXITYREQUIRINGCOMPLEXVOLUMETRICSTUDIES.INCLUSIVEFEEFORIMPLANTUNDERLOCALORGENERALANAESTHETIC.THECOSTOFMATERIALSARENOTINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2502, "Weekly Radiation Treatment Sessions - Advanced Techniques: Weekly Treatment, Intensity Modulated Radiotherapy - TECHNICAL COMPONENT", 2502, "WEEKLYRADIATIONTREATMENTSESSIONS-ADVANCEDTECHNIQUES:WEEKLYTREATMENT,INTENSITYMODULATEDRADIOTHERAPY-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2504, "Weekly Radiation Treatment Sessions - Advanced Techniques: Weekly Treatment, Total Body Radiotherapy or Similar - TECHNICAL COMPONENT", 2504, "WEEKLYRADIATIONTREATMENTSESSIONS-ADVANCEDTECHNIQUES:WEEKLYTREATMENT,TOTALBODYRADIOTHERAPYORSIMILAR-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2505, "Stereotactic Radiation: Stereotactic Radiation, Single or up to 4 (four) Fractions, Global Fee - PROFESSIONAL COMPONENT", 2505, "STEREOTACTICRADIATION:STEREOTACTICRADIATION,SINGLEORUPTO4(FOUR)FRACTIONS,GLOBALFEE-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2506, "Stereotactic Radiation: Stereotactic Radiation, Single Fraction, Global Fee - TECHNICAL COMPONENT", 2506, "STEREOTACTICRADIATION:STEREOTACTICRADIATION,SINGLEFRACTION,GLOBALFEE-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2507, "Stereotactic Radiation: Stereotactic Radiation, 5 (five) or more Fractions, Full course, Global Fee - PROFESSIONAL COMPONENT", 2507, "STEREOTACTICRADIATION:STEREOTACTICRADIATION,5(FIVE)ORMOREFRACTIONS,FULLCOURSE,GLOBALFEE-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2508, "Stereotactic Radiation: Stereotactic Radiation, Fractionated, Full course, Global Fee - TECHNICAL COMPONENT", 2508, "STEREOTACTICRADIATION:STEREOTACTICRADIATION,FRACTIONATED,FULLCOURSE,GLOBALFEE-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2509, "Isotope/Applicator Therapy: Isotopes - Low Complexity, administration of low dose oral isotopes or use of surface applicators, up to five applications. Typically an out patient procedure. The cost of any isotopes and materials are not included", 2509, "ISOTOPE/APPLICATORTHERAPY:ISOTOPES-LOWCOMPLEXITY,ADMINISTRATIONOFLOWDOSEORALISOTOPESORUSEOFSURFACEAPPLICATORS,UPTOFIVEAPPLICATIONS.TYPICALLYANOUTPATIENTPROCEDURE.THECOSTOFANYISOTOPESANDMATERIALSARENOTINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2510, "Isotope/Applicator Therapy: Isotopes - Intermediate Complexity, administration of isotopes requiring invasive techniques such as intravenous, intracavitary or intra-articular radioactive isotopes. Typical out patient procedure or admission and monitoring less than 48 hours. The cost of any isotopes and materials are not included", 2510, "ISOTOPE/APPLICATORTHERAPY:ISOTOPES-INTERMEDIATECOMPLEXITY,ADMINISTRATIONOFISOTOPESREQUIRINGINVASIVETECHNIQUESSUCHASINTRAVENOUS,INTRACAVITARYORINTRA-ARTICULARRADIOACTIVEISOTOPES.TYPICALOUTPATIENTPROCEDUREORADMISSIONANDMONITORINGLESSTHAN48HOURS.THECOSTOFANYISOTOPESANDMATERIALSARENOTINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2511, "Isotope/Applicator Therapy: Isotopes - High Complexity, surface application of seed arrays requiring dosimetric assessment and/or high dose radio-active isotopes requiring admission and monitoring. Typically requires in patient admission and monitoring for more than 48 hours. The cost of any isotopes and materials are not included", 2511, "ISOTOPE/APPLICATORTHERAPY:ISOTOPES-HIGHCOMPLEXITY,SURFACEAPPLICATIONOFSEEDARRAYSREQUIRINGDOSIMETRICASSESSMENTAND/ORHIGHDOSERADIO-ACTIVEISOTOPESREQUIRINGADMISSIONANDMONITORING.TYPICALLYREQUIRESINPATIENTADMISSIONANDMONITORINGFORMORETHAN48HOURS.THECOSTOFANYISOTOPESANDMATERIALSARENOTINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2512, "Brachytherapy Implants: Implants - Low Complexity, placement of a single guide tube for the administration of brachytherapy requiring <8 dwell points. The cost of materials are not included", 2512, "BRACHYTHERAPYIMPLANTS:IMPLANTS-LOWCOMPLEXITY,PLACEMENTOFASINGLEGUIDETUBEFORTHEADMINISTRATIONOFBRACHYTHERAPYREQUIRING<8DWELLPOINTS.THECOSTOFMATERIALSARENOTINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2503, "Weekly Radiation Treatment Sessions - Advanced Techniques: Weekly Treatment, Total Body Radiotherapy or Similar - PROFESSIONAL COMPONENT", 2503, "WEEKLYRADIATIONTREATMENTSESSIONS-ADVANCEDTECHNIQUES:WEEKLYTREATMENT,TOTALBODYRADIOTHERAPYORSIMILAR-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2538, "Cold agglutinins", 2538, "COLDAGGLUTININS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2539, "Protein S: Functional", 2539, "PROTEINS:FUNCTIONAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2540, "Compatibility for blood transfusion", 2540, "COMPATIBILITYFORBLOODTRANSFUSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2566, "Haemoglobin estimation", 2566, "HAEMOGLOBINESTIMATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2567, "Contact activated product assay", 2567, "CONTACTACTIVATEDPRODUCTASSAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2568, "Grouping: A B and O antigens", 2568, "GROUPING:ABANDOANTIGENS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2569, "Grouping: Rh antigen", 2569, "GROUPING:RHANTIGEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2570, "PIVKA", 2570, "PIVKA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2571, "Euglobulin Lysis time", 2571, "EUGLOBULINLYSISTIME", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2572, "Haemoglobin A2 (column chromatography)", 2572, "HAEMOGLOBINA2(COLUMNCHROMATOGRAPHY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2573, "Haemoglobin electrophoresis", 2573, "HAEMOGLOBINELECTROPHORESIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2574, "Haemoglobin-S (solubility test)", 2574, "HAEMOGLOBIN-S(SOLUBILITYTEST)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2565, "Factor XIII related antigen", 2565, "FACTORXIIIRELATEDANTIGEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2575, "Factor III-availability test", 2575, "FACTORIII-AVAILABILITYTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2577, "Ham's acidified serum test", 2577, "HAM'SACIDIFIEDSERUMTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2578, "Heinz bodies", 2578, "HEINZBODIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2579, "Haemosiderin in urinary sediment", 2579, "HAEMOSIDERININURINARYSEDIMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2580, "Heparin tolerance", 2580, "HEPARINTOLERANCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2581, "Leucocyte differential count", 2581, "LEUCOCYTEDIFFERENTIALCOUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2582, "Leucocytes: Total count", 2582, "LEUCOCYTES:TOTALCOUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2583, "QBC malaria concentration and fluorescent staining", 2583, "QBCMALARIACONCENTRATIONANDFLUORESCENTSTAINING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2584, "LE-cells", 2584, "LE-CELLS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2585, "Neutrophil alkaline phosphatase", 2585, "NEUTROPHILALKALINEPHOSPHATASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2576, "Haptoglobin: Quantitative", 2576, "HAPTOGLOBIN:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2564, "Coagulation factor correction study", 2564, "COAGULATIONFACTORCORRECTIONSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2563, "Factor VIII related antigen", 2563, "FACTORVIIIRELATEDANTIGEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2562, "Coagulation factors: Quantitative", 2562, "COAGULATIONFACTORS:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2541, "Cryoglobulin", 2541, "CRYOGLOBULIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2542, "Protein C (chromogenic)", 2542, "PROTEINC(CHROMOGENIC)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2543, "Anti-thrombin III (chromogenic)", 2543, "ANTI-THROMBINIII(CHROMOGENIC)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2544, "Plasminogen (chromogenic)", 2544, "PLASMINOGEN(CHROMOGENIC)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2545, "Lupus Russel Viper method", 2545, "LUPUSRUSSELVIPERMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2546, "Lupus Kaolin Exner method", 2546, "LUPUSKAOLINEXNERMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2547, "Erythrocyte count", 2547, "ERYTHROCYTECOUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2548, "Factors V and VII: Qualitative", 2548, "FACTORSVANDVII:QUALITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2549, "Coagulation factor assay: Functional", 2549, "COAGULATIONFACTORASSAY:FUNCTIONAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2550, "Coagulation factor assay: Immunological", 2550, "COAGULATIONFACTORASSAY:IMMUNOLOGICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2551, "Erythrocyte sedimentation rate", 2551, "ERYTHROCYTESEDIMENTATIONRATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2552, "Fibrin stabilizing factor (urea test)", 2552, "FIBRINSTABILIZINGFACTOR(UREATEST)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2553, "Fibrin monomers", 2553, "FIBRINMONOMERS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2554, "Plasminogen activator inhibitor (PAI-I)", 2554, "PLASMINOGENACTIVATORINHIBITOR(PAI-I)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2555, "Tissue plasminogen Activator (tPA)", 2555, "TISSUEPLASMINOGENACTIVATOR(TPA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2556, "Osmotic fragility (screen)", 2556, "OSMOTICFRAGILITY(SCREEN)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2557, "Osmotic fragility test: Quantitative", 2557, "OSMOTICFRAGILITYTEST:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2558, "Osmotic fragility (before and after incubation)", 2558, "OSMOTICFRAGILITY(BEFOREANDAFTERINCUBATION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2559, "ABO Reverse Group", 2559, "ABOREVERSEGROUP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2560, "Full blood count (including items 3739, 3762, 3783, 3785, 3791)", 2560, "FULLBLOODCOUNT(INCLUDINGITEMS3739,3762,3783,3785,3791)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2561, "Full cross match", 2561, "FULLCROSSMATCH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2492, "Weekly Radiation Treatment Sessions - Conventional Techniques: Weekly Treatment,  Multiple Volumes of Interest - TECHNICAL COMPONENT", 2492, "WEEKLYRADIATIONTREATMENTSESSIONS-CONVENTIONALTECHNIQUES:WEEKLYTREATMENT,MULTIPLEVOLUMESOFINTEREST-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2586, "Packed cell volume: Haematocrit", 2586, "PACKEDCELLVOLUME:HAEMATOCRIT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2491, "Weekly Radiation Treatment Sessions - Conventional Techniques: Weekly Treatment,  Multiple Volumes of Interest - PROFESSIONAL COMPONENT", 2491, "WEEKLYRADIATIONTREATMENTSESSIONS-CONVENTIONALTECHNIQUES:WEEKLYTREATMENT,MULTIPLEVOLUMESOFINTEREST-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2489, "Weekly Radiation Treatment Sessions - Conventional Techniques: Weekly Treatment,  Single Volume of Interest - PROFESSIONAL COMPONENT", 2489, "WEEKLYRADIATIONTREATMENTSESSIONS-CONVENTIONALTECHNIQUES:WEEKLYTREATMENT,SINGLEVOLUMEOFINTEREST-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2420, "Magnetic Resonance Imaging: Per anatomical region: Right shoulder", 2420, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:RIGHTSHOULDER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2421, "Magnetic Resonance Imaging: Per anatomical region: Both hips", 2421, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:BOTHHIPS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2422, "Magnetic Resonance Imaging: Per anatomical region: Left hip", 2422, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:LEFTHIP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2423, "Magnetic Resonance Imaging: Per anatomical region: Right hip", 2423, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:RIGHTHIP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2424, "Magnetic Resonance Imaging: Per anatomical region: Left upper-arm", 2424, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:LEFTUPPER-ARM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2425, "Magnetic Resonance Imaging: Per anatomical region: Right upper-arm", 2425, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:RIGHTUPPER-ARM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2426, "Magnetic Resonance Imaging: Per anatomical region: Left elbow", 2426, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:LEFTELBOW", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2427, "Magnetic Resonance Imaging: Per anatomical region: Right elbow", 2427, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:RIGHTELBOW", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2428, "Magnetic Resonance Imaging: Per anatomical region: Left fore-arm", 2428, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:LEFTFORE-ARM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2419, "Magnetic Resonance Imaging: Per anatomical region: Left shoulder", 2419, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:LEFTSHOULDER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2429, "Magnetic Resonance Imaging: Per anatomical region: Right fore-arm", 2429, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:RIGHTFORE-ARM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2431, "Magnetic Resonance Imaging: Per anatomical region: Right wrist and hand", 2431, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:RIGHTWRISTANDHAND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2432, "Magnetic Resonance Imaging: Per anatomical region: Left upper-leg", 2432, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:LEFTUPPER-LEG", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2433, "Magnetic Resonance Imaging: Per anatomical region: Right upper-leg", 2433, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:RIGHTUPPER-LEG", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2434, "Magnetic Resonance Imaging: Per anatomical region: Left knee", 2434, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:LEFTKNEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2435, "Magnetic Resonance Imaging: Per anatomical region: Right knee", 2435, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:RIGHTKNEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2436, "Magnetic Resonance Imaging: Per anatomical region: Left lower-leg", 2436, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:LEFTLOWER-LEG", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2437, "Magnetic Resonance Imaging: Per anatomical region: Right lower-leg", 2437, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:RIGHTLOWER-LEG", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2438, "Magnetic Resonance Imaging: Per anatomical region: Left ankle", 2438, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:LEFTANKLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2439, "Magnetic Resonance Imaging: Per anatomical region: Right ankle", 2439, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:RIGHTANKLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2430, "Magnetic Resonance Imaging: Per anatomical region: Left wrist and hand", 2430, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:LEFTWRISTANDHAND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2440, "Magnetic Resonance Imaging: Per anatomical region: Left foot", 2440, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:LEFTFOOT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2418, "Magnetic Resonance Imaging: Per anatomical region: Soft tissue: Back", 2418, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:SOFTTISSUE:BACK", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2416, "Magnetic Resonance Imaging: Per anatomical region: Thorax wall", 2416, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:THORAXWALL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2396, "Chest drain insertion in radiology suite", 2396, "CHESTDRAININSERTIONINRADIOLOGYSUITE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2397, "Percutaneous cyst or tumour ablation (non aspiration)", 2397, "PERCUTANEOUSCYSTORTUMOURABLATION(NONASPIRATION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2398, "Vertebroplasty - Introduction of stabilising material under screening or CT control - per level", 2398, "VERTEBROPLASTY-INTRODUCTIONOFSTABILISINGMATERIALUNDERSCREENINGORCTCONTROL-PERLEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2399, "Magnetic Resonance Imaging: Per anatomical region: Brain", 2399, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:BRAIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1620, "Full fee for complete neurological evoked potential evaluation including neurological AEP, bilateral VEP, and bilateral median and/or posterior tibial stimulation", 1620, "FULLFEEFORCOMPLETENEUROLOGICALEVOKEDPOTENTIALEVALUATIONINCLUDINGNEUROLOGICALAEP,BILATERALVEP,ANDBILATERALMEDIANAND/ORPOSTERIORTIBIALSTIMULATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2401, "Magnetic Resonance Imaging: Per anatomical region: Paranasal sinuses", 2401, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:PARANASALSINUSES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2402, "Magnetic Resonance Imaging: Per anatomical region: Soft tissue: Face/skull", 2402, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:SOFTTISSUE:FACE/SKULL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2403, "Magnetic Resonance Imaging: Per anatomical region: Skull basis/cranio-cervical joint", 2403, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:SKULLBASIS/CRANIO-CERVICALJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2404, "Magnetic Resonance Imaging: Per anatomical region: Middle and internal ears", 2404, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:MIDDLEANDINTERNALEARS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2417, "Magnetic Resonance Imaging: Per anatomical region: Mediastinum", 2417, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:MEDIASTINUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2405, "Magnetic Resonance Imaging: Per anatomical region: Soft tissue: Neck", 2405, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:SOFTTISSUE:NECK", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2407, "Magnetic Resonance Imaging: Per anatomical region: Hypophysis (see modifiers 6104 and 6105 for limited examinations)", 2407, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:HYPOPHYSIS(SEEMODIFIERS6104AND6105FORLIMITEDEXAMINATIONS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2408, "Magnetic Resonance Imaging: Per anatomical region: Bone tumour (see modifier 6103)", 2408, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:BONETUMOUR(SEEMODIFIER6103)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2409, "Magnetic Resonance Imaging: Per anatomical region: Cervical vertebrae", 2409, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:CERVICALVERTEBRAE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2410, "Magnetic Resonance Imaging: Per anatomical region: Thoracic vertebrae", 2410, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:THORACICVERTEBRAE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2411, "Magnetic Resonance Imaging: Per anatomical region: Lumbar vertebrae", 2411, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:LUMBARVERTEBRAE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2412, "Magnetic Resonance Imaging: Per anatomical region: Sacrum", 2412, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:SACRUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2413, "Magnetic Resonance Imaging: Per anatomical region: Pelvis", 2413, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:PELVIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2414, "Magnetic Resonance Imaging: Per anatomical region: Pelvic organs", 2414, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:PELVICORGANS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2415, "Magnetic Resonance Imaging: Per anatomical region: Abdomen", 2415, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:ABDOMEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2406, "Magnetic Resonance Imaging: Per anatomical region: Thyroid/para-thyroid", 2406, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:THYROID/PARA-THYROID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2441, "Magnetic Resonance Imaging: Per anatomical region: Right foot", 2441, "MAGNETICRESONANCEIMAGING:PERANATOMICALREGION:RIGHTFOOT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2442, "Magnetic Resonance angiography (See modifiers 6106 to 6108): Brain", 2442, "MAGNETICRESONANCEANGIOGRAPHY(SEEMODIFIERS6106TO6108):BRAIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2443, "Magnetic Resonance angiography (See modifiers 6106 to 6108): Large vessels: Neck", 2443, "MAGNETICRESONANCEANGIOGRAPHY(SEEMODIFIERS6106TO6108):LARGEVESSELS:NECK", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2469, "Three Dimensional Radiotherapy Planning Procedures: 3-Dimensional Simulation and Graphic Planning,  Single Volume of Interest - PROFESSIONAL COMPONENT (excludes imaging costs for CT and MRI)", 2469, "THREEDIMENSIONALRADIOTHERAPYPLANNINGPROCEDURES:3-DIMENSIONALSIMULATIONANDGRAPHICPLANNING,SINGLEVOLUMEOFINTEREST-PROFESSIONALCOMPONENT(EXCLUDESIMAGINGCOSTSFORCTANDMRI)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2470, "Three Dimensional Radiotherapy Planning Procedures: 3-Dimensional Simulation and Graphic Planning,  Single Volume of Interest - TECHNICAL COMPONENT (excludes imaging costs for CT and MRI)", 2470, "THREEDIMENSIONALRADIOTHERAPYPLANNINGPROCEDURES:3-DIMENSIONALSIMULATIONANDGRAPHICPLANNING,SINGLEVOLUMEOFINTEREST-TECHNICALCOMPONENT(EXCLUDESIMAGINGCOSTSFORCTANDMRI)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2471, "Three Dimensional Radiotherapy Planning Procedures: 3-Dimensional Simulation and Graphic Planning, Multiple Volumes of Interest - PROFESSIONAL COMPONENT (excludes imaging costs for CT and MRI)", 2471, "THREEDIMENSIONALRADIOTHERAPYPLANNINGPROCEDURES:3-DIMENSIONALSIMULATIONANDGRAPHICPLANNING,MULTIPLEVOLUMESOFINTEREST-PROFESSIONALCOMPONENT(EXCLUDESIMAGINGCOSTSFORCTANDMRI)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2472, "Three Dimensional Radiotherapy Planning Procedures: 3-Dimensional Simulation and Graphic Planning, Multiple Volumes of Interest - TECHNICAL COMPONENT (excludes imaging costs for CT and MRI)", 2472, "THREEDIMENSIONALRADIOTHERAPYPLANNINGPROCEDURES:3-DIMENSIONALSIMULATIONANDGRAPHICPLANNING,MULTIPLEVOLUMESOFINTEREST-TECHNICALCOMPONENT(EXCLUDESIMAGINGCOSTSFORCTANDMRI)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2473, "Three Dimensional Radiotherapy Planning Procedures: 3-Dimensional Simulation and Graphic Planning,  Special Technique - PROFESSIONAL COMPONENT (excludes imaging costs for CT and MRI)", 2473, "THREEDIMENSIONALRADIOTHERAPYPLANNINGPROCEDURES:3-DIMENSIONALSIMULATIONANDGRAPHICPLANNING,SPECIALTECHNIQUE-PROFESSIONALCOMPONENT(EXCLUDESIMAGINGCOSTSFORCTANDMRI)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2474, "Three Dimensional Radiotherapy Planning Procedures: 3-Dimensional Simulation and Graphic Planning,  Special Technique - TECHNICAL COMPONENT (excludes imaging costs for CT and MRI)", 2474, "THREEDIMENSIONALRADIOTHERAPYPLANNINGPROCEDURES:3-DIMENSIONALSIMULATIONANDGRAPHICPLANNING,SPECIALTECHNIQUE-TECHNICALCOMPONENT(EXCLUDESIMAGINGCOSTSFORCTANDMRI)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2475, "Intensity Modulated Radiotherapy Planning Procedures: Intensity Modulated Radiotherapy Simulation, Inverse Planning, Radical Course - PROFESSIONAL COMPONENT (excludes imaging costs for CT and MRI)", 2475, "INTENSITYMODULATEDRADIOTHERAPYPLANNINGPROCEDURES:INTENSITYMODULATEDRADIOTHERAPYSIMULATION,INVERSEPLANNING,RADICALCOURSE-PROFESSIONALCOMPONENT(EXCLUDESIMAGINGCOSTSFORCTANDMRI)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2476, "Intensity Modulated Radiotherapy Planning Procedures: Intensity Modulated Radiotherapy Simulation, Inverse Planning, Radical Course - TECHNICAL COMPONENT (excludes imaging costs for CT and MRI)", 2476, "INTENSITYMODULATEDRADIOTHERAPYPLANNINGPROCEDURES:INTENSITYMODULATEDRADIOTHERAPYSIMULATION,INVERSEPLANNING,RADICALCOURSE-TECHNICALCOMPONENT(EXCLUDESIMAGINGCOSTSFORCTANDMRI)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2477, "Intensity Modulated Radiotherapy Planning Procedures: Intensity Modulated Radiotherapy Simulation, Inverse Planning, Booster Volumes (not for use with other IMRT planning codes) - PROFESSIONAL COMPONENT (excludes imaging costs for CT and MRI)", 2477, "INTENSITYMODULATEDRADIOTHERAPYPLANNINGPROCEDURES:INTENSITYMODULATEDRADIOTHERAPYSIMULATION,INVERSEPLANNING,BOOSTERVOLUMES(NOTFORUSEWITHOTHERIMRTPLANNINGCODES)-PROFESSIONALCOMPONENT(EXCLUDESIMAGINGCOSTSFORCTANDMRI)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2468, "Conventional Radiotherapy Planning: Simulation, Limited Graphic Planning, Special Technique - TECHNICAL COMPONENT", 2468, "CONVENTIONALRADIOTHERAPYPLANNING:SIMULATION,LIMITEDGRAPHICPLANNING,SPECIALTECHNIQUE-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2478, "Intensity Modulated Radiotherapy Planning Procedures: Intensity Modulated Radiotherapy Simulation, Inverse Planning, Booster Volumes (not for use with other IMRT planning codes) - TECHNICAL COMPONENT (excludes imaging costs for CT and MRI)", 2478, "INTENSITYMODULATEDRADIOTHERAPYPLANNINGPROCEDURES:INTENSITYMODULATEDRADIOTHERAPYSIMULATION,INVERSEPLANNING,BOOSTERVOLUMES(NOTFORUSEWITHOTHERIMRTPLANNINGCODES)-TECHNICALCOMPONENT(EXCLUDESIMAGINGCOSTSFORCTANDMRI)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2480, "Intensity Modulated Radiotherapy Planning Procedures: Intensity Modulated Radiotherapy Simulation, Inverse Planning, CT Scan with Magnetic Resonance Imaging or other Similar Imaging Fusion Techniques - TECHNICAL COMPONENT (excludes imaging costs for CT and MRI)", 2480, "INTENSITYMODULATEDRADIOTHERAPYPLANNINGPROCEDURES:INTENSITYMODULATEDRADIOTHERAPYSIMULATION,INVERSEPLANNING,CTSCANWITHMAGNETICRESONANCEIMAGINGOROTHERSIMILARIMAGINGFUSIONTECHNIQUES-TECHNICALCOMPONENT(EXCLUDESIMAGINGCOSTSFORCTANDMRI)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2481, "Kilovolt Radiation Treatment: Weekly Treatment, Kilovolt or Similar, per week or part thereof - PROFESSIONAL COMPONENT", 2481, "KILOVOLTRADIATIONTREATMENT:WEEKLYTREATMENT,KILOVOLTORSIMILAR,PERWEEKORPARTTHEREOF-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2482, "Kilovolt Radiation Treatment: Weekly Treatment, Kilovolt or Similar, per week or part thereof - TECHNICAL COMPONENT", 2482, "KILOVOLTRADIATIONTREATMENT:WEEKLYTREATMENT,KILOVOLTORSIMILAR,PERWEEKORPARTTHEREOF-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2483, "Short Course Radiation Treatment: Short course treatment, Single Volume of Interest - PROFESSIONAL COMPONENT", 2483, "SHORTCOURSERADIATIONTREATMENT:SHORTCOURSETREATMENT,SINGLEVOLUMEOFINTEREST-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2484, "Short Course Radiation Treatment: Short course treatment, Single Volume of Interest - TECHNICAL COMPONENT", 2484, "SHORTCOURSERADIATIONTREATMENT:SHORTCOURSETREATMENT,SINGLEVOLUMEOFINTEREST-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2485, "Short Course Radiation Treatment: Short course treatment, Multiple Volumes of Interest - PROFESSIONAL COMPONENT", 2485, "SHORTCOURSERADIATIONTREATMENT:SHORTCOURSETREATMENT,MULTIPLEVOLUMESOFINTEREST-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2486, "Short Course Radiation Treatment: Short course treatment, Multiple Volumes of Interest - TECHNICAL COMPONENT", 2486, "SHORTCOURSERADIATIONTREATMENT:SHORTCOURSETREATMENT,MULTIPLEVOLUMESOFINTEREST-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2487, "Short Course Radiation Treatment: Short course Treatment, Special Technique - PROFESSIONAL COMPONENT", 2487, "SHORTCOURSERADIATIONTREATMENT:SHORTCOURSETREATMENT,SPECIALTECHNIQUE-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2488, "Short Course Radiation Treatment: Short course Treatment, Special Technique - TECHNICAL COMPONENT", 2488, "SHORTCOURSERADIATIONTREATMENT:SHORTCOURSETREATMENT,SPECIALTECHNIQUE-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2479, "Intensity Modulated Radiotherapy Planning Procedures: Intensity Modulated Radiotherapy Simulation, Inverse Planning, CT Scan with Magnetic Resonance Imaging or other Similar Imaging Fusion Techniques - PROFESSIONAL COMPONENT (excludes imaging costs for CT and MRI)", 2479, "INTENSITYMODULATEDRADIOTHERAPYPLANNINGPROCEDURES:INTENSITYMODULATEDRADIOTHERAPYSIMULATION,INVERSEPLANNING,CTSCANWITHMAGNETICRESONANCEIMAGINGOROTHERSIMILARIMAGINGFUSIONTECHNIQUES-PROFESSIONALCOMPONENT(EXCLUDESIMAGINGCOSTSFORCTANDMRI)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2467, "Conventional Radiotherapy Planning: Simulation, Limited Graphic Planning, Special Technique - PROFESSIONAL COMPONENT", 2467, "CONVENTIONALRADIOTHERAPYPLANNING:SIMULATION,LIMITEDGRAPHICPLANNING,SPECIALTECHNIQUE-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2466, "Conventional Radiotherapy Planning: Simulation, Limited Graphic Planning,  Multiple Volumes of Interest - TECHNICAL COMPONENT", 2466, "CONVENTIONALRADIOTHERAPYPLANNING:SIMULATION,LIMITEDGRAPHICPLANNING,MULTIPLEVOLUMESOFINTEREST-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2465, "Conventional Radiotherapy Planning: Simulation, Limited Graphic Planning,  Multiple Volumes of Interest - PROFESSIONAL COMPONENT", 2465, "CONVENTIONALRADIOTHERAPYPLANNING:SIMULATION,LIMITEDGRAPHICPLANNING,MULTIPLEVOLUMESOFINTEREST-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2444, "Magnetic Resonance angiography (See modifiers 6106 to 6108): Large vessels: Chest", 2444, "MAGNETICRESONANCEANGIOGRAPHY(SEEMODIFIERS6106TO6108):LARGEVESSELS:CHEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2445, "Magnetic Resonance angiography (See modifiers 6106 to 6108): Large vessels: Abdomen", 2445, "MAGNETICRESONANCEANGIOGRAPHY(SEEMODIFIERS6106TO6108):LARGEVESSELS:ABDOMEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2446, "Magnetic Resonance angiography (See modifiers 6106 to 6108): Large vessels: Legs", 2446, "MAGNETICRESONANCEANGIOGRAPHY(SEEMODIFIERS6106TO6108):LARGEVESSELS:LEGS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2447, "Magnetic Resonance angiography (See modifiers 6106 to 6108): Heart", 2447, "MAGNETICRESONANCEANGIOGRAPHY(SEEMODIFIERS6106TO6108):HEART", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2448, "Contrast medium: Current price according the regular price list published by the Radiology Society of SA", 2448, "CONTRASTMEDIUM:CURRENTPRICEACCORDINGTHEREGULARPRICELISTPUBLISHEDBYTHERADIOLOGYSOCIETYOFSA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2449, "Low field strength peripheral joint magnetic resonance imaging: Low field strength peripheral joint examination (feet, knees, hands, and elbows), in dedicated limb units not able to perform body, spine or head examinations", 2449, "LOWFIELDSTRENGTHPERIPHERALJOINTMAGNETICRESONANCEIMAGING:LOWFIELDSTRENGTHPERIPHERALJOINTEXAMINATION(FEET,KNEES,HANDS,ANDELBOWS),INDEDICATEDLIMBUNITSNOTABLETOPERFORMBODY,SPINEORHEADEXAMINATIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2450, "Radiation materials (see modifier 0095)", 2450, "RADIATIONMATERIALS(SEEMODIFIER0095)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2451, "Non Infusional Chemotherapy: Global Fee for the management of and for related services delivered in the treatment of cancer with oral chemotherapy (per cycle), intramuscular (IMI), subcutaneous, intrathecal or bolus chemotherapy or oncology specific drug administration per treatment day - for exclusive use by doctors with appropriate oncology training (consultations to be charged separately) - (not applicable to oral hormonal therapy)", 2451, "NONINFUSIONALCHEMOTHERAPY:GLOBALFEEFORTHEMANAGEMENTOFANDFORRELATEDSERVICESDELIVEREDINTHETREATMENTOFCANCERWITHORALCHEMOTHERAPY(PERCYCLE),INTRAMUSCULAR(IMI),SUBCUTANEOUS,INTRATHECALORBOLUSCHEMOTHERAPYORONCOLOGYSPECIFICDRUGADMINISTRATIONPERTREATMENTDAY-FOREXCLUSIVEUSEBYDOCTORSWITHAPPROPRIATEONCOLOGYTRAINING(CONSULTATIONSTOBECHARGEDSEPARATELY)-(NOTAPPLICABLETOORALHORMONALTHERAPY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2452, "Non Infusional Chemotherapy Facility Fee: A facility where oncology medicines are procured or scripted for oral chemotherapy, intramuscular (IMI), subcutaneous, intrathecal or bolus chemotherapy or oncology specific drug administration per treatment day. This fee is chargeable by doctors with appropriate oncology training who owns or rents the facility, and by others e.g. hospitals or clinics that provide the services as per the appropriate billing structure. Said facilities are to be accredited under the auspices of SASMO and/or SASCRO (to be used in conjunction with item 5790)  - (not applicable to oral hormonal therapy) - only one of the parties are to charge this fee", 2452, "NONINFUSIONALCHEMOTHERAPYFACILITYFEE:AFACILITYWHEREONCOLOGYMEDICINESAREPROCUREDORSCRIPTEDFORORALCHEMOTHERAPY,INTRAMUSCULAR(IMI),SUBCUTANEOUS,INTRATHECALORBOLUSCHEMOTHERAPYORONCOLOGYSPECIFICDRUGADMINISTRATIONPERTREATMENTDAY.THISFEEISCHARGEABLEBYDOCTORSWITHAPPROPRIATEONCOLOGYTRAININGWHOOWNSORRENTSTHEFACILITY,ANDBYOTHERSE.G.HOSPITALSORCLINICSTHATPROVIDETHESERVICESASPERTHEAPPROPRIATEBILLINGSTRUCTURE.SAIDFACILITIESARETOBEACCREDITEDUNDERTHEAUSPICESOFSASMOAND/ORSASCRO(TOBEUSEDINCONJUNCTIONWITHITEM5790)-(NOTAPPLICABLETOORALHORMONALTHERAPY)-ONLYONEOFTHEPARTIESARETOCHARGETHISFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2453, "Non Infusional Chemotherapy Facility Fee: A facility where oncology medicines are purchased, stored and dispensed during oral chemotherapy (per cycle), intramuscular (IMI), subcutaneous, intrathecal or bolus chemotherapy or oncology specific drug administration per treatment day. This fee is chargeable by doctors with appropriate oncology training who owns or rents the facility, and by others e.g. hospitals or clinics that provide the services as per the appropriate billing structure. Said facilities are to be accredited under the auspices of SASMO and/or SASCRO (to be used in conjunction with item 5790) - (not applicable to oral hormonal therapy) - only one of the parties are to charge this fee", 2453, "NONINFUSIONALCHEMOTHERAPYFACILITYFEE:AFACILITYWHEREONCOLOGYMEDICINESAREPURCHASED,STOREDANDDISPENSEDDURINGORALCHEMOTHERAPY(PERCYCLE),INTRAMUSCULAR(IMI),SUBCUTANEOUS,INTRATHECALORBOLUSCHEMOTHERAPYORONCOLOGYSPECIFICDRUGADMINISTRATIONPERTREATMENTDAY.THISFEEISCHARGEABLEBYDOCTORSWITHAPPROPRIATEONCOLOGYTRAININGWHOOWNSORRENTSTHEFACILITY,ANDBYOTHERSE.G.HOSPITALSORCLINICSTHATPROVIDETHESERVICESASPERTHEAPPROPRIATEBILLINGSTRUCTURE.SAIDFACILITIESARETOBEACCREDITEDUNDERTHEAUSPICESOFSASMOAND/ORSASCRO(TOBEUSEDINCONJUNCTIONWITHITEM5790)-(NOTAPPLICABLETOORALHORMONALTHERAPY)-ONLYONEOFTHEPARTIESARETOCHARGETHISFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2454, "Infusional Chemotherapy: Global fee for the management of and for services delivered during infusional chemotherapy per treatment day - for exclusive use by doctors with appropriate oncology training using recognised chemotherapy facilities(consultations to be charged separately)", 2454, "INFUSIONALCHEMOTHERAPY:GLOBALFEEFORTHEMANAGEMENTOFANDFORSERVICESDELIVEREDDURINGINFUSIONALCHEMOTHERAPYPERTREATMENTDAY-FOREXCLUSIVEUSEBYDOCTORSWITHAPPROPRIATEONCOLOGYTRAININGUSINGRECOGNISEDCHEMOTHERAPYFACILITIES(CONSULTATIONSTOBECHARGEDSEPARATELY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2455, "Infusional Chemotherapy Facility Fee: A facility where oncology medicines are procured, stored, admixed and administered, and in which appropriately-trained medical, nursing and support staff are in attendance. This fee is chargeable by doctors with appropriate oncology training who owns or rents the facility, and by others e.g. hospitals or clinics that provide the services as per the appropriate billing structure. Said facilities are to be accredited under the auspices of SASMO and/or SASCRO (to be used in conjunction with item 5793) - only one of the parties are to charge this fee", 2455, "INFUSIONALCHEMOTHERAPYFACILITYFEE:AFACILITYWHEREONCOLOGYMEDICINESAREPROCURED,STORED,ADMIXEDANDADMINISTERED,ANDINWHICHAPPROPRIATELY-TRAINEDMEDICAL,NURSINGANDSUPPORTSTAFFAREINATTENDANCE.THISFEEISCHARGEABLEBYDOCTORSWITHAPPROPRIATEONCOLOGYTRAININGWHOOWNSORRENTSTHEFACILITY,ANDBYOTHERSE.G.HOSPITALSORCLINICSTHATPROVIDETHESERVICESASPERTHEAPPROPRIATEBILLINGSTRUCTURE.SAIDFACILITIESARETOBEACCREDITEDUNDERTHEAUSPICESOFSASMOAND/ORSASCRO(TOBEUSEDINCONJUNCTIONWITHITEM5793)-ONLYONEOFTHEPARTIESARETOCHARGETHISFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2456, "Infusional Chemotherapy Facility Fee: A facility where oncology medicines are purchased, stored, dispensed, admixed and administered and in which appropriately-trained medical, nursing and support staff are in attendance. This fee is chargeable by doctors with appropriate oncology training who owns or rents the facility, and by others e.g. hospitals or clinics that provide the services as per the appropriate billing structure. Said facilities are to be accredited under the auspices of SASMO and/or SASCRO (to be used in conjunction with item 5793) - only one of the parties are to charge this fee", 2456, "INFUSIONALCHEMOTHERAPYFACILITYFEE:AFACILITYWHEREONCOLOGYMEDICINESAREPURCHASED,STORED,DISPENSED,ADMIXEDANDADMINISTEREDANDINWHICHAPPROPRIATELY-TRAINEDMEDICAL,NURSINGANDSUPPORTSTAFFAREINATTENDANCE.THISFEEISCHARGEABLEBYDOCTORSWITHAPPROPRIATEONCOLOGYTRAININGWHOOWNSORRENTSTHEFACILITY,ANDBYOTHERSE.G.HOSPITALSORCLINICSTHATPROVIDETHESERVICESASPERTHEAPPROPRIATEBILLINGSTRUCTURE.SAIDFACILITIESARETOBEACCREDITEDUNDERTHEAUSPICESOFSASMOAND/ORSASCRO(TOBEUSEDINCONJUNCTIONWITHITEM5793)-ONLYONEOFTHEPARTIESARETOCHARGETHISFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2457, "Manual Radiotherapy Planning Procedures: No Simulation, Limited Graphic Planning, Single Volume of Interest - PROFESSIONAL COMPONENT", 2457, "MANUALRADIOTHERAPYPLANNINGPROCEDURES:NOSIMULATION,LIMITEDGRAPHICPLANNING,SINGLEVOLUMEOFINTEREST-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2458, "Manual Radiotherapy Planning Procedures: No Simulation, Limited Graphic Planning, Single Volume of Interest -TECHNICAL COMPONENT", 2458, "MANUALRADIOTHERAPYPLANNINGPROCEDURES:NOSIMULATION,LIMITEDGRAPHICPLANNING,SINGLEVOLUMEOFINTEREST-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2459, "Manual Radiotherapy Planning Procedures: No Simulation, Limited Graphic Planning, Multiple Volumes of Interest - PROFESSIONAL COMPONENT", 2459, "MANUALRADIOTHERAPYPLANNINGPROCEDURES:NOSIMULATION,LIMITEDGRAPHICPLANNING,MULTIPLEVOLUMESOFINTEREST-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2460, "Manual Radiotherapy Planning Procedures: No Simulation, Limited Graphic Planning, Multiple Volumes of Interest - TECHNICAL COMPONENT", 2460, "MANUALRADIOTHERAPYPLANNINGPROCEDURES:NOSIMULATION,LIMITEDGRAPHICPLANNING,MULTIPLEVOLUMESOFINTEREST-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2461, "Manual Radiotherapy Planning Procedures: No Simulation, Limited Graphic Planning, Special Technique - PROFESSIONAL COMPONENT", 2461, "MANUALRADIOTHERAPYPLANNINGPROCEDURES:NOSIMULATION,LIMITEDGRAPHICPLANNING,SPECIALTECHNIQUE-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2462, "Manual Radiotherapy Planning Procedures: No Simulation, Limited Graphic Planning, Special Technique - TECHNICAL COMPONENT", 2462, "MANUALRADIOTHERAPYPLANNINGPROCEDURES:NOSIMULATION,LIMITEDGRAPHICPLANNING,SPECIALTECHNIQUE-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2463, "Conventional Radiotherapy Planning: Simulation, Limited Graphic Planning, Single Volume of Interest - PROFESSIONAL COMPONENT", 2463, "CONVENTIONALRADIOTHERAPYPLANNING:SIMULATION,LIMITEDGRAPHICPLANNING,SINGLEVOLUMEOFINTEREST-PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2464, "Conventional Radiotherapy Planning: Simulation, Limited Graphic Planning, Single Volume of Interest - TECHNICAL COMPONENT", 2464, "CONVENTIONALRADIOTHERAPYPLANNING:SIMULATION,LIMITEDGRAPHICPLANNING,SINGLEVOLUMEOFINTEREST-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2490, "Weekly Radiation Treatment Sessions - Conventional Techniques: Weekly Treatment,  Single Volume of Interest - TECHNICAL COMPONENT", 2490, "WEEKLYRADIATIONTREATMENTSESSIONS-CONVENTIONALTECHNIQUES:WEEKLYTREATMENT,SINGLEVOLUMEOFINTEREST-TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2394, "Percutaneous gastrostomy in radiology suite", 2394, "PERCUTANEOUSGASTROSTOMYINRADIOLOGYSUITE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2587, "Plasmodium falciparum: Monoclonal immunological identification", 2587, "PLASMODIUMFALCIPARUM:MONOCLONALIMMUNOLOGICALIDENTIFICATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2589, "Platelet sensitivities", 2589, "PLATELETSENSITIVITIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2711, "Antibody titer to bacterial exotoxin", 2711, "ANTIBODYTITERTOBACTERIALEXOTOXIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2712, "IgE: Specific antibody titer: ELISA/EMIT: Per Ag", 2712, "IGE:SPECIFICANTIBODYTITER:ELISA/EMIT:PERAG", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2713, "Complement fixation test", 2713, "COMPLEMENTFIXATIONTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2714, "IgM: Specific antibody titer:ELISA/EMIT: Per Ag", 2714, "IGM:SPECIFICANTIBODYTITER:ELISA/EMIT:PERAG", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2715, "C-reactive protein", 2715, "C-REACTIVEPROTEIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2716, "IgG: Specific antibody titer: ELISA/EMIT: Per Ag", 2716, "IGG:SPECIFICANTIBODYTITER:ELISA/EMIT:PERAG", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2717, "Qualitative Kahn, VDRL or other flocculation", 2717, "QUALITATIVEKAHN,VDRLOROTHERFLOCCULATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2718, "Neutrophil phagocytosis", 2718, "NEUTROPHILPHAGOCYTOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2719, "Quantitative Kahn, VDRL or other flocculation", 2719, "QUANTITATIVEKAHN,VDRLOROTHERFLOCCULATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2710, "Hepatitis Rapid Viral Ab", 2710, "HEPATITISRAPIDVIRALAB", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2720, "Neutrophil chemotaxis", 2720, "NEUTROPHILCHEMOTAXIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2722, "Paul Bunnell: Presumptive", 2722, "PAULBUNNELL:PRESUMPTIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2723, "Infectious mononucleosis latex slide test (Monospot or equivalent)", 2723, "INFECTIOUSMONONUCLEOSISLATEXSLIDETEST(MONOSPOTOREQUIVALENT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2724, "Paul Bunnell: Absorption", 2724, "PAULBUNNELL:ABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2725, "Immuno-diffusion test: Per antigen", 2725, "IMMUNO-DIFFUSIONTEST:PERANTIGEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2726, "Respiratory syncytial virus (ELISA technique)", 2726, "RESPIRATORYSYNCYTIALVIRUS(ELISATECHNIQUE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2727, "Immuno electrophoresis: Per immune serum", 2727, "IMMUNOELECTROPHORESIS:PERIMMUNESERUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2728, "Polymerase chain reaction", 2728, "POLYMERASECHAINREACTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2729, "Indirect immuno-fluorescence test (bacterial, viral, parasitic)", 2729, "INDIRECTIMMUNO-FLUORESCENCETEST(BACTERIAL,VIRAL,PARASITIC)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2730, "Counter immuno-electrophoresis", 2730, "COUNTERIMMUNO-ELECTROPHORESIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2721, "Tube agglutination test", 2721, "TUBEAGGLUTINATIONTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2731, "Lymphocyte transformation", 2731, "LYMPHOCYTETRANSFORMATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2709, "Modified Coombs' test for brucellosis", 2709, "MODIFIEDCOOMBS'TESTFORBRUCELLOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2707, "Agglutination test per antigen", 2707, "AGGLUTINATIONTESTPERANTIGEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2687, "Mycobacteria: Liquefied, consentrated, fluorochrome stain", 2687, "MYCOBACTERIA:LIQUEFIED,CONSENTRATED,FLUOROCHROMESTAIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2688, "Anti Gad/Ia2 Ab", 2688, "ANTIGAD/IA2AB", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2689, "Rose Waaler agglutination test", 2689, "ROSEWAALERAGGLUTINATIONTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2690, "Gonococcal, listeria or echinococcus agglutination", 2690, "GONOCOCCAL,LISTERIAORECHINOCOCCUSAGGLUTINATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2691, "Slide agglutination test", 2691, "SLIDEAGGLUTINATIONTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2692, "Rebuck skin window", 2692, "REBUCKSKINWINDOW", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2693, "Serum complement level: Each component", 2693, "SERUMCOMPLEMENTLEVEL:EACHCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2694, "Anti Ia2 Antibodies", 2694, "ANTIIA2ANTIBODIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2695, "Anti Gad Antibodies", 2695, "ANTIGADANTIBODIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2708, "Haemagglutination test: Per antigen", 2708, "HAEMAGGLUTINATIONTEST:PERANTIGEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2696, "Auto-antibody: Sensitized erythrocytes", 2696, "AUTO-ANTIBODY:SENSITIZEDERYTHROCYTES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2698, "Western blot technique", 2698, "WESTERNBLOTTECHNIQUE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2699, "Epstein-Barr virus antibody titer", 2699, "EPSTEIN-BARRVIRUSANTIBODYTITER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2700, "Antibodies to human immunodeficiency virus (HIV): ELISA", 2700, "ANTIBODIESTOHUMANIMMUNODEFICIENCYVIRUS(HIV):ELISA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2701, "IgE: Total: EMIT or ELISA", 2701, "IGE:TOTAL:EMITORELISA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2702, "Auto antibodies by labelled antibodies", 2702, "AUTOANTIBODIESBYLABELLEDANTIBODIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2703, "Sperm antibodies", 2703, "SPERMANTIBODIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2704, "Virus neutralisation test: First antibody", 2704, "VIRUSNEUTRALISATIONTEST:FIRSTANTIBODY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2705, "Virus neutralisation test: Each additional antibody", 2705, "VIRUSNEUTRALISATIONTEST:EACHADDITIONALANTIBODY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2706, "Precipitation test per antigen", 2706, "PRECIPITATIONTESTPERANTIGEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2697, "Herpes virus typing: Monoclonal immunological", 2697, "HERPESVIRUSTYPING:MONOCLONALIMMUNOLOGICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2732, "Bilharzia Ag Serum/Urine", 2732, "BILHARZIAAGSERUM/URINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2733, "Histone Ab", 2733, "HISTONEAB", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2734, "Anti-CCP", 2734, "ANTI-CCP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2760, "Ammonia: Monitor", 2760, "AMMONIA:MONITOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2761, "Alpha-1-antitrypsin: Total", 2761, "ALPHA-1-ANTITRYPSIN:TOTAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2762, "Amylase", 2762, "AMYLASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2763, "Arsenic in blood, hair or nails", 2763, "ARSENICINBLOOD,HAIRORNAILS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2764, "Bilirubin - Reflectance", 2764, "BILIRUBIN-REFLECTANCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2765, "Bilirubin: Total", 2765, "BILIRUBIN:TOTAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2766, "Bilirubin: Conjugated", 2766, "BILIRUBIN:CONJUGATED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2767, "Breath Hydrogen Test", 2767, "BREATHHYDROGENTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2768, "CSF Nicotinic Acid", 2768, "CSFNICOTINICACID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2759, "Ammonia: Enzymatic", 2759, "AMMONIA:ENZYMATIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2769, "CSF Glutamine", 2769, "CSFGLUTAMINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2771, "Calcium: Ionized", 2771, "CALCIUM:IONIZED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2772, "Calcium: Spectrophotometric", 2772, "CALCIUM:SPECTROPHOTOMETRIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2773, "Calcium: Atomic absorption", 2773, "CALCIUM:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2774, "Carotene", 2774, "CAROTENE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2775, "Carnitine (Total or free) in biological fluid: Each", 2775, "CARNITINE(TOTALORFREE)INBIOLOGICALFLUID:EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2776, "Carnitine (Total or free) in muscle: Each", 2776, "CARNITINE(TOTALORFREE)INMUSCLE:EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2777, "Acyl Carnitine", 2777, "ACYLCARNITINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2778, "Chloride", 2778, "CHLORIDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2779, "Chol/HDL/LDL/Trig", 2779, "CHOL/HDL/LDL/TRIG", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2770, "Cadmium: Atomic absorption", 2770, "CADMIUM:ATOMICABSORPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2758, "Alkaline phosphatase-iso-enzymes", 2758, "ALKALINEPHOSPHATASE-ISO-ENZYMES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2757, "Alkaline phosphatase", 2757, "ALKALINEPHOSPHATASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2756, "Alcohol", 2756, "ALCOHOL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2735, "Panel typing: Antibody detection: Class I", 2735, "PANELTYPING:ANTIBODYDETECTION:CLASSI", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2736, "Panel typing: Antibody detection: Class II", 2736, "PANELTYPING:ANTIBODYDETECTION:CLASSII", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2737, "HLA test for specific locus/antigen - serology", 2737, "HLATESTFORSPECIFICLOCUS/ANTIGEN-SEROLOGY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2738, "HLA typing: Class I - serology", 2738, "HLATYPING:CLASSI-SEROLOGY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2739, "HLA typing: Class II - serology", 2739, "HLATYPING:CLASSII-SEROLOGY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2740, "HLA typing: Class I & II - serology", 2740, "HLATYPING:CLASSI&II-SEROLOGY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2741, "Cross matching T-cells (per tray)", 2741, "CROSSMATCHINGT-CELLS(PERTRAY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2742, "Cross matching B-cells", 2742, "CROSSMATCHINGB-CELLS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2743, "Cross matching T- & B-cells", 2743, "CROSSMATCHINGT-&B-CELLS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2744, "Helicobacter: Pylori antigen test", 2744, "HELICOBACTER:PYLORIANTIGENTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2745, "Erythropoietin", 2745, "ERYTHROPOIETIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2746, "HTLV I/II", 2746, "HTLVI/II", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2747, "Anti-Gm1 Antibody Assay", 2747, "ANTI-GM1ANTIBODYASSAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2748, "HIV Ab - Rapid Test", 2748, "HIVAB-RAPIDTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2749, "Abnormal pigments: Qualitative", 2749, "ABNORMALPIGMENTS:QUALITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2750, "Abnormal pigments: Quantitative", 2750, "ABNORMALPIGMENTS:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2751, "Acid phosphate", 2751, "ACIDPHOSPHATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2752, "Serum Amyloid A", 2752, "SERUMAMYLOIDA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2753, "Acid phosphatase fractionation", 2753, "ACIDPHOSPHATASEFRACTIONATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2754, "Amino acids Quantitative (Post derivatisation HPLC)", 2754, "AMINOACIDSQUANTITATIVE(POSTDERIVATISATIONHPLC)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2755, "Albumin", 2755, "ALBUMIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2686, "Mycobacteria: Identification HPLC", 2686, "MYCOBACTERIA:IDENTIFICATIONHPLC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2588, "Plasma haemoglobin", 2588, "PLASMAHAEMOGLOBIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2685, "Mycobacteria: MIC determination - E Test", 2685, "MYCOBACTERIA:MICDETERMINATION-ETEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2683, "Rapid automated antibiotic susceptibility per organism", 2683, "RAPIDAUTOMATEDANTIBIOTICSUSCEPTIBILITYPERORGANISM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2614, "Haemoglobin H", 2614, "HAEMOGLOBINH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2615, "Fibrin degeneration products (diffusion plate)", 2615, "FIBRINDEGENERATIONPRODUCTS(DIFFUSIONPLATE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2616, "Fibrin degeneration products (latex slide)", 2616, "FIBRINDEGENERATIONPRODUCTS(LATEXSLIDE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2617, "XDP (Dimer test or equivalent latex slide test)", 2617, "XDP(DIMERTESTOREQUIVALENTLATEXSLIDETEST)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2618, "Haemagglutination inhibition", 2618, "HAEMAGGLUTINATIONINHIBITION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2619, "D-Dimer (quantitative)", 2619, "D-DIMER(QUANTITATIVE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2620, "Ristocetin Cofactor", 2620, "RISTOCETINCOFACTOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2621, "Heparin removal", 2621, "HEPARINREMOVAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2622, "Autogenous vaccine", 2622, "AUTOGENOUSVACCINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2613, "Thrombin time (serial)", 2613, "THROMBINTIME(SERIAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2623, "Entomological examination", 2623, "ENTOMOLOGICALEXAMINATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2625, "Miscellaneous (body fluids, urine, exudate, fungi, puss, scrapings, etc.)", 2625, "MISCELLANEOUS(BODYFLUIDS,URINE,EXUDATE,FUNGI,PUSS,SCRAPINGS,ETC.)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2626, "Fungus identification", 2626, "FUNGUSIDENTIFICATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2627, "Faeces (including parasites)", 2627, "FAECES(INCLUDINGPARASITES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2628, "Transmission electron microscopy", 2628, "TRANSMISSIONELECTRONMICROSCOPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2629, "Scanning electron microscopy", 2629, "SCANNINGELECTRONMICROSCOPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2630, "Inclusion bodies", 2630, "INCLUSIONBODIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2631, "Crystal identification polarized light microscopy", 2631, "CRYSTALIDENTIFICATIONPOLARIZEDLIGHTMICROSCOPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2632, "Campylobacter in stool: Fastidious culture", 2632, "CAMPYLOBACTERINSTOOL:FASTIDIOUSCULTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2633, "Antigen detection with polyclonal antibodies", 2633, "ANTIGENDETECTIONWITHPOLYCLONALANTIBODIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2624, "Parasites in blood smear", 2624, "PARASITESINBLOODSMEAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2634, "Mycobacteria", 2634, "MYCOBACTERIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2612, "Thrombin time (screen)", 2612, "THROMBINTIME(SCREEN)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2610, "Haemoglobin F in blood smear", 2610, "HAEMOGLOBINFINBLOODSMEAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2590, "Platelet aggregation per aggregant", 2590, "PLATELETAGGREGATIONPERAGGREGANT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2591, "Platelet antibodies: Agglutination", 2591, "PLATELETANTIBODIES:AGGLUTINATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2592, "Platelet count", 2592, "PLATELETCOUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2593, "Platelet adhesiveness", 2593, "PLATELETADHESIVENESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2594, "Prothrombin consumption", 2594, "PROTHROMBINCONSUMPTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2595, "Prothrombin determination (two stages)", 2595, "PROTHROMBINDETERMINATION(TWOSTAGES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2596, "Prothrombin index", 2596, "PROTHROMBININDEX", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2597, "Therapeutic drug level: Dosage", 2597, "THERAPEUTICDRUGLEVEL:DOSAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2598, "Recalcification time", 2598, "RECALCIFICATIONTIME", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2611, "Partial thromboplastin time", 2611, "PARTIALTHROMBOPLASTINTIME", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2599, "Reticulocyte count", 2599, "RETICULOCYTECOUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2601, "Sickling test", 2601, "SICKLINGTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2602, "Sucrose lysis test for PNH", 2602, "SUCROSELYSISTESTFORPNH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2603, "T and B-cells EAC markers (limited to ONE marker only for CD4/8 counts)", 2603, "TANDB-CELLSEACMARKERS(LIMITEDTOONEMARKERONLYFORCD4/8COUNTS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2604, "Thrombo - Elastogram", 2604, "THROMBO-ELASTOGRAM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2605, "Fibrinogen titre", 2605, "FIBRINOGENTITRE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2606, "Glucose 6-phosphate-dehydrogenase: Qualitative", 2606, "GLUCOSE6-PHOSPHATE-DEHYDROGENASE:QUALITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2607, "Glucose 6-phosphate-dehydrogenase: Quantitative", 2607, "GLUCOSE6-PHOSPHATE-DEHYDROGENASE:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2608, "Red cell pyruvate kinase: Quantitative", 2608, "REDCELLPYRUVATEKINASE:QUANTITATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2609, "Red cell Rhesus phenotype", 2609, "REDCELLRHESUSPHENOTYPE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2600, "Schumm's test", 2600, "SCHUMM'STEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2635, "Antigen detection with monoclonal antibodies", 2635, "ANTIGENDETECTIONWITHMONOCLONALANTIBODIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2636, "Concentration techniques for parasites", 2636, "CONCENTRATIONTECHNIQUESFORPARASITES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2637, "Dark field, phase or interference contrast microscopy, Nomarski or Fontana", 2637, "DARKFIELD,PHASEORINTERFERENCECONTRASTMICROSCOPY,NOMARSKIORFONTANA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2663, "Mycobacterium culture", 2663, "MYCOBACTERIUMCULTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2664, "Radiometric tuberculosis culture", 2664, "RADIOMETRICTUBERCULOSISCULTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2665, "Mycoplasma culture: Limited", 2665, "MYCOPLASMACULTURE:LIMITED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2666, "Mycoplasma culture: Comprehensive", 2666, "MYCOPLASMACULTURE:COMPREHENSIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2667, "Identification of mycobacterium", 2667, "IDENTIFICATIONOFMYCOBACTERIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2668, "Mycobacterium: Antibiotic sensitivity", 2668, "MYCOBACTERIUM:ANTIBIOTICSENSITIVITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2669, "Antibiotic synergistic study", 2669, "ANTIBIOTICSYNERGISTICSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2670, "Viable cell count", 2670, "VIABLECELLCOUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2671, "Biochemical identification of bacterium: Abridged", 2671, "BIOCHEMICALIDENTIFICATIONOFBACTERIUM:ABRIDGED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2662, "Sterility control test: Biological method", 2662, "STERILITYCONTROLTEST:BIOLOGICALMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2672, "Biochemical identification of bacterium: Extended", 2672, "BIOCHEMICALIDENTIFICATIONOFBACTERIUM:EXTENDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2674, "Serological identification of bacterium: Extended", 2674, "SEROLOGICALIDENTIFICATIONOFBACTERIUM:EXTENDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2675, "Grouping for streptococci", 2675, "GROUPINGFORSTREPTOCOCCI", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2676, "Antimicrobic substances", 2676, "ANTIMICROBICSUBSTANCES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2677, "Radiometric mycobacterium identification", 2677, "RADIOMETRICMYCOBACTERIUMIDENTIFICATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2678, "Radiometric mycobacterium antibiotic sensitivity", 2678, "RADIOMETRICMYCOBACTERIUMANTIBIOTICSENSITIVITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2679, "Helicobacter: Monoclonal immunological", 2679, "HELICOBACTER:MONOCLONALIMMUNOLOGICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2680, "Antibiotic MIC per organism per antibiotic", 2680, "ANTIBIOTICMICPERORGANISMPERANTIBIOTIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2681, "Non-radiometric automated blood cultures", 2681, "NON-RADIOMETRICAUTOMATEDBLOODCULTURES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2682, "Rapid automated bacterial identification per organism", 2682, "RAPIDAUTOMATEDBACTERIALIDENTIFICATIONPERORGANISM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2673, "Serological identification of bacterium: Abridged", 2673, "SEROLOGICALIDENTIFICATIONOFBACTERIUM:ABRIDGED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2661, "Beta-lactamase assay", 2661, "BETA-LACTAMASEASSAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2660, "Anaerobe culture: Limited procedure", 2660, "ANAEROBECULTURE:LIMITEDPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2659, "Anaerobe culture: Comprehensive", 2659, "ANAEROBECULTURE:COMPREHENSIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2638, "Cytochemical stain", 2638, "CYTOCHEMICALSTAIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2639, "Antibiotic susceptibility test: Per organism", 2639, "ANTIBIOTICSUSCEPTIBILITYTEST:PERORGANISM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2640, "Adhesive tape preparation", 2640, "ADHESIVETAPEPREPARATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2641, "Clostridium difficile toxin: Monoclonal immunological", 2641, "CLOSTRIDIUMDIFFICILETOXIN:MONOCLONALIMMUNOLOGICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2642, "Antibiotic assay of tissues and fluids", 2642, "ANTIBIOTICASSAYOFTISSUESANDFLUIDS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2643, "Blood culture: Aerobic", 2643, "BLOODCULTURE:AEROBIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2644, "Blood culture: Anaerobic", 2644, "BLOODCULTURE:ANAEROBIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2645, "Bacteriological culture: Miscellaneous", 2645, "BACTERIOLOGICALCULTURE:MISCELLANEOUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2646, "Radiometric blood culture", 2646, "RADIOMETRICBLOODCULTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2647, "Bacteriological culture: Fastidious organisms", 2647, "BACTERIOLOGICALCULTURE:FASTIDIOUSORGANISMS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2648, "In vivo culture: Bacteria", 2648, "INVIVOCULTURE:BACTERIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2649, "In vivo culture: Virus", 2649, "INVIVOCULTURE:VIRUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2650, "Bacterial exotoxin production (in vitro assay)", 2650, "BACTERIALEXOTOXINPRODUCTION(INVITROASSAY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2651, "Bacterial exotoxin production (in vivo assay)", 2651, "BACTERIALEXOTOXINPRODUCTION(INVIVOASSAY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2652, "Fungal culture", 2652, "FUNGALCULTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2653, "Clostridium difficile (cytotoxicity neutralisation)", 2653, "CLOSTRIDIUMDIFFICILE(CYTOTOXICITYNEUTRALISATION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2654, "Antibiotic level: Biological fluids", 2654, "ANTIBIOTICLEVEL:BIOLOGICALFLUIDS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2655, "Rotavirus latex slide test", 2655, "ROTAVIRUSLATEXSLIDETEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2656, "Identification of virus or rickettsia", 2656, "IDENTIFICATIONOFVIRUSORRICKETTSIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2657, "Identification: Chlamydia", 2657, "IDENTIFICATION:CHLAMYDIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2658, "Culture for staphylococcus aureus", 2658, "CULTUREFORSTAPHYLOCOCCUSAUREUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 2684, "Rapid automated MIC per organism per antibiotic", 2684, "RAPIDAUTOMATEDMICPERORGANISMPERANTIBIOTIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1619, "Transcutaneous nerve stimulation in the treatment of post-operative and chronic intractable pain, per treatment", 1619, "TRANSCUTANEOUSNERVESTIMULATIONINTHETREATMENTOFPOST-OPERATIVEANDCHRONICINTRACTABLEPAIN,PERTREATMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1622, "Full spinogram including bilateral median and posterior-tibial studies", 1622, "FULLSPINOGRAMINCLUDINGBILATERALMEDIANANDPOSTERIOR-TIBIALSTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1617, "Total fee for full evaluation of visual tracts including bilateral electroretinography and VEP", 1617, "TOTALFEEFORFULLEVALUATIONOFVISUALTRACTSINCLUDINGBILATERALELECTRORETINOGRAPHYANDVEP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 581, "Removal of posterior segmental instrumentation", 581, "REMOVALOFPOSTERIORSEGMENTALINSTRUMENTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 582, "Removal of anterior instrumentation", 582, "REMOVALOFANTERIORINSTRUMENTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 583, "Laminectomy for spinal stenosis (exclude diskectomy, foraminotomy and spondylolisthesis): One or two levels", 583, "LAMINECTOMYFORSPINALSTENOSIS(EXCLUDEDISKECTOMY,FORAMINOTOMYANDSPONDYLOLISTHESIS):ONEORTWOLEVELS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 584, "Laminectomy with full decompression for spondylolisthesis (Gill procedure)", 584, "LAMINECTOMYWITHFULLDECOMPRESSIONFORSPONDYLOLISTHESIS(GILLPROCEDURE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 585, "Laminectomy for decompression without foraminotomy or diskectory more than two levels", 585, "LAMINECTOMYFORDECOMPRESSIONWITHOUTFORAMINOTOMYORDISKECTORYMORETHANTWOLEVELS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 586, "Laminectomy with decompression of nerve roots and disc removal: Each additional level", 586, "LAMINECTOMYWITHDECOMPRESSIONOFNERVEROOTSANDDISCREMOVAL:EACHADDITIONALLEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 587, "Laminectomy for decompression diskectomy, etc. revision operation", 587, "LAMINECTOMYFORDECOMPRESSIONDISKECTOMY,ETC.REVISIONOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 588, "Laminectomy, facetectomy, decompression for lateral recess stenosis plus spinal stenosis: One level", 588, "LAMINECTOMY,FACETECTOMY,DECOMPRESSIONFORLATERALRECESSSTENOSISPLUSSPINALSTENOSIS:ONELEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 589, "Laminectomy, facetectomy, decompression for lateral recess stenosis plus spinal stenosis: Each additional level", 589, "LAMINECTOMY,FACETECTOMY,DECOMPRESSIONFORLATERALRECESSSTENOSISPLUSSPINALSTENOSIS:EACHADDITIONALLEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 580, "Removal of posterior non-segmental instrumentation", 580, "REMOVALOFPOSTERIORNON-SEGMENTALINSTRUMENTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 590, "Anterior disc removal and spinal decompression cervical: One level", 590, "ANTERIORDISCREMOVALANDSPINALDECOMPRESSIONCERVICAL:ONELEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 592, "Vertebral corpectomy for spinal decompression: One level", 592, "VERTEBRALCORPECTOMYFORSPINALDECOMPRESSION:ONELEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 593, "Vertebral corpectomy for spinal decompression: Each additional level", 593, "VERTEBRALCORPECTOMYFORSPINALDECOMPRESSION:EACHADDITIONALLEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 594, "Use of microscope in spinal or intracranial procedures (modifier 0005 not applicable)", 594, "USEOFMICROSCOPEINSPINALORINTRACRANIALPROCEDURES(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 595, "Repair of orbital floor (blowout fracture)", 595, "REPAIROFORBITALFLOOR(BLOWOUTFRACTURE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 596, "Genioplasty", 596, "GENIOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 597, "Open reduction and fixation of central mid-third facial fracture with displacement: Le Fort I", 597, "OPENREDUCTIONANDFIXATIONOFCENTRALMID-THIRDFACIALFRACTUREWITHDISPLACEMENT:LEFORTI", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 598, "Open reduction and fixation of central mid-third facial fracture with displacement: Le Fort II", 598, "OPENREDUCTIONANDFIXATIONOFCENTRALMID-THIRDFACIALFRACTUREWITHDISPLACEMENT:LEFORTII", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 599, "Open reduction and fixation of central mid-third facial fracture with displacement: Le Fort III", 599, "OPENREDUCTIONANDFIXATIONOFCENTRALMID-THIRDFACIALFRACTUREWITHDISPLACEMENT:LEFORTIII", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 600, "Open reduction and fixation of central mid-third facial fracture with displacement: Le Fort I Osteotomy", 600, "OPENREDUCTIONANDFIXATIONOFCENTRALMID-THIRDFACIALFRACTUREWITHDISPLACEMENT:LEFORTIOSTEOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 591, "Anterior disc removal and spinal decompression cervical: Each additional level", 591, "ANTERIORDISCREMOVALANDSPINALDECOMPRESSIONCERVICAL:EACHADDITIONALLEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 601, "Open reduction and fixation of central mid-third facial fracture with displacement: Palatal Osteotomy", 601, "OPENREDUCTIONANDFIXATIONOFCENTRALMID-THIRDFACIALFRACTUREWITHDISPLACEMENT:PALATALOSTEOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 579, "Reinsertion of instrumentation", 579, "REINSERTIONOFINSTRUMENTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 577, "Anterior instrumentation: 8 or more vertebrae", 577, "ANTERIORINSTRUMENTATION:8ORMOREVERTEBRAE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 557, "Posterior interbody lumbar fusion: One level", 557, "POSTERIORINTERBODYLUMBARFUSION:ONELEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 558, "Posterior interbody lumbar fusion: Each additional interspace", 558, "POSTERIORINTERBODYLUMBARFUSION:EACHADDITIONALINTERSPACE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 559, "Excision of coccyx", 559, "EXCISIONOFCOCCYX", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 560, "Costo-transversectomy", 560, "COSTO-TRANSVERSECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 561, "Antero-lateral decompression of spinal cord or anterior debridement", 561, "ANTERO-LATERALDECOMPRESSIONOFSPINALCORDORANTERIORDEBRIDEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 562, "Posterior fusion for spinal deformity: Up to 6 levels", 562, "POSTERIORFUSIONFORSPINALDEFORMITY:UPTO6LEVELS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 563, "Posterior fusion for spinal deformity: 7 to 12 levels", 563, "POSTERIORFUSIONFORSPINALDEFORMITY:7TO12LEVELS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 564, "Posterior fusion for spinal deformity: 13 or more levels", 564, "POSTERIORFUSIONFORSPINALDEFORMITY:13ORMORELEVELS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 565, "Anterior fusion for spinal deformity: 2 or 3 levels", 565, "ANTERIORFUSIONFORSPINALDEFORMITY:2OR3LEVELS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 578, "Additional pelvic fixation of instrumentation other than sacrum", 578, "ADDITIONALPELVICFIXATIONOFINSTRUMENTATIONOTHERTHANSACRUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 566, "Anterior fusion for spinal deformity: 4 to 7 levels", 566, "ANTERIORFUSIONFORSPINALDEFORMITY:4TO7LEVELS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 568, "Laminectomy with decompression of nerve roots and disc removal: One level", 568, "LAMINECTOMYWITHDECOMPRESSIONOFNERVEROOTSANDDISCREMOVAL:ONELEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 569, "Posterior non-segmental instrumentation", 569, "POSTERIORNON-SEGMENTALINSTRUMENTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 570, "Posterior segmental instrumentation: 2 to 6 vertebrae", 570, "POSTERIORSEGMENTALINSTRUMENTATION:2TO6VERTEBRAE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 571, "Posterior segmental instrumentation: 7 to 12 vertebrae", 571, "POSTERIORSEGMENTALINSTRUMENTATION:7TO12VERTEBRAE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 572, "Posterior segmental instrumentation:13 or more vertebrae", 572, "POSTERIORSEGMENTALINSTRUMENTATION:13ORMOREVERTEBRAE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 573, "Anterior instrumentation: 2 to 3 vertebrae", 573, "ANTERIORINSTRUMENTATION:2TO3VERTEBRAE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 574, "Skull or skull-femoral traction including two weeks after-care", 574, "SKULLORSKULL-FEMORALTRACTIONINCLUDINGTWOWEEKSAFTER-CARE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 575, "Anterior instrumentation: 4 to 7 vertebrae", 575, "ANTERIORINSTRUMENTATION:4TO7VERTEBRAE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 576, "Halo-splint and POP jacket including two weeks after-care", 576, "HALO-SPLINTANDPOPJACKETINCLUDINGTWOWEEKSAFTER-CARE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 567, "Anterior fusion for spinal deformity: 8 or more levels", 567, "ANTERIORFUSIONFORSPINALDEFORMITY:8ORMORELEVELS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 556, "Posterior spinal fusion: Each additional level", 556, "POSTERIORSPINALFUSION:EACHADDITIONALLEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 602, "Open reduction and fixation of central mid-third facial fracture with displacement: Le Fort II Osteotomy (team fee)", 602, "OPENREDUCTIONANDFIXATIONOFCENTRALMID-THIRDFACIALFRACTUREWITHDISPLACEMENT:LEFORTIIOSTEOTOMY(TEAMFEE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 604, "Open reduction and fixation of central mid-third facial fracture with displacement: Fracture of maxilla without displacement", 604, "OPENREDUCTIONANDFIXATIONOFCENTRALMID-THIRDFACIALFRACTUREWITHDISPLACEMENT:FRACTUREOFMAXILLAWITHOUTDISPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 629, "Functional endoscopic sinus surgery: Unilateral", 629, "FUNCTIONALENDOSCOPICSINUSSURGERY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 630, "Functional endoscopic sinus surgery: Bilateral", 630, "FUNCTIONALENDOSCOPICSINUSSURGERY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 631, "Diathermy to nose or pharynx exclusive of consultation fee, uni- or bilateral: Under local anaesthetic", 631, "DIATHERMYTONOSEORPHARYNXEXCLUSIVEOFCONSULTATIONFEE,UNI-ORBILATERAL:UNDERLOCALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 632, "Diathermy to nose or pharynx exclusive of consultation fee, uni- or bilateral: Under general anaesthetic", 632, "DIATHERMYTONOSEORPHARYNXEXCLUSIVEOFCONSULTATIONFEE,UNI-ORBILATERAL:UNDERGENERALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 633, "Control severe epistaxis requiring hospitalisation: Anterior plugging", 633, "CONTROLSEVEREEPISTAXISREQUIRINGHOSPITALISATION:ANTERIORPLUGGING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 634, "Control severe epistaxis requiring hospitalisation: Anterior and posterior plugging", 634, "CONTROLSEVEREEPISTAXISREQUIRINGHOSPITALISATION:ANTERIORANDPOSTERIORPLUGGING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 635, "Ligation anterior ethmoidal artery", 635, "LIGATIONANTERIORETHMOIDALARTERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 636, "Caldwell-Luc operation: Unilateral", 636, "CALDWELL-LUCOPERATION:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 637, "Ligation internal maxillary artery", 637, "LIGATIONINTERNALMAXILLARYARTERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 628, "Autogenous nasal bone transplant: Bone removal included", 628, "AUTOGENOUSNASALBONETRANSPLANT:BONEREMOVALINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 638, "Vidian neurectomy (transantral or transnasal)", 638, "VIDIANNEURECTOMY(TRANSANTRALORTRANSNASAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 640, "Instrumental examination of the nasopharynx including biopsy under general anaesthetic", 640, "INSTRUMENTALEXAMINATIONOFTHENASOPHARYNXINCLUDINGBIOPSYUNDERGENERALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 641, "Frontal sinus drainage, trephine operation", 641, "FRONTALSINUSDRAINAGE,TREPHINEOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 642, "Antroscopy through the canine fossa (modifier 0005 to apply to opposite side of nose)", 642, "ANTROSCOPYTHROUGHTHECANINEFOSSA(MODIFIER0005TOAPPLYTOOPPOSITESIDEOFNOSE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 643, "External frontal ethmoidectomy", 643, "EXTERNALFRONTALETHMOIDECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 644, "External ethmoidectomy and/or sphenoidectomy", 644, "EXTERNALETHMOIDECTOMYAND/ORSPHENOIDECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 645, "Sublabial transseptal sphenoidotomy", 645, "SUBLABIALTRANSSEPTALSPHENOIDOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 646, "Frontal osteomyelitis", 646, "FRONTALOSTEOMYELITIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 647, "Obliteration of frontal sinus", 647, "OBLITERATIONOFFRONTALSINUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 648, "Lateral rhinotomy", 648, "LATERALRHINOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 639, "Removal nasopharyngeal fibroma", 639, "REMOVALNASOPHARYNGEALFIBROMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 603, "Open reduction and fixation of central mid-third facial fracture with displacement: Le Fort III Osteotomy (team fee)", 603, "OPENREDUCTIONANDFIXATIONOFCENTRALMID-THIRDFACIALFRACTUREWITHDISPLACEMENT:LEFORTIIIOSTEOTOMY(TEAMFEE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 627, "Removal of multiple polyps in hospital under general anaesthetic", 627, "REMOVALOFMULTIPLEPOLYPSINHOSPITALUNDERGENERALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 625, "Endoscopic turbinectomy: Laser or microdebrider", 625, "ENDOSCOPICTURBINECTOMY:LASERORMICRODEBRIDER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 605, "Mandible: Fractured nose and zygoma: Open reduction and fixation", 605, "MANDIBLE:FRACTUREDNOSEANDZYGOMA:OPENREDUCTIONANDFIXATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 606, "Mandible: Fractured nose and zygoma: Closed reduction by inter-maxillary fixation", 606, "MANDIBLE:FRACTUREDNOSEANDZYGOMA:CLOSEDREDUCTIONBYINTER-MAXILLARYFIXATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 607, "Temporo-mandibular joint: Reconstruction for dysfunction", 607, "TEMPORO-MANDIBULARJOINT:RECONSTRUCTIONFORDYSFUNCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 608, "Manipulation: Immobilisation and follow-up of fractured nose", 608, "MANIPULATION:IMMOBILISATIONANDFOLLOW-UPOFFRACTUREDNOSE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 609, "Nasal fracture without manipulation", 609, "NASALFRACTUREWITHOUTMANIPULATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 610, "Mandibulectomy", 610, "MANDIBULECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 611, "Maxillectomy", 611, "MAXILLECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 612, "Bone graft to mandible", 612, "BONEGRAFTTOMANDIBLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 613, "Adjustment of occlusion by ramisection", 613, "ADJUSTMENTOFOCCLUSIONBYRAMISECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 626, "Removal of single nasal polyp at rooms (at initial consultation only)", 626, "REMOVALOFSINGLENASALPOLYPATROOMS(ATINITIALCONSULTATIONONLY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 614, "Fracture of arch of zygoma without displacement", 614, "FRACTUREOFARCHOFZYGOMAWITHOUTDISPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 616, "Fracture of arch of zygoma with displacement requiring operative manipulation but not including associated fractures (after four weeks)", 616, "FRACTUREOFARCHOFZYGOMAWITHDISPLACEMENTREQUIRINGOPERATIVEMANIPULATIONBUTNOTINCLUDINGASSOCIATEDFRACTURES(AFTERFOURWEEKS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 617, "Flexible nasopharyngolaryngoscope examination", 617, "FLEXIBLENASOPHARYNGOLARYNGOSCOPEEXAMINATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 618, "ENT endoscopy in rooms with rigid endoscope", 618, "ENTENDOSCOPYINROOMSWITHRIGIDENDOSCOPE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 619, "Repair of perforated septum: Any method", 619, "REPAIROFPERFORATEDSEPTUM:ANYMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 620, "Functional reconstruction of nasal septum", 620, "FUNCTIONALRECONSTRUCTIONOFNASALSEPTUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 621, "Insertion of silastic obturator into nasal septum perforation (excluding material)", 621, "INSERTIONOFSILASTICOBTURATORINTONASALSEPTUMPERFORATION(EXCLUDINGMATERIAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 622, "Intranasal antrostomy (modifier 0005 to apply to opposite side of nose)", 622, "INTRANASALANTROSTOMY(MODIFIER0005TOAPPLYTOOPPOSITESIDEOFNOSE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 623, "Dacrocystorhinostomy", 623, "DACROCYSTORHINOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 624, "Turbinectomy (modifier 0005 to apply to opposite side of nose)", 624, "TURBINECTOMY(MODIFIER0005TOAPPLYTOOPPOSITESIDEOFNOSE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 615, "Fracture of arch of zygoma with displacement requiring operative manipulation (not including associated fractures), recent fracture (within four weeks)", 615, "FRACTUREOFARCHOFZYGOMAWITHDISPLACEMENTREQUIRINGOPERATIVEMANIPULATION(NOTINCLUDINGASSOCIATEDFRACTURES),RECENTFRACTURE(WITHINFOURWEEKS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 555, "Posterior fusion: Occiput to C2", 555, "POSTERIORFUSION:OCCIPUTTOC2", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 554, "Anterior interbody fusion: Each additional level", 554, "ANTERIORINTERBODYFUSION:EACHADDITIONALLEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 553, "Anterior interbody fusion: One level", 553, "ANTERIORINTERBODYFUSION:ONELEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 484, "Excision: Semimembranosus", 484, "EXCISION:SEMIMEMBRANOSUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 485, "Excision: Prepatellar", 485, "EXCISION:PREPATELLAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 486, "Excision: Olecranon", 486, "EXCISION:OLECRANON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 487, "Excision: Small bursa or ganglion", 487, "EXCISION:SMALLBURSAORGANGLION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 488, "Excision: Compound palmar ganglion or synovectomy", 488, "EXCISION:COMPOUNDPALMARGANGLIONORSYNOVECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 489, "Bursae and ganglia: Aspiration or injection (no after-care) (modifier 0005 not applicable)", 489, "BURSAEANDGANGLIA:ASPIRATIONORINJECTION(NOAFTER-CARE)(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 490, "Leg equalisation and congenital hips and feet: Leg shortening", 490, "LEGEQUALISATIONANDCONGENITALHIPSANDFEET:LEGSHORTENING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 491, "Leg equalisation and congenital hips and feet: Leg lengthening", 491, "LEGEQUALISATIONANDCONGENITALHIPSANDFEET:LEGLENGTHENING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 492, "Leg equalisation and congenital hips and feet: Epiphysiodesis at one level", 492, "LEGEQUALISATIONANDCONGENITALHIPSANDFEET:EPIPHYSIODESISATONELEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 483, "Foot: Postero-medial release for club-foot", 483, "FOOT:POSTERO-MEDIALRELEASEFORCLUB-FOOT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 493, "Congenital dislocation of hip: Initial non-operative reduction and application of plaster cast: One hip", 493, "CONGENITALDISLOCATIONOFHIP:INITIALNON-OPERATIVEREDUCTIONANDAPPLICATIONOFPLASTERCAST:ONEHIP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 495, "Open reduction of congenital dislocation of the hip", 495, "OPENREDUCTIONOFCONGENITALDISLOCATIONOFTHEHIP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 496, "Subsequent plasters", 496, "SUBSEQUENTPLASTERS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 497, "Congenital club foot: Manipulation and plaster: One foot", 497, "CONGENITALCLUBFOOT:MANIPULATIONANDPLASTER:ONEFOOT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 498, "Ponseti technique assistant (medical practitioner)", 498, "PONSETITECHNIQUEASSISTANT(MEDICALPRACTITIONER)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 499, "Removal of internal fixatives or prosthesis: Readily accessible", 499, "REMOVALOFINTERNALFIXATIVESORPROSTHESIS:READILYACCESSIBLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 500, "Removal of internal fixatives: Less accessible", 500, "REMOVALOFINTERNALFIXATIVES:LESSACCESSIBLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 501, "Removal of prosthesis for infection soon after operation", 501, "REMOVALOFPROSTHESISFORINFECTIONSOONAFTEROPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 502, "Late removal of infected or not infected total joint replacement prosthesis (including six weeks after-care): ADD to the item for total joint replacement of the specific joint", 502, "LATEREMOVALOFINFECTEDORNOTINFECTEDTOTALJOINTREPLACEMENTPROSTHESIS(INCLUDINGSIXWEEKSAFTER-CARE):ADDTOTHEITEMFORTOTALJOINTREPLACEMENTOFTHESPECIFICJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 503, "Limb cast (excluding after-care) (modifier 0005 not applicable)", 503, "LIMBCAST(EXCLUDINGAFTER-CARE)(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 494, "Congenital dislocation of hip: Initial non-operative reduction and application of plaster cast: Both hips", 494, "CONGENITALDISLOCATIONOFHIP:INITIALNON-OPERATIVEREDUCTIONANDAPPLICATIONOFPLASTERCAST:BOTHHIPS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 504, "Spica, plaster jacket or hinged cast brace (excluding after-care)", 504, "SPICA,PLASTERJACKETORHINGEDCASTBRACE(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 482, "Foot: Plantar fasciotomy", 482, "FOOT:PLANTARFASCIOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 480, "Open elongation tendon Achilles", 480, "OPENELONGATIONTENDONACHILLES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 460, "Single tendon transfer", 460, "SINGLETENDONTRANSFER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 461, "Multiple tendon transfer", 461, "MULTIPLETENDONTRANSFER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 462, "Hamstring to quadriceps transfer", 462, "HAMSTRINGTOQUADRICEPSTRANSFER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 463, "Pectoralis major or Latissimus dorsi transfer to biceps tendon", 463, "PECTORALISMAJORORLATISSIMUSDORSITRANSFERTOBICEPSTENDON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 464, "Tendon transfer at elbow", 464, "TENDONTRANSFERATELBOW", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 465, "Radial club hand repair - stand alone procedure", 465, "RADIALCLUBHANDREPAIR-STANDALONEPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 466, "Hand tendons: Single tendon transfer (first)", 466, "HANDTENDONS:SINGLETENDONTRANSFER(FIRST)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 467, "Hand tendons: Substitution for intrinsic paralysis of hand", 467, "HANDTENDONS:SUBSTITUTIONFORINTRINSICPARALYSISOFHAND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 468, "Hand tendons: Opponens tendon transfer (including obtaining of graft)", 468, "HANDTENDONS:OPPONENSTENDONTRANSFER(INCLUDINGOBTAININGOFGRAFT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 481, "Percutaneous \"Hoke \" elongation tendo Achilles ", 481, "PERCUTANEOUS\"HOKE\"ELONGATIONTENDOACHILLES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 469, "Percutaneous Tenotomy: All sites", 469, "PERCUTANEOUSTENOTOMY:ALLSITES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 471, "Scalenotomy", 471, "SCALENOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 472, "Scalenotomy with excision of first rib", 472, "SCALENOTOMYWITHEXCISIONOFFIRSTRIB", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 473, "Tennis elbow", 473, "TENNISELBOW", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 474, "Open release elbow (Mitals) - stand alone procedure", 474, "OPENRELEASEELBOW(MITALS)-STANDALONEPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 475, "Excision or slide for Volkmann's Contracture", 475, "EXCISIONORSLIDEFORVOLKMANN'SCONTRACTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 476, "Hip: Open muscle release", 476, "HIP:OPENMUSCLERELEASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 477, "Knee: Quadriceps plasty", 477, "KNEE:QUADRICEPSPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 478, "Knee: Open tenotomy", 478, "KNEE:OPENTENOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 479, "Calf", 479, "CALF", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 470, "Torticollis", 470, "TORTICOLLIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 505, "Turnbuckle cast for scoliosis (excluding after-care)", 505, "TURNBUCKLECASTFORSCOLIOSIS(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 506, "Adjustment or repair of turnbuckle cast for scoliosis (excluding after-care)", 506, "ADJUSTMENTORREPAIROFTURNBUCKLECASTFORSCOLIOSIS(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 507, "Club foot: Revision club foot release - stand alone procedure", 507, "CLUBFOOT:REVISIONCLUBFOOTRELEASE-STANDALONEPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 533, "Replantation of a single digit (to be motivated), for multiple digits (modifier 0005 applicable)", 533, "REPLANTATIONOFASINGLEDIGIT(TOBEMOTIVATED),FORMULTIPLEDIGITS(MODIFIER0005APPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 534, "Replantation operation through the palm", 534, "REPLANTATIONOPERATIONTHROUGHTHEPALM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 535, "Tumours: Epidermoid cysts", 535, "TUMOURS:EPIDERMOIDCYSTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 536, "Tumours: Ganglion or fibroma", 536, "TUMOURS:GANGLIONORFIBROMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 537, "Tumours: Nodular synovitis (Giant cell tumour of tendon sheath)", 537, "TUMOURS:NODULARSYNOVITIS(GIANTCELLTUMOUROFTENDONSHEATH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 538, "Removal of foreign bodies requiring incision: Under local anaesthetic", 538, "REMOVALOFFOREIGNBODIESREQUIRINGINCISION:UNDERLOCALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 539, "Removal of foreign bodies requiring incision: Under general or regional anaesthetic", 539, "REMOVALOFFOREIGNBODIESREQUIRINGINCISION:UNDERGENERALORREGIONALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 540, "Crushed hand injuries: Initial extensive soft tissue toilet under general anaesthetic (sliding scale) - Minimum", 540, "CRUSHEDHANDINJURIES:INITIALEXTENSIVESOFTTISSUETOILETUNDERGENERALANAESTHETIC(SLIDINGSCALE)-MINIMUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 541, "Crushed hand injuries: Subsequent dressing changes under general anaesthetic", 541, "CRUSHEDHANDINJURIES:SUBSEQUENTDRESSINGCHANGESUNDERGENERALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 532, "Replantation of thumb", 532, "REPLANTATIONOFTHUMB", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 542, "Excision of one vertebral body, for a lesion within the body (no decompression)", 542, "EXCISIONOFONEVERTEBRALBODY,FORALESIONWITHINTHEBODY(NODECOMPRESSION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 544, "Manipulation of spine under general anaesthetic: (no after-care) (modifier 0005 not applicable)", 544, "MANIPULATIONOFSPINEUNDERGENERALANAESTHETIC:(NOAFTER-CARE)(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 545, "Posterior osteotomy of spine: One vertebral segment", 545, "POSTERIOROSTEOTOMYOFSPINE:ONEVERTEBRALSEGMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 546, "Posterior spinal fusion: One level", 546, "POSTERIORSPINALFUSION:ONELEVEL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 547, "Posterior osteotomy of spine: Each additional vertebral segment", 547, "POSTERIOROSTEOTOMYOFSPINE:EACHADDITIONALVERTEBRALSEGMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 548, "Anterior spinal osteotomy with disc removal: One vertebral segment", 548, "ANTERIORSPINALOSTEOTOMYWITHDISCREMOVAL:ONEVERTEBRALSEGMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 549, "Anterior spinal osteotomy with disc removal: Each additional vertebral segment", 549, "ANTERIORSPINALOSTEOTOMYWITHDISCREMOVAL:EACHADDITIONALVERTEBRALSEGMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 550, "Anterior fusion base of skull to C2", 550, "ANTERIORFUSIONBASEOFSKULLTOC2", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 551, "Trans-abdominal anterior exposure of the spine for spinal fusion only if done by a second surgeon", 551, "TRANS-ABDOMINALANTERIOREXPOSUREOFTHESPINEFORSPINALFUSIONONLYIFDONEBYASECONDSURGEON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 552, "Trans-thoracic anterior exposure of the spine if done by a second surgeon", 552, "TRANS-THORACICANTERIOREXPOSUREOFTHESPINEIFDONEBYASECONDSURGEON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 543, "Excision of each additional vertebral segment for a lesion within the body (no decompression)", 543, "EXCISIONOFEACHADDITIONALVERTEBRALSEGMENTFORALESIONWITHINTHEBODY(NODECOMPRESSION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 531, "Replantation of amputated upper limb proximal to wrist joint", 531, "REPLANTATIONOFAMPUTATEDUPPERLIMBPROXIMALTOWRISTJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 530, "Capsulotomy metatarsophalangeal joints: Foot", 530, "CAPSULOTOMYMETATARSOPHALANGEALJOINTS:FOOT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 529, "Tendon transfer foot", 529, "TENDONTRANSFERFOOT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 508, "Club foot: Posterior release only - stand alone procedure", 508, "CLUBFOOT:POSTERIORRELEASEONLY-STANDALONEPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 509, "Excision tarsal coalition - stand alone procedure", 509, "EXCISIONTARSALCOALITION-STANDALONEPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 510, "Tenotomy: Single tendon", 510, "TENOTOMY:SINGLETENDON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 511, "Hammer toe: One toe", 511, "HAMMERTOE:ONETOE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 512, "Filleting of toe or Ruiz-Mora procedure", 512, "FILLETINGOFTOEORRUIZ-MORAPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 513, "Arthrodesis Hallux", 513, "ARTHRODESISHALLUX", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 514, "Silver bunionectomy or similar for Hallux Valgus", 514, "SILVERBUNIONECTOMYORSIMILARFORHALLUXVALGUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 515, "Excision arthroplasty", 515, "EXCISIONARTHROPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 516, "Cheilectomy or metatarsophangeal implant Hallux", 516, "CHEILECTOMYORMETATARSOPHANGEALIMPLANTHALLUX", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 517, "Metatarsal osteotomy or Lapidus or similar or Chevron - stand alone procedure", 517, "METATARSALOSTEOTOMYORLAPIDUSORSIMILARORCHEVRON-STANDALONEPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 518, "Hallux Valgus double osteotomy etc.", 518, "HALLUXVALGUSDOUBLEOSTEOTOMYETC.", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 519, "Distal soft tissue procedure for Hallux Valgus", 519, "DISTALSOFTTISSUEPROCEDUREFORHALLUXVALGUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 520, "Aitkin procedure or similar", 520, "AITKINPROCEDUREORSIMILAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 521, "Removal bony prominence foot e.g. bunionette (? Bunionette not applicable to COID)", 521, "REMOVALBONYPROMINENCEFOOTE.G.BUNIONETTE(?BUNIONETTENOTAPPLICABLETOCOID)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 522, "Repair angular deformity toe (lesser toes)", 522, "REPAIRANGULARDEFORMITYTOE(LESSERTOES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 523, "Sesamoidectomy", 523, "SESAMOIDECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 524, "Repair major foot tendons e.g. Tib Post", 524, "REPAIRMAJORFOOTTENDONSE.G.TIBPOST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 525, "Repair of dislocating peroneal tendons", 525, "REPAIROFDISLOCATINGPERONEALTENDONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 526, "Forefoot reconstruction for rheumatoid arthritis: Clayton or similar: One foot", 526, "FOREFOOTRECONSTRUCTIONFORRHEUMATOIDARTHRITIS:CLAYTONORSIMILAR:ONEFOOT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 527, "Steindler strip - plantar fascia", 527, "STEINDLERSTRIP-PLANTARFASCIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 528, "Kelikian syndactilly (one web space)", 528, "KELIKIANSYNDACTILLY(ONEWEBSPACE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 649, "Excision nasolabial cyst", 649, "EXCISIONNASOLABIALCYST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 650, "Removal of foreign bodies from nose: At rooms", 650, "REMOVALOFFOREIGNBODIESFROMNOSE:ATROOMS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 651, "Removal of foreign body from nose: Under general anaesthetic", 651, "REMOVALOFFOREIGNBODYFROMNOSE:UNDERGENERALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 652, "Proof puncture at rooms: Unilateral", 652, "PROOFPUNCTUREATROOMS:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 774, "Mediastinal tumours", 774, "MEDIASTINALTUMOURS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 775, "Mediastinoscopy", 775, "MEDIASTINOSCOPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 776, "Mediastinotomy", 776, "MEDIASTINOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 777, "Excision of malignant chest wall tumours involving sternum and multiple ribs", 777, "EXCISIONOFMALIGNANTCHESTWALLTUMOURSINVOLVINGSTERNUMANDMULTIPLERIBS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 778, "Removal of single rib with a lesion", 778, "REMOVALOFSINGLERIBWITHALESION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 779, "Prolonged neonatal resuscitation", 779, "PROLONGEDNEONATALRESUSCITATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 780, "General Practitioner's fee for the taking of an ECG only: Without effort: ? (item 1232)", 780, "GENERALPRACTITIONER'SFEEFORTHETAKINGOFANECGONLY:WITHOUTEFFORT:?(ITEM1232)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 781, "General Practitioner's fee for the taking of an ECG only: Without and with effort: ? (item 1233)", 781, "GENERALPRACTITIONER'SFEEFORTHETAKINGOFANECGONLY:WITHOUTANDWITHEFFORT:?(ITEM1233)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 782, "Physician's fee for interpreting an ECG: Without effort", 782, "PHYSICIAN'SFEEFORINTERPRETINGANECG:WITHOUTEFFORT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 773, "Prolonged attendance inside a hyperbaric chamber : 40, 00 clinical procedure units per half hour or part thereoffor the first hour, thereafter 20, 00 clinical procedure units per half hour : Minimum 40, 00 clinical procedure units ", 773, "PROLONGEDATTENDANCEINSIDEAHYPERBARICCHAMBER:40,00CLINICALPROCEDUREUNITSPERHALFHOURORPARTTHEREOFFORTHEFIRSTHOUR,THEREAFTER20,00CLINICALPROCEDUREUNITSPERHALFHOUR:MINIMUM40,00CLINICALPROCEDUREUNITS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 783, "Physician's fee for interpreting an ECG: With and without effort", 783, "PHYSICIAN'SFEEFORINTERPRETINGANECG:WITHANDWITHOUTEFFORT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 785, "Electrocardiogram: With and without effort", 785, "ELECTROCARDIOGRAM:WITHANDWITHOUTEFFORT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 786, "Effort electrocardiogram with the aid of a special bicycle ergometer, monitoring apparatus and availability of associated apparatus", 786, "EFFORTELECTROCARDIOGRAMWITHTHEAIDOFASPECIALBICYCLEERGOMETER,MONITORINGAPPARATUSANDAVAILABILITYOFASSOCIATEDAPPARATUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 787, "Multi-stage treadmill test", 787, "MULTI-STAGETREADMILLTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 788, "Electrocardiogram without effort: Under 4 years old", 788, "ELECTROCARDIOGRAMWITHOUTEFFORT:UNDER4YEARSOLD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 789, "24 Hour ambulatory blood pressure: Hire fee", 789, "24HOURAMBULATORYBLOODPRESSURE:HIREFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 790, "24 Hour ambulatory ECG monitoring (holter): Hire fee", 790, "24HOURAMBULATORYECGMONITORING(HOLTER):HIREFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 791, "24 Hour ambulatory ECG monitoring (holter): Interpretation", 791, "24HOURAMBULATORYECGMONITORING(HOLTER):INTERPRETATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 792, "Signal averaged electrocardiogram", 792, "SIGNALAVERAGEDELECTROCARDIOGRAM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 793, "X-ray Screening: Chest", 793, "X-RAYSCREENING:CHEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 784, "Electrocardiogram: Without effort", 784, "ELECTROCARDIOGRAM:WITHOUTEFFORT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 794, "X-ray screening: Prosthetic valves", 794, "X-RAYSCREENING:PROSTHETICVALVES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 772, "USN Cx 30 (2,8-6 ATA x 305-490 min): TECHNICAL COMPONENT", 772, "USNCX30(2,8-6ATAX305-490MIN):TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 770, "USN TT6ext (2,8-6 ATA x 305-490 min): TECHNICAL COMPONENT", 770, "USNTT6EXT(2,8-6ATAX305-490MIN):TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 750, "Ventilation: Subsequent days, per day", 750, "VENTILATION:SUBSEQUENTDAYS,PERDAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 751, "Ventilation: After two weeks, per day", 751, "VENTILATION:AFTERTWOWEEKS,PERDAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 752, "Insertion of arterial pressure cannula", 752, "INSERTIONOFARTERIALPRESSURECANNULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 753, "Insertion of Swan Ganz catheter for haemodynamics monitoring", 753, "INSERTIONOFSWANGANZCATHETERFORHAEMODYNAMICSMONITORING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 754, "Insertion of central venous line via peripheral vein", 754, "INSERTIONOFCENTRALVENOUSLINEVIAPERIPHERALVEIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 755, "Insertion of central venous line via subclavian or jugular veins", 755, "INSERTIONOFCENTRALVENOUSLINEVIASUBCLAVIANORJUGULARVEINS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 756, "Hyperalimentation (daily tariff)", 756, "HYPERALIMENTATION(DAILYTARIFF)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 757, "Patient-controlled analgesic pump: Hire fee: Per 24 hours (Cassette to be charged for according to item 0201 per patient)", 757, "PATIENT-CONTROLLEDANALGESICPUMP:HIREFEE:PER24HOURS(CASSETTETOBECHARGEDFORACCORDINGTOITEM0201PERPATIENT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 758, "Professional fee for managing a patient-controlled analgesic pump: First 24 hours (for subsequent days charged the appropriate hospital follow-up consultation/visit code)", 758, "PROFESSIONALFEEFORMANAGINGAPATIENT-CONTROLLEDANALGESICPUMP:FIRST24HOURS(FORSUBSEQUENTDAYSCHARGEDTHEAPPROPRIATEHOSPITALFOLLOW-UPCONSULTATION/VISITCODE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 771, "USN 6A (2,8-6 ATA x 305-490 min): TECHNICAL COMPONENT", 771, "USN6A(2,8-6ATAX305-490MIN):TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 759, "Monitoring of a patient at the hyperbaric chamber during hyperbaric treatment (includes pre-hyperbaric assessment, monitoring during treatment, and post treatment evaluation): Low pressure table (1,5-1,8 ATA x 45-60 min): PROFESSIONAL COMPONENT", 759, "MONITORINGOFAPATIENTATTHEHYPERBARICCHAMBERDURINGHYPERBARICTREATMENT(INCLUDESPRE-HYPERBARICASSESSMENT,MONITORINGDURINGTREATMENT,ANDPOSTTREATMENTEVALUATION):LOWPRESSURETABLE(1,5-1,8ATAX45-60MIN):PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 761, "Monitoring of a patient at the hyperbaric chamber during hyperbaric treatment (includes pre-hyperbaric assessment, monitoring during treatment, and post treatment evaluation): Routine HBO table (2-2,5 ATA x 90-120 min): PROFESSIONAL COMPONENT", 761, "MONITORINGOFAPATIENTATTHEHYPERBARICCHAMBERDURINGHYPERBARICTREATMENT(INCLUDESPRE-HYPERBARICASSESSMENT,MONITORINGDURINGTREATMENT,ANDPOSTTREATMENTEVALUATION):ROUTINEHBOTABLE(2-2,5ATAX90-120MIN):PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 762, "Routine HBO table (2-2,5 ATA x 90-120 min): TECHNICAL COMPONENT", 762, "ROUTINEHBOTABLE(2-2,5ATAX90-120MIN):TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 763, "Monitoring of a patient at the hyperbaric chamber during hyperbaric treatment (includes pre-hyperbaric assessment, monitoring during treatment, and post treatment evaluation): Emergency HBO table (2,5-3 ATA x 90-120 min): PROFESSIONAL COMPONENT", 763, "MONITORINGOFAPATIENTATTHEHYPERBARICCHAMBERDURINGHYPERBARICTREATMENT(INCLUDESPRE-HYPERBARICASSESSMENT,MONITORINGDURINGTREATMENT,ANDPOSTTREATMENTEVALUATION):EMERGENCYHBOTABLE(2,5-3ATAX90-120MIN):PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 764, "Emergency HBO table (2,5-3 ATA x 90-120 min): TECHNICAL COMPONENT", 764, "EMERGENCYHBOTABLE(2,5-3ATAX90-120MIN):TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 765, "Monitoring of a patient at the hyperbaric chamber during hyperbaric treatment (includes pre-hyperbaric assessment, monitoring during treatment, and post treatment evaluation): USN TT5 (2,8 ATA x 135 min): PROFESSIONAL COMPONENT", 765, "MONITORINGOFAPATIENTATTHEHYPERBARICCHAMBERDURINGHYPERBARICTREATMENT(INCLUDESPRE-HYPERBARICASSESSMENT,MONITORINGDURINGTREATMENT,ANDPOSTTREATMENTEVALUATION):USNTT5(2,8ATAX135MIN):PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 766, "USN TT5 (2,8 ATA x 135 min): TECHNICAL COMPONENT", 766, "USNTT5(2,8ATAX135MIN):TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 767, "Monitoring of a patient at the hyperbaric chamber during hyperbaric treatment (includes pre-hyperbaric assessment, monitoring during treatment, and post treatment evaluation): USN TT6 (2,8 ATA x 285 min): PROFESSIONAL COMPONENT", 767, "MONITORINGOFAPATIENTATTHEHYPERBARICCHAMBERDURINGHYPERBARICTREATMENT(INCLUDESPRE-HYPERBARICASSESSMENT,MONITORINGDURINGTREATMENT,ANDPOSTTREATMENTEVALUATION):USNTT6(2,8ATAX285MIN):PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 768, "USN TT6 (2,8 ATA x 285 min): TECHNICAL COMPONENT", 768, "USNTT6(2,8ATAX285MIN):TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 769, "Monitoring of a patient at the hyperbaric chamber during hyperbaric treatment (includes pre-hyperbaric assessment, monitoring during treatment, and post treatment evaluation): USN TT6ext/6A or Cx 30 (2,8-6 ATA x 305-490 min): PROFESSIONAL COMPONENT", 769, "MONITORINGOFAPATIENTATTHEHYPERBARICCHAMBERDURINGHYPERBARICTREATMENT(INCLUDESPRE-HYPERBARICASSESSMENT,MONITORINGDURINGTREATMENT,ANDPOSTTREATMENTEVALUATION):USNTT6EXT/6AORCX30(2,8-6ATAX305-490MIN):PROFESSIONALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 760, "Low pressure table (1,5-1,8 ATA x 45-60 min): TECHNICAL COMPONENT", 760, "LOWPRESSURETABLE(1,5-1,8ATAX45-60MIN):TECHNICALCOMPONENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 795, "Two week event triggered ambulatory ECG monitoring: Hire fee", 795, "TWOWEEKEVENTTRIGGEREDAMBULATORYECGMONITORING:HIREFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 796, "Two week event triggered ambulatory ECG monitoring: Interpretation", 796, "TWOWEEKEVENTTRIGGEREDAMBULATORYECGMONITORING:INTERPRETATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 797, "Angiography cerebral: First two series", 797, "ANGIOGRAPHYCEREBRAL:FIRSTTWOSERIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 823, "Programming of atrio-ventricular sequential pacemaker", 823, "PROGRAMMINGOFATRIO-VENTRICULARSEQUENTIALPACEMAKER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 824, "Insertion of temporary pacemaker (modifier 0005 not applicable)", 824, "INSERTIONOFTEMPORARYPACEMAKER(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 825, "Termination of arrhythmia - programmed stipulation and lead insertion of temporary pacer", 825, "TERMINATIONOFARRHYTHMIA-PROGRAMMEDSTIPULATIONANDLEADINSERTIONOFTEMPORARYPACER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 826, "Percutaneous transluminal angioplasty: First cardiologist: Single lesion", 826, "PERCUTANEOUSTRANSLUMINALANGIOPLASTY:FIRSTCARDIOLOGIST:SINGLELESION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 827, "Percutaneous transluminal angioplasty: Second cardiologist: Single lesion", 827, "PERCUTANEOUSTRANSLUMINALANGIOPLASTY:SECONDCARDIOLOGIST:SINGLELESION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 828, "Percutaneous transluminal angioplasty: First cardiologist: Second lesion", 828, "PERCUTANEOUSTRANSLUMINALANGIOPLASTY:FIRSTCARDIOLOGIST:SECONDLESION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 829, "Percutaneous transluminal angioplasty: Second cardiologist: Second lesion", 829, "PERCUTANEOUSTRANSLUMINALANGIOPLASTY:SECONDCARDIOLOGIST:SECONDLESION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 830, "Percutaneous transluminal angioplasty: First cardiologist: Third or subsequent lesions (each)", 830, "PERCUTANEOUSTRANSLUMINALANGIOPLASTY:FIRSTCARDIOLOGIST:THIRDORSUBSEQUENTLESIONS(EACH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 831, "Percutaneous transluminal angioplasty: Second cardiologist: Third or subsequent lesions (each)", 831, "PERCUTANEOUSTRANSLUMINALANGIOPLASTY:SECONDCARDIOLOGIST:THIRDORSUBSEQUENTLESIONS(EACH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 822, "Threshold testing: Hospital equipment", 822, "THRESHOLDTESTING:HOSPITALEQUIPMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 832, "Use of balloon procedures including : First cardiologist : Atrial septostomy ", 832, "USEOFBALLOONPROCEDURESINCLUDING:FIRSTCARDIOLOGIST:ATRIALSEPTOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1618, "Somatosensory evoked potentials (SEP) single nerve examination to brachial or lumbosacral plexus, spinal cord and cortex", 1618, "SOMATOSENSORYEVOKEDPOTENTIALS(SEP)SINGLENERVEEXAMINATIONTOBRACHIALORLUMBOSACRALPLEXUS,SPINALCORDANDCORTEX", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 835, "Atherectomy: Single lesion: Second cardiologist", 835, "ATHERECTOMY:SINGLELESION:SECONDCARDIOLOGIST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 836, "Insertion of intravascular stent: First cardiologist", 836, "INSERTIONOFINTRAVASCULARSTENT:FIRSTCARDIOLOGIST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 837, "Insertion of intravascular stent: Second cardiologist", 837, "INSERTIONOFINTRAVASCULARSTENT:SECONDCARDIOLOGIST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 838, "Use of balloon procedures including : First paediatric cardiologist (33) : Atrial septostomy ", 838, "USEOFBALLOONPROCEDURESINCLUDING:FIRSTPAEDIATRICCARDIOLOGIST(33):ATRIALSEPTOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 839, "Use of balloon procedure as in item 1290: Second paediatric cardiologist (33)", 839, "USEOFBALLOONPROCEDUREASINITEM1290:SECONDPAEDIATRICCARDIOLOGIST(33)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 840, "Cardiac catheterisation for congenital heart disease: All ages above 1 year old", 840, "CARDIACCATHETERISATIONFORCONGENITALHEARTDISEASE:ALLAGESABOVE1YEAROLD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 841, "Paediatric cardiac catheterisation: Infants below the age of one year", 841, "PAEDIATRICCARDIACCATHETERISATION:INFANTSBELOWTHEAGEOFONEYEAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 842, "Patent ductus arteriosus", 842, "PATENTDUCTUSARTERIOSUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 833, "Use of balloon procedure as in item 1282: Second cardiologist", 833, "USEOFBALLOONPROCEDUREASINITEM1282:SECONDCARDIOLOGIST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 821, "Threshold testing: Own equipment", 821, "THRESHOLDTESTING:OWNEQUIPMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 820, "Repositioning of catheter electrode", 820, "REPOSITIONINGOFCATHETERELECTRODE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 819, "Resiting pacemaker generator", 819, "RESITINGPACEMAKERGENERATOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 798, "Angiography peripheral: Per limb", 798, "ANGIOGRAPHYPERIPHERAL:PERLIMB", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 799, "Cardioversion for arrhythmias (any method) with doctor in attendance", 799, "CARDIOVERSIONFORARRHYTHMIAS(ANYMETHOD)WITHDOCTORINATTENDANCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 800, "Paracentesis of pericardium", 800, "PARACENTESISOFPERICARDIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 801, "Cardiological supervision of Dobutamine magnetic resonance stress testing", 801, "CARDIOLOGICALSUPERVISIONOFDOBUTAMINEMAGNETICRESONANCESTRESSTESTING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 802, "Right and left cardiac catheterisation without coronary angiography (with or without biopsy)", 802, "RIGHTANDLEFTCARDIACCATHETERISATIONWITHOUTCORONARYANGIOGRAPHY(WITHORWITHOUTBIOPSY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 803, "Endomyocardial biopsy", 803, "ENDOMYOCARDIALBIOPSY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 804, "Transseptal puncture", 804, "TRANSSEPTALPUNCTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 805, "Left heart catheterisation with coronary angiography (with or without biopsy)", 805, "LEFTHEARTCATHETERISATIONWITHCORONARYANGIOGRAPHY(WITHORWITHOUTBIOPSY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 806, "Right heart catheterisation (with or without biopsy)", 806, "RIGHTHEARTCATHETERISATION(WITHORWITHOUTBIOPSY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 807, "Catheterisation of coronary artery bypass grafts and/or internal mammary grafts", 807, "CATHETERISATIONOFCORONARYARTERYBYPASSGRAFTSAND/ORINTERNALMAMMARYGRAFTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 808, "Tilt test", 808, "TILTTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 809, "Ventricular stimulation study", 809, "VENTRICULARSTIMULATIONSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 810, "Full electrophysiological study", 810, "FULLELECTROPHYSIOLOGICALSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 811, "Pacemaker: Permanent - single chamber", 811, "PACEMAKER:PERMANENT-SINGLECHAMBER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 812, "Pacemaker: Permanent - dual chamber", 812, "PACEMAKER:PERMANENT-DUALCHAMBER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 813, "AV nodal ablation", 813, "AVNODALABLATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 814, "Accessory pathway ablation", 814, "ACCESSORYPATHWAYABLATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 815, "Electrophysiological mapping", 815, "ELECTROPHYSIOLOGICALMAPPING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 816, "Insertion transvenous implantable defibrillator", 816, "INSERTIONTRANSVENOUSIMPLANTABLEDEFIBRILLATOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 817, "Test for implantable transvenous defibrillator", 817, "TESTFORIMPLANTABLETRANSVENOUSDEFIBRILLATOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 818, "Renewal of pacemaker unit only, team fee", 818, "RENEWALOFPACEMAKERUNITONLY,TEAMFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 749, "Ventilation: First day", 749, "VENTILATION:FIRSTDAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 459, "Tenodesis: Digital joint", 459, "TENODESIS:DIGITALJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 748, "Cardio-respiratory resuscitation: Prolonged attendance in cases of emergency (not necessarily in ICU) - 50,00 clinical procedure units per half hour or part thereof for the first hour per practitioner, thereafter 25,00 clinical procedure units per half hour up to a maximum of 150,00 clinical procedure units per practitioner. Resuscitation fee includes all necessary additional procedures e.g. infusion, intubation, etc.", 748, "CARDIO-RESPIRATORYRESUSCITATION:PROLONGEDATTENDANCEINCASESOFEMERGENCY(NOTNECESSARILYINICU)-50,00CLINICALPROCEDUREUNITSPERHALFHOURORPARTTHEREOFFORTHEFIRSTHOURPERPRACTITIONER,THEREAFTER25,00CLINICALPROCEDUREUNITSPERHALFHOURUPTOAMAXIMUMOF150,00CLINICALPROCEDUREUNITSPERPRACTITIONER.RESUSCITATIONFEEINCLUDESALLNECESSARYADDITIONALPROCEDURESE.G.INFUSION,INTUBATION,ETC.", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 746, "Intensive care: Category 3: Cases with multiple organ failure or Category 2 patients which may require multidisciplinary intervention: First day (per involved practitioner)", 746, "INTENSIVECARE:CATEGORY3:CASESWITHMULTIPLEORGANFAILUREORCATEGORY2PATIENTSWHICHMAYREQUIREMULTIDISCIPLINARYINTERVENTION:FIRSTDAY(PERINVOLVEDPRACTITIONER)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 677, "Pharyngeal pouch operation", 677, "PHARYNGEALPOUCHOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 678, "Retropharyngeal abscess: Internal approach", 678, "RETROPHARYNGEALABSCESS:INTERNALAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 679, "Retropharyngeal abscess: External approach", 679, "RETROPHARYNGEALABSCESS:EXTERNALAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 680, "Functional reconstruction of palate and uvula", 680, "FUNCTIONALRECONSTRUCTIONOFPALATEANDUVULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 681, "Laryngeal intubation", 681, "LARYNGEALINTUBATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 682, "Laryngeal stroboscopy with video capture", 682, "LARYNGEALSTROBOSCOPYWITHVIDEOCAPTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 683, "Laryngectomy without block dissection of the neck", 683, "LARYNGECTOMYWITHOUTBLOCKDISSECTIONOFTHENECK", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 684, "Botulinus toxin injection for adductor disphonia (+ item 0198 + item 0201 + item 0202)", 684, "BOTULINUSTOXININJECTIONFORADDUCTORDISPHONIA(+ITEM0198+ITEM0201+ITEM0202)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 685, "Operative laryngoscopy with excision of tumour and/or stripping of vocal cords (excluding after-care)", 685, "OPERATIVELARYNGOSCOPYWITHEXCISIONOFTUMOURAND/ORSTRIPPINGOFVOCALCORDS(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 676, "Post tonsillectomy or adenoidectomy haemorrhage", 676, "POSTTONSILLECTOMYORADENOIDECTOMYHAEMORRHAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 686, "Post laryngectomy for voice restoration", 686, "POSTLARYNGECTOMYFORVOICERESTORATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 688, "Endolaryngeal operations", 688, "ENDOLARYNGEALOPERATIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 689, "External laryngeal operation e.g. laryngeal stenosis, laryngocele, abductor, paralysis, laryngocele-fissure", 689, "EXTERNALLARYNGEALOPERATIONE.G.LARYNGEALSTENOSIS,LARYNGOCELE,ABDUCTOR,PARALYSIS,LARYNGOCELE-FISSURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 690, "Direct laryngoscopy: Diagnostic laryngoscopy including biopsy (also to be applied when a flexible fibre-optic laryngoscope was used)", 690, "DIRECTLARYNGOSCOPY:DIAGNOSTICLARYNGOSCOPYINCLUDINGBIOPSY(ALSOTOBEAPPLIEDWHENAFLEXIBLEFIBRE-OPTICLARYNGOSCOPEWASUSED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 691, "Direct laryngoscopy plus foreign body removal", 691, "DIRECTLARYNGOSCOPYPLUSFOREIGNBODYREMOVAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 692, "Bronchoscopy: Diagnostic bronchoscopy", 692, "BRONCHOSCOPY:DIAGNOSTICBRONCHOSCOPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 693, "Bronchoscopy: Diagnostic bronchoscopy with removal of foreign body", 693, "BRONCHOSCOPY:DIAGNOSTICBRONCHOSCOPYWITHREMOVALOFFOREIGNBODY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 694, "Bronchoscopy: Bronchoscopy with laser", 694, "BRONCHOSCOPY:BRONCHOSCOPYWITHLASER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 695, "Nebulisation (in rooms)", 695, "NEBULISATION(INROOMS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 696, "Bronchial lavage", 696, "BRONCHIALLAVAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 687, "Tracheotomy", 687, "TRACHEOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 697, "Thoracotomy: For broncho-pleural fistula (including ruptured bronchus, any cause)", 697, "THORACOTOMY:FORBRONCHO-PLEURALFISTULA(INCLUDINGRUPTUREDBRONCHUS,ANYCAUSE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 675, "Ludwig's Angina: Drainage", 675, "LUDWIG'SANGINA:DRAINAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 673, "Laser assisted functional reconstruction of palate uvula: In the rooms (+ item 5930 for hire of laser): Follow-up operation performed by the same surgeon", 673, "LASERASSISTEDFUNCTIONALRECONSTRUCTIONOFPALATEUVULA:INTHEROOMS(+ITEM5930FORHIREOFLASER):FOLLOW-UPOPERATIONPERFORMEDBYTHESAMESURGEON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 653, "Proof puncture, uni- or bilateral under general anaesthetic", 653, "PROOFPUNCTURE,UNI-ORBILATERALUNDERGENERALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 654, "Proetz treatment (consultation fee only to be charged for first treatment)", 654, "PROETZTREATMENT(CONSULTATIONFEEONLYTOBECHARGEDFORFIRSTTREATMENT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 655, "Septum abscess: At rooms, including after-care", 655, "SEPTUMABSCESS:ATROOMS,INCLUDINGAFTER-CARE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 656, "Septum abscess: Under general anaesthetic", 656, "SEPTUMABSCESS:UNDERGENERALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 657, "Oro-antral fistula (without Caldwell-Luc)", 657, "ORO-ANTRALFISTULA(WITHOUTCALDWELL-LUC)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 658, "Choanal atresia: Intranasal approach", 658, "CHOANALATRESIA:INTRANASALAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 659, "Choanal atresia: Transpalatal approach", 659, "CHOANALATRESIA:TRANSPALATALAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 660, "Total reconstruction of the nose: Including reconstruction of nasal septum (septum plasty), nasal pyramid (osteotomy) and nasal tip", 660, "TOTALRECONSTRUCTIONOFTHENOSE:INCLUDINGRECONSTRUCTIONOFNASALSEPTUM(SEPTUMPLASTY),NASALPYRAMID(OSTEOTOMY)ANDNASALTIP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 661, "Sub-total reconstruction consisting of any two of the following: Septum plasty, osteotomy, nasal tip reconstruction", 661, "SUB-TOTALRECONSTRUCTIONCONSISTINGOFANYTWOOFTHEFOLLOWING:SEPTUMPLASTY,OSTEOTOMY,NASALTIPRECONSTRUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 674, "Opening of quinsy: Under general anaesthetic", 674, "OPENINGOFQUINSY:UNDERGENERALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 662, "Forehead rhinoplasty (all stages): Total", 662, "FOREHEADRHINOPLASTY(ALLSTAGES):TOTAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 664, "Forehead rhinoplasty (all stages): Rhinophyma without skin graft", 664, "FOREHEADRHINOPLASTY(ALLSTAGES):RHINOPHYMAWITHOUTSKINGRAFT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 665, "Full nasal reconstruction for secondary cleft lip deformity", 665, "FULLNASALRECONSTRUCTIONFORSECONDARYCLEFTLIPDEFORMITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 666, "Partial nasal reconstruction for cleft lip deformity", 666, "PARTIALNASALRECONSTRUCTIONFORCLEFTLIPDEFORMITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 667, "Columella reconstruction or lengthening", 667, "COLUMELLARECONSTRUCTIONORLENGTHENING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 668, "Tonsillectomy (dissection of the tonsils)", 668, "TONSILLECTOMY(DISSECTIONOFTHETONSILS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 669, "Laser tonsillectomy", 669, "LASERTONSILLECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 670, "Removal of adenoids", 670, "REMOVALOFADENOIDS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 671, "Laser assisted functional reconstruction of palate uvula: In the rooms (+ item 5930 for hire of laser)", 671, "LASERASSISTEDFUNCTIONALRECONSTRUCTIONOFPALATEUVULA:INTHEROOMS(+ITEM5930FORHIREOFLASER)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 672, "Opening of quinsy: At rooms", 672, "OPENINGOFQUINSY:ATROOMS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 663, "Forehead rhinoplasty (all stages): Partial", 663, "FOREHEADRHINOPLASTY(ALLSTAGES):PARTIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 698, "Pleural needle biopsy (no after-care) (modifier 0005 not applicable)", 698, "PLEURALNEEDLEBIOPSY(NOAFTER-CARE)(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 699, "Insertion of intercostal catheter (under water drainage)", 699, "INSERTIONOFINTERCOSTALCATHETER(UNDERWATERDRAINAGE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 700, "Intra-pleural block", 700, "INTRA-PLEURALBLOCK", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 726, "Flow volume test: Inspiration/expiration", 726, "FLOWVOLUMETEST:INSPIRATION/EXPIRATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 727, "Flow volume test: Inspiration/expiration/pre- and post bronchodilator (to be charged for only with first consultation - thereafter item 1186 applies)", 727, "FLOWVOLUMETEST:INSPIRATION/EXPIRATION/PRE-ANDPOSTBRONCHODILATOR(TOBECHARGEDFORONLYWITHFIRSTCONSULTATION-THEREAFTERITEM1186APPLIES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 728, "Forced expirogram only", 728, "FORCEDEXPIROGRAMONLY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 729, "Determination of resistance to airflow in paediatric patients, impulse oscilimetry", 729, "DETERMINATIONOFRESISTANCETOAIRFLOWINPAEDIATRICPATIENTS,IMPULSEOSCILIMETRY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 730, "N2 single breath distribution", 730, "N2SINGLEBREATHDISTRIBUTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 731, "Peak expiratory flow only", 731, "PEAKEXPIRATORYFLOWONLY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 732, "Functional residual capacity or residual volume: Helium method, nitrogen open circuit method, or other method", 732, "FUNCTIONALRESIDUALCAPACITYORRESIDUALVOLUME:HELIUMMETHOD,NITROGENOPENCIRCUITMETHOD,OROTHERMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 733, "Thoracic gas volume", 733, "THORACICGASVOLUME", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 734, "Determination of resistance to airflow, oscillary or plethysmographic methods", 734, "DETERMINATIONOFRESISTANCETOAIRFLOW,OSCILLARYORPLETHYSMOGRAPHICMETHODS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 725, "Excision or plication of emphysematous cyst: Re-exploration following sternal dehiscence", 725, "EXCISIONORPLICATIONOFEMPHYSEMATOUSCYST:RE-EXPLORATIONFOLLOWINGSTERNALDEHISCENCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 735, "Compliance and resistance, using oesophageal balloon", 735, "COMPLIANCEANDRESISTANCE,USINGOESOPHAGEALBALLOON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 737, "Pulmonary stress testing: For determination of VO2 max", 737, "PULMONARYSTRESSTESTING:FORDETERMINATIONOFVO2MAX", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 738, "Carbon monoxide diffusing capacity, any method", 738, "CARBONMONOXIDEDIFFUSINGCAPACITY,ANYMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 739, "Maximum inspiratory/expiratory pressure", 739, "MAXIMUMINSPIRATORY/EXPIRATORYPRESSURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 740, "Insertion of central venous catheter via peripheral vein in neonates", 740, "INSERTIONOFCENTRALVENOUSCATHETERVIAPERIPHERALVEININNEONATES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 741, "Intensive care: Category 1: Cases requiring intensive monitoring (to include cases where physiological instability is anticipated e.g. diabetic pre-coma, asthma, gastro-intestinal haemorrhage, etc.): Per day", 741, "INTENSIVECARE:CATEGORY1:CASESREQUIRINGINTENSIVEMONITORING(TOINCLUDECASESWHEREPHYSIOLOGICALINSTABILITYISANTICIPATEDE.G.DIABETICPRE-COMA,ASTHMA,GASTRO-INTESTINALHAEMORRHAGE,ETC.):PERDAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 742, "Intensive care: Category 2: Cases requiring active system support (where active specialised intervention is required in cases such as acute myocardial infarction, diabetic coma, head injury, severe asthma, acute pancreatitis, eclampsia, flail chest, etc. Ventilation may or may not be part of the active system support): First day", 742, "INTENSIVECARE:CATEGORY2:CASESREQUIRINGACTIVESYSTEMSUPPORT(WHEREACTIVESPECIALISEDINTERVENTIONISREQUIREDINCASESSUCHASACUTEMYOCARDIALINFARCTION,DIABETICCOMA,HEADINJURY,SEVEREASTHMA,ACUTEPANCREATITIS,ECLAMPSIA,FLAILCHEST,ETC.VENTILATIONMAYORMAYNOTBEPARTOFTHEACTIVESYSTEMSUPPORT):FIRSTDAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 743, "Intensive care: Category 2: Cases requiring active system support (where active specialised intervention is required in cases such as acute myocardial infarction, diabetic coma, head injury, severe asthma, acute pancreatitis, eclampsia, flail chest, etc. Ventilation may or may not be part of the active system support): Subsequent days, per day", 743, "INTENSIVECARE:CATEGORY2:CASESREQUIRINGACTIVESYSTEMSUPPORT(WHEREACTIVESPECIALISEDINTERVENTIONISREQUIREDINCASESSUCHASACUTEMYOCARDIALINFARCTION,DIABETICCOMA,HEADINJURY,SEVEREASTHMA,ACUTEPANCREATITIS,ECLAMPSIA,FLAILCHEST,ETC.VENTILATIONMAYORMAYNOTBEPARTOFTHEACTIVESYSTEMSUPPORT):SUBSEQUENTDAYS,PERDAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 744, "Intensive care: Category 2: Cases requiring active system support (where active specialised intervention is required in cases such as acute myocardial infarction, diabetic coma, head injury, severe asthma, acute pancreatitis, eclampsia, flail chest, etc. Ventilation may or may not be part of the active system support): After two weeks, per day", 744, "INTENSIVECARE:CATEGORY2:CASESREQUIRINGACTIVESYSTEMSUPPORT(WHEREACTIVESPECIALISEDINTERVENTIONISREQUIREDINCASESSUCHASACUTEMYOCARDIALINFARCTION,DIABETICCOMA,HEADINJURY,SEVEREASTHMA,ACUTEPANCREATITIS,ECLAMPSIA,FLAILCHEST,ETC.VENTILATIONMAYORMAYNOTBEPARTOFTHEACTIVESYSTEMSUPPORT):AFTERTWOWEEKS,PERDAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 745, "Intensive care: Category 3: Cases with multiple organ failure or Category 2 patients which may require multidisciplinary intervention: First day (primary practitioner)", 745, "INTENSIVECARE:CATEGORY3:CASESWITHMULTIPLEORGANFAILUREORCATEGORY2PATIENTSWHICHMAYREQUIREMULTIDISCIPLINARYINTERVENTION:FIRSTDAY(PRIMARYPRACTITIONER)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 736, "Prolonged post exposure evaluation of bronchospasm with multiple spirometric determinations after antigen, cold air, methacholine, other chemical agent or after exercise, with subsequent spirometry", 736, "PROLONGEDPOSTEXPOSUREEVALUATIONOFBRONCHOSPASMWITHMULTIPLESPIROMETRICDETERMINATIONSAFTERANTIGEN,COLDAIR,METHACHOLINE,OTHERCHEMICALAGENTORAFTEREXERCISE,WITHSUBSEQUENTSPIROMETRY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 724, "Excision or plication of emphysematous cyst: Bilateral synchronous (Median sternotomy)", 724, "EXCISIONORPLICATIONOFEMPHYSEMATOUSCYST:BILATERALSYNCHRONOUS(MEDIANSTERNOTOMY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 723, "Excision or plication of emphysematous cyst: Unilateral", 723, "EXCISIONORPLICATIONOFEMPHYSEMATOUSCYST:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 722, "Harvesting donor lung: Unilateral", 722, "HARVESTINGDONORLUNG:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 701, "Paracentesis chest: Diagnostic", 701, "PARACENTESISCHEST:DIAGNOSTIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 702, "Paracentesis chest: Therapeutic", 702, "PARACENTESISCHEST:THERAPEUTIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 703, "Pneumothorax: Induction (diagnostic)", 703, "PNEUMOTHORAX:INDUCTION(DIAGNOSTIC)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 704, "Pleurectomy", 704, "PLEURECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 705, "Decortication of lung", 705, "DECORTICATIONOFLUNG", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 706, "Chemical pleurodesis (instillation of silver nitrate, tetracycline, talc, etc.)", 706, "CHEMICALPLEURODESIS(INSTILLATIONOFSILVERNITRATE,TETRACYCLINE,TALC,ETC.)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 707, "Needle biopsy lung: (no after-care) (modifier 0005 not applicable)", 707, "NEEDLEBIOPSYLUNG:(NOAFTER-CARE)(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 708, "Pneumonectomy", 708, "PNEUMONECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 709, "Pulmonary lobectomy", 709, "PULMONARYLOBECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 710, "Segmental lobectomy", 710, "SEGMENTALLOBECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 711, "Excision tracheal stenosis: Cervical", 711, "EXCISIONTRACHEALSTENOSIS:CERVICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 712, "Excision tracheal stenosis: Intra thoracic", 712, "EXCISIONTRACHEALSTENOSIS:INTRATHORACIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 713, "Thoracoplasty associated with lung resection or done by the same surgeon within 6 weeks", 713, "THORACOPLASTYASSOCIATEDWITHLUNGRESECTIONORDONEBYTHESAMESURGEONWITHIN6WEEKS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 714, "Thoracoplasty: Complete", 714, "THORACOPLASTY:COMPLETE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 715, "Thoracoplasty: Limited (osteoplastic)", 715, "THORACOPLASTY:LIMITED(OSTEOPLASTIC)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 716, "Drainage empyema (including six weeks after treatment)", 716, "DRAINAGEEMPYEMA(INCLUDINGSIXWEEKSAFTERTREATMENT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 717, "Drainage of lung abscess (including six weeks after treatment)", 717, "DRAINAGEOFLUNGABSCESS(INCLUDINGSIXWEEKSAFTERTREATMENT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 718, "Thoracotomy (limited): For lung or pleural biopsy", 718, "THORACOTOMY(LIMITED):FORLUNGORPLEURALBIOPSY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 719, "Major: Diagnostic, as for inoperable carcinoma", 719, "MAJOR:DIAGNOSTIC,ASFORINOPERABLECARCINOMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 720, "Thoracoscopy", 720, "THORACOSCOPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 721, "Lung transplant: Unilateral", 721, "LUNGTRANSPLANT:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 747, "Intensive care: Category 3: Cases with multiple organ failure or Category 2 patients which may require multidisciplinary intervention: Subsequent days (per involved practitioner)", 747, "INTENSIVECARE:CATEGORY3:CASESWITHMULTIPLEORGANFAILUREORCATEGORY2PATIENTSWHICHMAYREQUIREMULTIDISCIPLINARYINTERVENTION:SUBSEQUENTDAYS(PERINVOLVEDPRACTITIONER)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 843, "Pericardiectomy for constrictive pericarditis", 843, "PERICARDIECTOMYFORCONSTRICTIVEPERICARDITIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 458, "Central tendon tenotomy for Boutonniere deformity", 458, "CENTRALTENDONTENOTOMYFORBOUTONNIEREDEFORMITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 456, "Extensor tendon freeing operation following graft or suture in finger, hand or forearm, each tendon", 456, "EXTENSORTENDONFREEINGOPERATIONFOLLOWINGGRAFTORSUTUREINFINGER,HANDORFOREARM,EACHTENDON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 194, "Requiring repair by small skin graft or small local flap or other procedures of similar magnitude", 194, "REQUIRINGREPAIRBYSMALLSKINGRAFTORSMALLLOCALFLAPOROTHERPROCEDURESOFSIMILARMAGNITUDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 195, "Fine needle aspiration for soft tissue (all areas)", 195, "FINENEEDLEASPIRATIONFORSOFTTISSUE(ALLAREAS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 196, "Aspiration of cyst or tumour", 196, "ASPIRATIONOFCYSTORTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 197, "Mastotomy with exploration, drainage of abscess or removal of mammary implant", 197, "MASTOTOMYWITHEXPLORATION,DRAINAGEOFABSCESSORREMOVALOFMAMMARYIMPLANT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 198, "Biopsy or excision of cyst, benign tumour, aberrant breast tissue, duct papilloma", 198, "BIOPSYOREXCISIONOFCYST,BENIGNTUMOUR,ABERRANTBREASTTISSUE,DUCTPAPILLOMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 199, "Subareolar cone excision of ducts of wedge excision of breast", 199, "SUBAREOLARCONEEXCISIONOFDUCTSOFWEDGEEXCISIONOFBREAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 200, "Wedge excision of breast and axillary dissection", 200, "WEDGEEXCISIONOFBREASTANDAXILLARYDISSECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 201, "Total mastectomy", 201, "TOTALMASTECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 202, "Total mastectomy with axillary gland biopsy", 202, "TOTALMASTECTOMYWITHAXILLARYGLANDBIOPSY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 193, "Requiring repair by large skin graft or large local flap or other procedures of similar magnitude", 193, "REQUIRINGREPAIRBYLARGESKINGRAFTORLARGELOCALFLAPOROTHERPROCEDURESOFSIMILARMAGNITUDE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 203, "Total mastectomy with axillary gland dissection", 203, "TOTALMASTECTOMYWITHAXILLARYGLANDDISSECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 205, "Subcutaneous mastectomy for disease of breast ", 205, "SUBCUTANEOUSMASTECTOMYFORDISEASEOFBREAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 206, "Subcutaneous mastectomy for disease of breast ", 206, "SUBCUTANEOUSMASTECTOMYFORDISEASEOFBREAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 207, "Removal of breast implant by means of capsulectomy: Per breast", 207, "REMOVALOFBREASTIMPLANTBYMEANSOFCAPSULECTOMY:PERBREAST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 208, "Implantation of internal subpectoral mammary prosthesis in post mastectomy patients", 208, "IMPLANTATIONOFINTERNALSUBPECTORALMAMMARYPROSTHESISINPOSTMASTECTOMYPATIENTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 209, "Reduction: Mammoplasty for pathological hypertrophy: Unilateral", 209, "REDUCTION:MAMMOPLASTYFORPATHOLOGICALHYPERTROPHY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 210, "Reduction: Mammoplasty for pathological hypertrophy: Bilateral", 210, "REDUCTION:MAMMOPLASTYFORPATHOLOGICALHYPERTROPHY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 211, "Gynaecomastia: Unilateral", 211, "GYNAECOMASTIA:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 212, "Gynaecomastia: Bilateral", 212, "GYNAECOMASTIA:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 213, "Major Burns: Resuscitation (including supervision and intravenous therapy - first 48 hours)", 213, "MAJORBURNS:RESUSCITATION(INCLUDINGSUPERVISIONANDINTRAVENOUSTHERAPY-FIRST48HOURS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 204, "Nipple and areola reconstruction", 204, "NIPPLEANDAREOLARECONSTRUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 214, "Tangential excision and grafting: Small", 214, "TANGENTIALEXCISIONANDGRAFTING:SMALL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 192, "Extensive resection for malignant soft tissue tumour including muscle", 192, "EXTENSIVERESECTIONFORMALIGNANTSOFTTISSUETUMOURINCLUDINGMUSCLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 190, "Radical excision of nailbed", 190, "RADICALEXCISIONOFNAILBED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 170, "Scanning of pigmented skin lesions: Equipment fee for Molemax or similar device", 170, "SCANNINGOFPIGMENTEDSKINLESIONS:EQUIPMENTFEEFORMOLEMAXORSIMILARDEVICE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 171, "Large skin grafts, composite skin grafts, large full thickness free skin grafts", 171, "LARGESKINGRAFTS,COMPOSITESKINGRAFTS,LARGEFULLTHICKNESSFREESKINGRAFTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 172, "Reconstructive procedures (including all stages) and skin graft by myo-cutaneous or fascio-cutaneous flap", 172, "RECONSTRUCTIVEPROCEDURES(INCLUDINGALLSTAGES)ANDSKINGRAFTBYMYO-CUTANEOUSORFASCIO-CUTANEOUSFLAP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 173, "Reconstructive procedures (including all stages) grafting by micro-vascular re-anastomosis", 173, "RECONSTRUCTIVEPROCEDURES(INCLUDINGALLSTAGES)GRAFTINGBYMICRO-VASCULARRE-ANASTOMOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 174, "Distant flaps: First stage", 174, "DISTANTFLAPS:FIRSTSTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 175, "Contour grafts (excluding cost of material)", 175, "CONTOURGRAFTS(EXCLUDINGCOSTOFMATERIAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 176, "Vascularised bone graft with or without soft tissue with one or more sets of micro-vascular anastomoses", 176, "VASCULARISEDBONEGRAFTWITHORWITHOUTSOFTTISSUEWITHONEORMORESETSOFMICRO-VASCULARANASTOMOSES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 177, "Local skin flaps (large, complicated)", 177, "LOCALSKINFLAPS(LARGE,COMPLICATED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 178, "Other procedures of major technical nature", 178, "OTHERPROCEDURESOFMAJORTECHNICALNATURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 191, "Excision of large benign tumour (more than 5 cm)", 191, "EXCISIONOFLARGEBENIGNTUMOUR(MORETHAN5CM)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 179, "Subsequent major procedures for repair of same lesion", 179, "SUBSEQUENTMAJORPROCEDURESFORREPAIROFSAMELESION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 181, "Major abdominal lipectomy with repositioning of umbilicus", 181, "MAJORABDOMINALLIPECTOMYWITHREPOSITIONINGOFUMBILICUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 182, "Stitching of soft-tissue injuries: Stitching of wound (with or without local anaesthesia): Including normal after-care)", 182, "STITCHINGOFSOFT-TISSUEINJURIES:STITCHINGOFWOUND(WITHORWITHOUTLOCALANAESTHESIA):INCLUDINGNORMALAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 183, "Stitching of soft-tissue injuries: Additional wounds stitched at same session (each)", 183, "STITCHINGOFSOFT-TISSUEINJURIES:ADDITIONALWOUNDSSTITCHEDATSAMESESSION(EACH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 184, "Stitching of soft-tissue injuries: Deep laceration involving limited muscle damage", 184, "STITCHINGOFSOFT-TISSUEINJURIES:DEEPLACERATIONINVOLVINGLIMITEDMUSCLEDAMAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 185, "Stitching of soft-tissue injuries: Deep laceration involving extensive muscle damage", 185, "STITCHINGOFSOFT-TISSUEINJURIES:DEEPLACERATIONINVOLVINGEXTENSIVEMUSCLEDAMAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 186, "Major debridement of wound, sloughectomy or secondary suture", 186, "MAJORDEBRIDEMENTOFWOUND,SLOUGHECTOMYORSECONDARYSUTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 187, "Needle biopsy - soft tissue", 187, "NEEDLEBIOPSY-SOFTTISSUE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 188, "Excision and repair by direct suture ", 188, "EXCISIONANDREPAIRBYDIRECTSUTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 189, "Each additional small procedure done at the same time", 189, "EACHADDITIONALSMALLPROCEDUREDONEATTHESAMETIME", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 180, "Lower abdominal dermo-lipectomy", 180, "LOWERABDOMINALDERMO-LIPECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 169, "Photo-dynamic therapy for malignant skin lesions: Equipment fee for PDT lamp", 169, "PHOTO-DYNAMICTHERAPYFORMALIGNANTSKINLESIONS:EQUIPMENTFEEFORPDTLAMP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 215, "Tangential excision and grafting: Large", 215, "TANGENTIALEXCISIONANDGRAFTING:LARGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 217, "Small skin graft in acute hand injury", 217, "SMALLSKINGRAFTINACUTEHANDINJURY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 242, "Fracture (reduction under general anaesthetic): Open treatment of metacarpal: Simple", 242, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):OPENTREATMENTOFMETACARPAL:SIMPLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 243, "Fracture (reduction under general anaesthetic): Finger phalanx: Distal: Simple", 243, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):FINGERPHALANX:DISTAL:SIMPLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 244, "Fracture (reduction under general anaesthetic): Finger phalanx: Distal: Compound", 244, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):FINGERPHALANX:DISTAL:COMPOUND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 245, "Fracture (reduction under general anaesthetic): Proximal or middle: Simple", 245, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):PROXIMALORMIDDLE:SIMPLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 246, "Fracture (reduction under general anaesthetic): Proximal or middle: Compound", 246, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):PROXIMALORMIDDLE:COMPOUND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 247, "Fracture (reduction under general anaesthetic): Pelvis fracture: Closed", 247, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):PELVISFRACTURE:CLOSED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 248, "Fracture (reduction under general anaesthetic): Pelvis: Operative reduction and fixation", 248, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):PELVIS:OPERATIVEREDUCTIONANDFIXATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 249, "Fracture (reduction under general anaesthetic): Femur: Neck or Shaft", 249, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):FEMUR:NECKORSHAFT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 250, "Fracture (reduction under general anaesthetic): Patella", 250, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):PATELLA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 241, "Fracture (reduction under general anaesthetic): Bennett fracture-dislocation", 241, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):BENNETTFRACTURE-DISLOCATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 251, "Fracture (reduction under general anaesthetic): Tibia with or without fibula", 251, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):TIBIAWITHORWITHOUTFIBULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 253, "Fracture (reduction under general anaesthetic): Malleolus of ankle", 253, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):MALLEOLUSOFANKLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 254, "Fracture (reduction under general anaesthetic): Fracture-dislocation of ankle", 254, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):FRACTURE-DISLOCATIONOFANKLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 255, "Fracture (reduction under general anaesthetic): Open reduction Talus fracture (modifier 0051 not applicable)", 255, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):OPENREDUCTIONTALUSFRACTURE(MODIFIER0051NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 256, "Fracture (reduction under general anaesthetic): Tarsal bones (excluding talus and calcaneus)", 256, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):TARSALBONES(EXCLUDINGTALUSANDCALCANEUS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 257, "Fracture (reduction under general anaesthetic): Open reduction Calcaneus fracture (modifier 0051 not applicable)", 257, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):OPENREDUCTIONCALCANEUSFRACTURE(MODIFIER0051NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 258, "Fracture (reduction under general anaesthetic): Metatarsal", 258, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):METATARSAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 259, "Fracture (reduction under general anaesthetic): Toe phalanx: Distal Simple", 259, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):TOEPHALANX:DISTALSIMPLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 260, "Fracture (reduction under general anaesthetic): Toe phalanx: Compound", 260, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):TOEPHALANX:COMPOUND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 261, "Fracture (reduction under general anaesthetic): Other: Simple", 261, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):OTHER:SIMPLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 252, "Fracture (reduction under general anaesthetic): Fibula shaft", 252, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):FIBULASHAFT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 216, "Skin flap in acute hand injuries where a flap is taken from a site remote from the injured finger or in cases of advancement flag e.g. Cutler", 216, "SKINFLAPINACUTEHANDINJURIESWHEREAFLAPISTAKENFROMASITEREMOTEFROMTHEINJUREDFINGERORINCASESOFADVANCEMENTFLAGE.G.CUTLER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 240, "Fracture (reduction under general anaesthetic): Carpal bone", 240, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):CARPALBONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 238, "Fracture (reduction under general anaesthetic): Radius and/or Ulna", 238, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):RADIUSAND/ORULNA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 218, "Release of extensive skin contracture and/or excision of scar tissue with major skin graft resurfacing", 218, "RELEASEOFEXTENSIVESKINCONTRACTUREAND/OREXCISIONOFSCARTISSUEWITHMAJORSKINGRAFTRESURFACING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 219, "Z-plasty", 219, "Z-PLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 220, "Local flap and skin graft", 220, "LOCALFLAPANDSKINGRAFT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 221, "Cross finger flap (all stages)", 221, "CROSSFINGERFLAP(ALLSTAGES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 222, "Palmar flap (all stages)", 222, "PALMARFLAP(ALLSTAGES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 223, "Distant flap: First stage", 223, "DISTANTFLAP:FIRSTSTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 224, "Distant flap: Subsequent stage (not subject to general modifier 0007)", 224, "DISTANTFLAP:SUBSEQUENTSTAGE(NOTSUBJECTTOGENERALMODIFIER0007)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 225, "Transfer neurovascular island flap", 225, "TRANSFERNEUROVASCULARISLANDFLAP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 226, "Syndactyly: Separation of, including skin graft for one web (with skin flap and graft)", 226, "SYNDACTYLY:SEPARATIONOF,INCLUDINGSKINGRAFTFORONEWEB(WITHSKINFLAPANDGRAFT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 239, "Fracture (reduction under general anaesthetic): Open reduction of both radius and ulna (modifier 0051 not applicable)", 239, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):OPENREDUCTIONOFBOTHRADIUSANDULNA(MODIFIER0051NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 227, "Dupuytren's contracture: Fasciotomy", 227, "DUPUYTREN'SCONTRACTURE:FASCIOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 229, "Standard acupuncture", 229, "STANDARDACUPUNCTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 230, "Laser acupuncture using more than 6 points", 230, "LASERACUPUNCTUREUSINGMORETHAN6POINTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 231, "Electro-acupuncture", 231, "ELECTRO-ACUPUNCTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 232, "Scalp acupuncture", 232, "SCALPACUPUNCTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 233, "Micro-acupuncture (ear, hand)", 233, "MICRO-ACUPUNCTURE(EAR,HAND)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 234, "Fracture (reduction under general anaesthetic): Scapula", 234, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):SCAPULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 235, "Fracture (reduction under general anaesthetic): Clavicle", 235, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):CLAVICLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 236, "Percutaneous pinning of supracondylar fracture: Elbow - stand alone procedure", 236, "PERCUTANEOUSPINNINGOFSUPRACONDYLARFRACTURE:ELBOW-STANDALONEPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 237, "Fracture (reduction under general anaesthetic): Humerus", 237, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):HUMERUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 228, "Dupuytren's contracture: Fasciectomy", 228, "DUPUYTREN'SCONTRACTURE:FASCIECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 168, "Laser treatment for large skin lesions: Whole face or other areas of equivalent size or larger", 168, "LASERTREATMENTFORLARGESKINLESIONS:WHOLEFACEOROTHERAREASOFEQUIVALENTSIZEORLARGER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 167, "Laser treatment for large skin lesions: Extensive area", 167, "LASERTREATMENTFORLARGESKINLESIONS:EXTENSIVEAREA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 166, "Laser treatment for large skin lesions: Limited area", 166, "LASERTREATMENTFORLARGESKINLESIONS:LIMITEDAREA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 97, "Pre-anaesthetic assessment: Pre-anaesthetic assessment of patient or other consultative service. Consultation with detailed history, complete examination and moderate complex decision making and counselling. Typically occupies the doctor face-to-face for between 30 and 45 minutes", 97, "PRE-ANAESTHETICASSESSMENT:PRE-ANAESTHETICASSESSMENTOFPATIENTOROTHERCONSULTATIVESERVICE.CONSULTATIONWITHDETAILEDHISTORY,COMPLETEEXAMINATIONANDMODERATECOMPLEXDECISIONMAKINGANDCOUNSELLING.TYPICALLYOCCUPIESTHEDOCTORFACE-TO-FACEFORBETWEEN30AND45MINUTES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 98, "New born attendance: Exclusive attendance to baby at Caesarean section, normal delivery or visit in the ward (once per patient) (items 0109, 0111, 0113, 0145, 0146 and/or 0147 may not be added to item 0107)", 98, "NEWBORNATTENDANCE:EXCLUSIVEATTENDANCETOBABYATCAESAREANSECTION,NORMALDELIVERYORVISITINTHEWARD(ONCEPERPATIENT)(ITEMS0109,0111,0113,0145,0146AND/OR0147MAYNOTBEADDEDTOITEM0107)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 99, "New born attendance: Emergency attendance to newborn at all hours (once per patient) (items 0107, 0109, 0111, 0145, 0146 and/or 0147 may not be added to item 0113)", 99, "NEWBORNATTENDANCE:EMERGENCYATTENDANCETONEWBORNATALLHOURS(ONCEPERPATIENT)(ITEMS0107,0109,0111,0145,0146AND/OR0147MAYNOTBEADDEDTOITEM0113)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 100, "Telephone consultation (all hours)", 100, "TELEPHONECONSULTATION(ALLHOURS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 101, "Consulting service e.g. writing of repeat scripts or requesting routine pre-authorisation without the physical presence of the patient (needs not be face-to-face contact) (?Consultation? via SMS or electronic media included)", 101, "CONSULTINGSERVICEE.G.WRITINGOFREPEATSCRIPTSORREQUESTINGROUTINEPRE-AUTHORISATIONWITHOUTTHEPHYSICALPRESENCEOFTHEPATIENT(NEEDSNOTBEFACE-TO-FACECONTACT)(?CONSULTATION?VIASMSORELECTRONICMEDIAINCLUDED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 102, "Writing of special motivations for procedures and treatment without the physical presence of a patient (includes report on the clinical condition of a patient) requested by or on behalf of a third party funder or its agent", 102, "WRITINGOFSPECIALMOTIVATIONSFORPROCEDURESANDTREATMENTWITHOUTTHEPHYSICALPRESENCEOFAPATIENT(INCLUDESREPORTONTHECLINICALCONDITIONOFAPATIENT)REQUESTEDBYORONBEHALFOFATHIRDPARTYFUNDERORITSAGENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 103, "Completion of chronic medication forms by medical practitioners with or without the physical presence of the patient requested by or on behalf of a third party funder or its agent", 103, "COMPLETIONOFCHRONICMEDICATIONFORMSBYMEDICALPRACTITIONERSWITHORWITHOUTTHEPHYSICALPRESENCEOFTHEPATIENTREQUESTEDBYORONBEHALFOFATHIRDPARTYFUNDERORITSAGENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 104, "Licensed dispensing medical practitioners: Dispensing cost - R16.00 for medicine with a cost of R100,00 or more (VAT inclusive), or 16% for medicine costing less than R100,00 (VAT inclusive). Add to each Nappi code to provide for the dispensing cost.", 104, "LICENSEDDISPENSINGMEDICALPRACTITIONERS:DISPENSINGCOST-R16.00FORMEDICINEWITHACOSTOFR100,00ORMORE(VATINCLUSIVE),OR16%FORMEDICINECOSTINGLESSTHANR100,00(VATINCLUSIVE).ADDTOEACHNAPPICODETOPROVIDEFORTHEDISPENSINGCOST.", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 105, "Once-off administration of medicines: This item provides for medicines used at a consultation, viz, once off administration of medicine, special medicine used in treatment, or emergency dispensing. Charge for medicine used according to the Single Exit Price (SEP) PLUS R16,00 for medicine with a cost of R100,00 or more, or 16% for medicine costing less than R100,00 PLUS VAT on the 16%/R16,00.  (Where applicable, VAT should be added to the 16%/R 16,00 only and not to the SEP, since the SEP is VAT inclusive). [According to Section 18(8) of the Medicines and Related Substances Act (Act 101 of 1965) compounding and dispensing does not refer to a medicine requiring preparation for a once-off administration to a patient during a consultation]. The appropriate Ethical Medicine Nappi code(s), selected from those codes commencing with 7, 8 or 9 (provided that it is not a reference code), should be added applicable to the medicine used. Please note: Refer to item 0201 for cost of  material used in treatment.", 105, "ONCE-OFFADMINISTRATIONOFMEDICINES:THISITEMPROVIDESFORMEDICINESUSEDATACONSULTATION,VIZ,ONCEOFFADMINISTRATIONOFMEDICINE,SPECIALMEDICINEUSEDINTREATMENT,OREMERGENCYDISPENSING.CHARGEFORMEDICINEUSEDACCORDINGTOTHESINGLEEXITPRICE(SEP)PLUSR16,00FORMEDICINEWITHACOSTOFR100,00ORMORE,OR16%FORMEDICINECOSTINGLESSTHANR100,00PLUSVATONTHE16%/R16,00.(WHEREAPPLICABLE,VATSHOULDBEADDEDTOTHE16%/R16,00ONLYANDNOTTOTHESEP,SINCETHESEPISVATINCLUSIVE).[ACCORDINGTOSECTION18(8)OFTHEMEDICINESANDRELATEDSUBSTANCESACT(ACT101OF1965)COMPOUNDINGANDDISPENSINGDOESNOTREFERTOAMEDICINEREQUIRINGPREPARATIONFORAONCE-OFFADMINISTRATIONTOAPATIENTDURINGACONSULTATION].THEAPPROPRIATEETHICALMEDICINENAPPICODE(S),SELECTEDFROMTHOSECODESCOMMENCINGWITH7,8OR9(PROVIDEDTHATITISNOTAREFERENCECODE),SHOULDBEADDEDAPPLICABLETOTHEMEDICINEUSED.PLEASENOTE:REFERTOITEM0201FORCOSTOFMATERIALUSEDINTREATMENT.", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 96, "Pre-anaesthetic assessment: Pre-anaesthetic assessment of patient (all hours). Detailed history and clinical examination and straightforward decision making and counselling. Typically occupies the doctor face-to-face with the patient for between 20 and 35 minutes", 96, "PRE-ANAESTHETICASSESSMENT:PRE-ANAESTHETICASSESSMENTOFPATIENT(ALLHOURS).DETAILEDHISTORYANDCLINICALEXAMINATIONANDSTRAIGHTFORWARDDECISIONMAKINGANDCOUNSELLING.TYPICALLYOCCUPIESTHEDOCTORFACE-TO-FACEWITHTHEPATIENTFORBETWEEN20AND35MINUTES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 106, "Cost of chemotherapy drugs: This item provides for a charge for chemotherapy drugs used in treatment. Charge for chemotherapy drugs used in treatment at cost price PLUS 16% (with a maximum of R16,00). (Where applicable, VAT should be added to the above). The appropriate Ethical Medicine Nappi code(s), selected from those codes commencing with 7, 8 or 9 (provided that it is not a reference code), should be added applicable to the chemotherapy drugs used. ", 106, "COSTOFCHEMOTHERAPYDRUGS:THISITEMPROVIDESFORACHARGEFORCHEMOTHERAPYDRUGSUSEDINTREATMENT.CHARGEFORCHEMOTHERAPYDRUGSUSEDINTREATMENTATCOSTPRICEPLUS16%(WITHAMAXIMUMOFR16,00).(WHEREAPPLICABLE,VATSHOULDBEADDEDTOTHEABOVE).THEAPPROPRIATEETHICALMEDICINENAPPICODE(S),SELECTEDFROMTHOSECODESCOMMENCINGWITH7,8OR9(PROVIDEDTHATITISNOTAREFERENCECODE),SHOULDBEADDEDAPPLICABLETOTHECHEMOTHERAPYDRUGSUSED.", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 108, "Cost of material in treatment: This item provides for a charge for material used in treatment. Charge for material at cost price PLUS 26% (up to a maximum of R26,00). (Where applicable, VAT should be added to the above). The appropriate Surgical and Material Nappi code(s), selected from those codes commencing with 4, 5, 6, where applicable, for the material used, must be provided.  Please note: Refer to item 0198 for once off administration of medicine.", 108, "COSTOFMATERIALINTREATMENT:THISITEMPROVIDESFORACHARGEFORMATERIALUSEDINTREATMENT.CHARGEFORMATERIALATCOSTPRICEPLUS26%(UPTOAMAXIMUMOFR26,00).(WHEREAPPLICABLE,VATSHOULDBEADDEDTOTHEABOVE).THEAPPROPRIATESURGICALANDMATERIALNAPPICODE(S),SELECTEDFROMTHOSECODESCOMMENCINGWITH4,5,6,WHEREAPPLICABLE,FORTHEMATERIALUSED,MUSTBEPROVIDED.PLEASENOTE:REFERTOITEM0198FORONCEOFFADMINISTRATIONOFMEDICINE.", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 109, "Setting of sterile tray: A fee of 10,00 clinical procedure units may be charged for the setting of a sterile tray where a sterile procedure is performed in the rooms. Cost of stitching material, if applicable, shall be charged for according to item 0201, as appropriate", 109, "SETTINGOFSTERILETRAY:AFEEOF10,00CLINICALPROCEDUREUNITSMAYBECHARGEDFORTHESETTINGOFASTERILETRAYWHEREASTERILEPROCEDUREISPERFORMEDINTHEROOMS.COSTOFSTITCHINGMATERIAL,IFAPPLICABLE,SHALLBECHARGEDFORACCORDINGTOITEM0201,ASAPPROPRIATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 110, "Surgical laser apparatus: Hire fee for own equipment", 110, "SURGICALLASERAPPARATUS:HIREFEEFOROWNEQUIPMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 111, "Candella laser apparatus: Hire fee for own equipment (Rates by arrangement with the scheme concerned)", 111, "CANDELLALASERAPPARATUS:HIREFEEFOROWNEQUIPMENT(RATESBYARRANGEMENTWITHTHESCHEMECONCERNED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 112, "Unlisted procedure/service: A procedure/service may be provided that is not listed in this edition of the coding structure. Refer to General Rule C for the criteria to use item 6999", 112, "UNLISTEDPROCEDURE/SERVICE:APROCEDURE/SERVICEMAYBEPROVIDEDTHATISNOTLISTEDINTHISEDITIONOFTHECODINGSTRUCTURE.REFERTOGENERALRULECFORTHECRITERIATOUSEITEM6999", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 113, "Inhalation sedation: Use of analgesic nitrous oxide for alcohol and other withdrawal states: First quarter-hour or part thereof", 113, "INHALATIONSEDATION:USEOFANALGESICNITROUSOXIDEFORALCOHOLANDOTHERWITHDRAWALSTATES:FIRSTQUARTER-HOURORPARTTHEREOF", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 114, "Inhalation sedation: Per additional quarter-hour or part thereof", 114, "INHALATIONSEDATION:PERADDITIONALQUARTER-HOURORPARTTHEREOF", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 115, "Intravenous treatment: Intravenous infusions (cut-down or push-in) (patients under three years): Cut-down and/or insertion of cannula - chargeable once per 24 hours", 115, "INTRAVENOUSTREATMENT:INTRAVENOUSINFUSIONS(CUT-DOWNORPUSH-IN)(PATIENTSUNDERTHREEYEARS):CUT-DOWNAND/ORINSERTIONOFCANNULA-CHARGEABLEONCEPER24HOURS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 116, "Intravenous treatment: Intravenous infusions (push-in) (patients over three years): Insertion of cannula - chargeable once per 24 hours", 116, "INTRAVENOUSTREATMENT:INTRAVENOUSINFUSIONS(PUSH-IN)(PATIENTSOVERTHREEYEARS):INSERTIONOFCANNULA-CHARGEABLEONCEPER24HOURS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 107, "Prosthesis and/or internal fixation: This item provides for a charge for prosthesis and/or internal fixation. Charge for prosthesis and/or internal fixation at cost price PLUS 26% (up to a maximum of R 26,00). (Where applicable, VAT should be added to the above).  The appropriate Nappi code(s), where applicable, for the prosthesis and/or internal fixation used, must be provided.", 107, "PROSTHESISAND/ORINTERNALFIXATION:THISITEMPROVIDESFORACHARGEFORPROSTHESISAND/ORINTERNALFIXATION.CHARGEFORPROSTHESISAND/ORINTERNALFIXATIONATCOSTPRICEPLUS26%(UPTOAMAXIMUMOFR26,00).(WHEREAPPLICABLE,VATSHOULDBEADDEDTOTHEABOVE).THEAPPROPRIATENAPPICODE(S),WHEREAPPLICABLE,FORTHEPROSTHESISAND/ORINTERNALFIXATIONUSED,MUSTBEPROVIDED.", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 117, "Intravenous treatment: Intravenous infusions (cut-down) (patients over three years): Cut-down and insertion of cannula - chargeable once per 24 hours", 117, "INTRAVENOUSTREATMENT:INTRAVENOUSINFUSIONS(CUT-DOWN)(PATIENTSOVERTHREEYEARS):CUT-DOWNANDINSERTIONOFCANNULA-CHARGEABLEONCEPER24HOURS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 95, "Pre-anaesthetic assessment: Pre-anaesthetic assessment of patient (all hours). Problem focused history and clinical examination and straightforward decision making for minor problem. Typically occupies the doctor face-to-face with the patient for between 10 and 20 minutes", 95, "PRE-ANAESTHETICASSESSMENT:PRE-ANAESTHETICASSESSMENTOFPATIENT(ALLHOURS).PROBLEMFOCUSEDHISTORYANDCLINICALEXAMINATIONANDSTRAIGHTFORWARDDECISIONMAKINGFORMINORPROBLEM.TYPICALLYOCCUPIESTHEDOCTORFACE-TO-FACEWITHTHEPATIENTFORBETWEEN10AND20MINUTES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 93, "For elective after-hours services on request of the patient or family (non emergency) (refer to general rule B): ADD 50% of the fee for the appropriate consultation/visit item (only to be used with items 0190-0192, items 0173-0175, items 0161-0164, items 0166-0169 or items 0151-0153) and reflect this as a separate item 0148. Usage: This item is used when, for example, a patient or the family request the doctor for a non-emergency consultation/visit outside of the normal hours period as reflected in general rule B. ", 93, "FORELECTIVEAFTER-HOURSSERVICESONREQUESTOFTHEPATIENTORFAMILY(NONEMERGENCY)(REFERTOGENERALRULEB):ADD50%OFTHEFEEFORTHEAPPROPRIATECONSULTATION/VISITITEM(ONLYTOBEUSEDWITHITEMS0190-0192,ITEMS0173-0175,ITEMS0161-0164,ITEMS0166-0169ORITEMS0151-0153)ANDREFLECTTHISASASEPARATEITEM0148.USAGE:THISITEMISUSEDWHEN,FOREXAMPLE,APATIENTORTHEFAMILYREQUESTTHEDOCTORFORANON-EMERGENCYCONSULTATION/VISITOUTSIDEOFTHENORMALHOURSPERIODASREFLECTEDINGENERALRULEB.", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 73, "Psychiatry ('22'): New and established patients: Consultation/visit of new or established patient with problem focused history, clinical examination and straightforward decision making for minor problem. Typically occupies the doctor personally with the patient between 10 and 20 minutes (for hospital consultation/visit by psychiatrist - refer to items 0166-0169)", 73, "PSYCHIATRY('22'):NEWANDESTABLISHEDPATIENTS:CONSULTATION/VISITOFNEWORESTABLISHEDPATIENTWITHPROBLEMFOCUSEDHISTORY,CLINICALEXAMINATIONANDSTRAIGHTFORWARDDECISIONMAKINGFORMINORPROBLEM.TYPICALLYOCCUPIESTHEDOCTORPERSONALLYWITHTHEPATIENTBETWEEN10AND20MINUTES(FORHOSPITALCONSULTATION/VISITBYPSYCHIATRIST-REFERTOITEMS0166-0169)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 74, "Psychiatry ('22'): New and established patients: Consultation/visit of new or established patient with detailed history, clinical examination and straightforward decision making and counselling. Typically occupies the doctor personally with the patient between 21 and 35 minutes (for hospital consultation/visit by psychiatrist - refer to items 0166-0169)", 74, "PSYCHIATRY('22'):NEWANDESTABLISHEDPATIENTS:CONSULTATION/VISITOFNEWORESTABLISHEDPATIENTWITHDETAILEDHISTORY,CLINICALEXAMINATIONANDSTRAIGHTFORWARDDECISIONMAKINGANDCOUNSELLING.TYPICALLYOCCUPIESTHEDOCTORPERSONALLYWITHTHEPATIENTBETWEEN21AND35MINUTES(FORHOSPITALCONSULTATION/VISITBYPSYCHIATRIST-REFERTOITEMS0166-0169)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 75, "Psychiatry ('22'): New and established patients: Consultation/visit of new or established patient with detailed history, complete clinical examination and moderately complex decision making and counselling. Typically occupies the doctor personally with the patient between 36 and 45 minutes (for hospital consultation/visit by psychiatrist - refer to items 0166-0169)", 75, "PSYCHIATRY('22'):NEWANDESTABLISHEDPATIENTS:CONSULTATION/VISITOFNEWORESTABLISHEDPATIENTWITHDETAILEDHISTORY,COMPLETECLINICALEXAMINATIONANDMODERATELYCOMPLEXDECISIONMAKINGANDCOUNSELLING.TYPICALLYOCCUPIESTHEDOCTORPERSONALLYWITHTHEPATIENTBETWEEN36AND45MINUTES(FORHOSPITALCONSULTATION/VISITBYPSYCHIATRIST-REFERTOITEMS0166-0169)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 76, "Psychiatry ('22'): New and established patients: Consultation/visit of new or established patient with comprehensive history and clinical examination for complex problem requiring complex decision making and counselling. Typically occupies a doctor personally with the patient between 46 and 60 minutes (for hospital consultation/visit by psychiatrist - refer to items 0166-0169)", 76, "PSYCHIATRY('22'):NEWANDESTABLISHEDPATIENTS:CONSULTATION/VISITOFNEWORESTABLISHEDPATIENTWITHCOMPREHENSIVEHISTORYANDCLINICALEXAMINATIONFORCOMPLEXPROBLEMREQUIRINGCOMPLEXDECISIONMAKINGANDCOUNSELLING.TYPICALLYOCCUPIESADOCTORPERSONALLYWITHTHEPATIENTBETWEEN46AND60MINUTES(FORHOSPITALCONSULTATION/VISITBYPSYCHIATRIST-REFERTOITEMS0166-0169)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 77, "Psychiatry (22): First hospital consultation/visit with problem focused history, clinical examination and straightforward decision making for minor problem. Typically occupies the doctor personally with the patient for between 10 and 20 minutes", 77, "PSYCHIATRY(22):FIRSTHOSPITALCONSULTATION/VISITWITHPROBLEMFOCUSEDHISTORY,CLINICALEXAMINATIONANDSTRAIGHTFORWARDDECISIONMAKINGFORMINORPROBLEM.TYPICALLYOCCUPIESTHEDOCTORPERSONALLYWITHTHEPATIENTFORBETWEEN10AND20MINUTES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 78, "Psychiatry (22): First hospital consultation/visit with detailed history, clinical examination and straightforward decision making and counselling. Typically occupies the doctor personally with the patient for between 21 and 35 minutes", 78, "PSYCHIATRY(22):FIRSTHOSPITALCONSULTATION/VISITWITHDETAILEDHISTORY,CLINICALEXAMINATIONANDSTRAIGHTFORWARDDECISIONMAKINGANDCOUNSELLING.TYPICALLYOCCUPIESTHEDOCTORPERSONALLYWITHTHEPATIENTFORBETWEEN21AND35MINUTES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 79, "Psychiatry (22): First hospital consultation/visit with detailed history, complete clinical examination and moderately complex decision making and counselling. Typically occupies the doctor personally with the patient for between 36 and 45 minutes", 79, "PSYCHIATRY(22):FIRSTHOSPITALCONSULTATION/VISITWITHDETAILEDHISTORY,COMPLETECLINICALEXAMINATIONANDMODERATELYCOMPLEXDECISIONMAKINGANDCOUNSELLING.TYPICALLYOCCUPIESTHEDOCTORPERSONALLYWITHTHEPATIENTFORBETWEEN36AND45MINUTES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 80, "Psychiatry (22): First hospital consultation/visit with comprehensive history and clinical examination for complex problem requiring complex decision making and counselling. Typically occupies a doctor personally with the patient for between 46 and 60 minutes", 80, "PSYCHIATRY(22):FIRSTHOSPITALCONSULTATION/VISITWITHCOMPREHENSIVEHISTORYANDCLINICALEXAMINATIONFORCOMPLEXPROBLEMREQUIRINGCOMPLEXDECISIONMAKINGANDCOUNSELLING.TYPICALLYOCCUPIESADOCTORPERSONALLYWITHTHEPATIENTFORBETWEEN46AND60MINUTES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 81, "New and established patient: Consultation/visit of new or established patient of an average duration and/or complexity.  Includes counselling  with the patient and/or family and co-ordination with other health care providers or liaison with third parties on behalf of the patient (for hospital consultation/visit - refer to item 0173-0175 or item 0109) - not appropriate for pre-anaesthetic assessment followed by the appropriate anaesthetics - refer to new anaesthetic structure ", 81, "NEWANDESTABLISHEDPATIENT:CONSULTATION/VISITOFNEWORESTABLISHEDPATIENTOFANAVERAGEDURATIONAND/ORCOMPLEXITY.INCLUDESCOUNSELLINGWITHTHEPATIENTAND/ORFAMILYANDCO-ORDINATIONWITHOTHERHEALTHCAREPROVIDERSORLIAISONWITHTHIRDPARTIESONBEHALFOFTHEPATIENT(FORHOSPITALCONSULTATION/VISIT-REFERTOITEM0173-0175ORITEM0109)-NOTAPPROPRIATEFORPRE-ANAESTHETICASSESSMENTFOLLOWEDBYTHEAPPROPRIATEANAESTHETICS-REFERTONEWANAESTHETICSTRUCTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 94, "After-hours bona fide emergency consultation/visit (21:00-6:00 daily): ADD 25% of the fee for the appropriate consultation/visit item (only to be used with items 0190-0192, items 0173-0175, items 0161-0164, items 0166-0169 or items 0151-0153) and reflect this as a separate item 0149. Note: The after-hour period applicable to this item is from Monday to Sunday 21:00-6:00", 94, "AFTER-HOURSBONAFIDEEMERGENCYCONSULTATION/VISIT(21:00-6:00DAILY):ADD25%OFTHEFEEFORTHEAPPROPRIATECONSULTATION/VISITITEM(ONLYTOBEUSEDWITHITEMS0190-0192,ITEMS0173-0175,ITEMS0161-0164,ITEMS0166-0169ORITEMS0151-0153)ANDREFLECTTHISASASEPARATEITEM0149.NOTE:THEAFTER-HOURPERIODAPPLICABLETOTHISITEMISFROMMONDAYTOSUNDAY21:00-6:00", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 82, "New and established patient: Consultation/visit of new or established patient of a moderately above average duration and/or complexity.  Includes counselling with the patient and/or family and co-ordination with other health care providers or liaison with third parties on behalf of the patient (for hospital consultation/visit - refer to item 0173-0175 or item 0109) - not appropriate for pre-anaesthetic assessment followed by the appropriate anaesthetics - refer to new anaesthetic structure ", 82, "NEWANDESTABLISHEDPATIENT:CONSULTATION/VISITOFNEWORESTABLISHEDPATIENTOFAMODERATELYABOVEAVERAGEDURATIONAND/ORCOMPLEXITY.INCLUDESCOUNSELLINGWITHTHEPATIENTAND/ORFAMILYANDCO-ORDINATIONWITHOTHERHEALTHCAREPROVIDERSORLIAISONWITHTHIRDPARTIESONBEHALFOFTHEPATIENT(FORHOSPITALCONSULTATION/VISIT-REFERTOITEM0173-0175ORITEM0109)-NOTAPPROPRIATEFORPRE-ANAESTHETICASSESSMENTFOLLOWEDBYTHEAPPROPRIATEANAESTHETICS-REFERTONEWANAESTHETICSTRUCTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 84, "First hospital consultation/visit of an average duration and/or complexity. Includes counselling with the patient and/or family and co-ordination with other health care providers or liaison with third parties on behalf of the patient (not appropriate for pre-anaesthetic assessment followed by the appropriate anaesthetics - refer to new anaesthetic structure)  ", 84, "FIRSTHOSPITALCONSULTATION/VISITOFANAVERAGEDURATIONAND/ORCOMPLEXITY.INCLUDESCOUNSELLINGWITHTHEPATIENTAND/ORFAMILYANDCO-ORDINATIONWITHOTHERHEALTHCAREPROVIDERSORLIAISONWITHTHIRDPARTIESONBEHALFOFTHEPATIENT(NOTAPPROPRIATEFORPRE-ANAESTHETICASSESSMENTFOLLOWEDBYTHEAPPROPRIATEANAESTHETICS-REFERTONEWANAESTHETICSTRUCTURE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 85, "First hospital consultation/visit of a moderately above average duration and/or complexity.  Includes counselling with the patient and/or family and co-ordination with other health care providers or liaison with third parties on behalf of the patient (not appropriate for pre-anaesthetic assessment followed by the appropriate anaesthetics - refer to new anaesthetic structure)  ", 85, "FIRSTHOSPITALCONSULTATION/VISITOFAMODERATELYABOVEAVERAGEDURATIONAND/ORCOMPLEXITY.INCLUDESCOUNSELLINGWITHTHEPATIENTAND/ORFAMILYANDCO-ORDINATIONWITHOTHERHEALTHCAREPROVIDERSORLIAISONWITHTHIRDPARTIESONBEHALFOFTHEPATIENT(NOTAPPROPRIATEFORPRE-ANAESTHETICASSESSMENTFOLLOWEDBYTHEAPPROPRIATEANAESTHETICS-REFERTONEWANAESTHETICSTRUCTURE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 86, "First hospital consultation/visit of long duration and/or high complexity. Includes counselling with the patient and/or family and co-ordination with other health care providers or liaison with third parties on behalf of the patient (not appropriate for pre-anaesthetic assessment followed by the appropriate anaesthetics - refer to new anaesthetic structure)  ", 86, "FIRSTHOSPITALCONSULTATION/VISITOFLONGDURATIONAND/ORHIGHCOMPLEXITY.INCLUDESCOUNSELLINGWITHTHEPATIENTAND/ORFAMILYANDCO-ORDINATIONWITHOTHERHEALTHCAREPROVIDERSORLIAISONWITHTHIRDPARTIESONBEHALFOFTHEPATIENT(NOTAPPROPRIATEFORPRE-ANAESTHETICASSESSMENTFOLLOWEDBYTHEAPPROPRIATEANAESTHETICS-REFERTONEWANAESTHETICSTRUCTURE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 87, "Hospital follow-up visit to patient in ward or nursing facility - Refer to general rule G(a) for post-operative care) (may only be charged once per day) (not to be used with items 0111, 0145, 0146, 0147 or ICU items 1204-1214)", 87, "HOSPITALFOLLOW-UPVISITTOPATIENTINWARDORNURSINGFACILITY-REFERTOGENERALRULEG(A)FORPOST-OPERATIVECARE)(MAYONLYBECHARGEDONCEPERDAY)(NOTTOBEUSEDWITHITEMS0111,0145,0146,0147ORICUITEMS1204-1214)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 88, "Paediatric hospital follow-up visits (excluding neonates) by paediatricians or paediatric cardiologists (may only be charged once per day) (not to be used with items 0109 or ICU items 1204-1214). For a healthy neonate please use item 0109 for a hospital follow-up visit", 88, "PAEDIATRICHOSPITALFOLLOW-UPVISITS(EXCLUDINGNEONATES)BYPAEDIATRICIANSORPAEDIATRICCARDIOLOGISTS(MAYONLYBECHARGEDONCEPERDAY)(NOTTOBEUSEDWITHITEMS0109ORICUITEMS1204-1214).FORAHEALTHYNEONATEPLEASEUSEITEM0109FORAHOSPITALFOLLOW-UPVISIT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 89, "Prolonged face-to-face attendance to a patient:  ADD to either item 0192, item 0175, item 0164 or item 0169 as appropriate, for each 15-minute period only if service extends 10 minutes or more into the next 15-minute period following on the first 60 minutes", 89, "PROLONGEDFACE-TO-FACEATTENDANCETOAPATIENT:ADDTOEITHERITEM0192,ITEM0175,ITEM0164ORITEM0169ASAPPROPRIATE,FOREACH15-MINUTEPERIODONLYIFSERVICEEXTENDS10MINUTESORMOREINTOTHENEXT15-MINUTEPERIODFOLLOWINGONTHEFIRST60MINUTES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 90, "For consultation/visit away from the doctor's home or rooms (non-emergency): ADD only to the consultation/visit items 0190-0192, items 0173-0175, items 0161-0164 or items 0166-0169, as appropriate. Note: Only one of items 0145, 0146 or 0147 may be charged and not combinations thereof", 90, "FORCONSULTATION/VISITAWAYFROMTHEDOCTOR'SHOMEORROOMS(NON-EMERGENCY):ADDONLYTOTHECONSULTATION/VISITITEMS0190-0192,ITEMS0173-0175,ITEMS0161-0164ORITEMS0166-0169,ASAPPROPRIATE.NOTE:ONLYONEOFITEMS0145,0146OR0147MAYBECHARGEDANDNOTCOMBINATIONSTHEREOF", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 91, "For an unscheduled emergency consultation/visit at the doctors' home or rooms, all hours: ADD only to the consultation/visit items 0190-0192, items 0161-0164 or items 0151-0153, as appropriate (refer to general rule B). Note: Only one of items 0145, 0146 or 0147 may be charged and not combinations thereof", 91, "FORANUNSCHEDULEDEMERGENCYCONSULTATION/VISITATTHEDOCTORS'HOMEORROOMS,ALLHOURS:ADDONLYTOTHECONSULTATION/VISITITEMS0190-0192,ITEMS0161-0164ORITEMS0151-0153,ASAPPROPRIATE(REFERTOGENERALRULEB).NOTE:ONLYONEOFITEMS0145,0146OR0147MAYBECHARGEDANDNOTCOMBINATIONSTHEREOF", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 92, "For an unscheduled emergency consultation/visit away from the doctor's home or rooms, all hours: ADD only to the consultation/visit items 0190-0192, items 0173-0175, items 0161-0164, items 0166-0169 or items 0151-0153, as appropriate. Note: Only one of items 0145, 0146 or 0147 may be charged and not combinations thereof", 92, "FORANUNSCHEDULEDEMERGENCYCONSULTATION/VISITAWAYFROMTHEDOCTOR'SHOMEORROOMS,ALLHOURS:ADDONLYTOTHECONSULTATION/VISITITEMS0190-0192,ITEMS0173-0175,ITEMS0161-0164,ITEMS0166-0169ORITEMS0151-0153,ASAPPROPRIATE.NOTE:ONLYONEOFITEMS0145,0146OR0147MAYBECHARGEDANDNOTCOMBINATIONSTHEREOF", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 83, "New and established patient: Consultation/visit of new or established patient of long duration and/or high complexity.  Includes counselling with the patient and/or family and co-ordination with other health care providers or liaison with third parties on behalf of the patient (for hospital consultation/visit - refer to item 0173-0175 or item 0109) - not appropriate for pre-anaesthetic assessment followed by the appropriate anaesthetics - refer to new anaesthetic structure ", 83, "NEWANDESTABLISHEDPATIENT:CONSULTATION/VISITOFNEWORESTABLISHEDPATIENTOFLONGDURATIONAND/ORHIGHCOMPLEXITY.INCLUDESCOUNSELLINGWITHTHEPATIENTAND/ORFAMILYANDCO-ORDINATIONWITHOTHERHEALTHCAREPROVIDERSORLIAISONWITHTHIRDPARTIESONBEHALFOFTHEPATIENT(FORHOSPITALCONSULTATION/VISIT-REFERTOITEM0173-0175ORITEM0109)-NOTAPPROPRIATEFORPRE-ANAESTHETICASSESSMENTFOLLOWEDBYTHEAPPROPRIATEANAESTHETICS-REFERTONEWANAESTHETICSTRUCTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 118, "Venesection: Therapeutic venesection (Not to be used when blood is drawn for the purpose of laboratory investigations)", 118, "VENESECTION:THERAPEUTICVENESECTION(NOTTOBEUSEDWHENBLOODISDRAWNFORTHEPURPOSEOFLABORATORYINVESTIGATIONS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 119, "Umbilical artery cannulation at birth", 119, "UMBILICALARTERYCANNULATIONATBIRTH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 120, "Collection of blood specimen(s) by medical practitioner for pathology examination, per venesection (not to be used by pathologists)", 120, "COLLECTIONOFBLOODSPECIMEN(S)BYMEDICALPRACTITIONERFORPATHOLOGYEXAMINATION,PERVENESECTION(NOTTOBEUSEDBYPATHOLOGISTS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 146, "Treatment of benign skin lesion by chemo-cryotherapy: First Lesion", 146, "TREATMENTOFBENIGNSKINLESIONBYCHEMO-CRYOTHERAPY:FIRSTLESION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 147, "Treatment of benign skin lesion by chemo-cryotherapy: Subsequent lesions (each)", 147, "TREATMENTOFBENIGNSKINLESIONBYCHEMO-CRYOTHERAPY:SUBSEQUENTLESIONS(EACH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 148, "Treatment of benign skin lesion by chemo-cryotherapy: Maximum for multiple additional lesions", 148, "TREATMENTOFBENIGNSKINLESIONBYCHEMO-CRYOTHERAPY:MAXIMUMFORMULTIPLEADDITIONALLESIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 149, "Repair of nail bed", 149, "REPAIROFNAILBED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 150, "Removal of benign lesion by curretting under local or general anaesthesia followed by diathermy and curretting or electrocautery: First lesion", 150, "REMOVALOFBENIGNLESIONBYCURRETTINGUNDERLOCALORGENERALANAESTHESIAFOLLOWEDBYDIATHERMYANDCURRETTINGORELECTROCAUTERY:FIRSTLESION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 151, "Removal of benign lesion by curretting under local or general anaesthesia followed by diathermy and curretting or electrocautery: Subsequent lesions (each)", 151, "REMOVALOFBENIGNLESIONBYCURRETTINGUNDERLOCALORGENERALANAESTHESIAFOLLOWEDBYDIATHERMYANDCURRETTINGORELECTROCAUTERY:SUBSEQUENTLESIONS(EACH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 152, "Removal of malignant lesions by curretting under local or general anaesthesia followed by electrocautery: First lesion", 152, "REMOVALOFMALIGNANTLESIONSBYCURRETTINGUNDERLOCALORGENERALANAESTHESIAFOLLOWEDBYELECTROCAUTERY:FIRSTLESION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 153, "Removal of malignant lesions by curretting under local or general anaesthesia followed by electrocautery: Subsequent lesions (each)", 153, "REMOVALOFMALIGNANTLESIONSBYCURRETTINGUNDERLOCALORGENERALANAESTHESIAFOLLOWEDBYELECTROCAUTERY:SUBSEQUENTLESIONS(EACH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 154, "Drainage of subcutaneous abscess onychia, paronychia, pulp space or avulsion of nail", 154, "DRAINAGEOFSUBCUTANEOUSABSCESSONYCHIA,PARONYCHIA,PULPSPACEORAVULSIONOFNAIL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 145, "Deep skin biopsy by surgical incision with local anaesthetic and suturing", 145, "DEEPSKINBIOPSYBYSURGICALINCISIONWITHLOCALANAESTHETICANDSUTURING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 155, "Drainage of major hand or foot infection : Drainage of major abscess with necrosis of tissue, involving deep fascia or requiring debridement ", 155, "DRAINAGEOFMAJORHANDORFOOTINFECTION:DRAINAGEOFMAJORABSCESSWITHNECROSISOFTISSUE,INVOLVINGDEEPFASCIAORREQUIRINGDEBRIDEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 157, "Removal of foreign body deep to deep fascia (except hands)", 157, "REMOVALOFFOREIGNBODYDEEPTODEEPFASCIA(EXCEPTHANDS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 158, "Kurtin planing for acne scarring: Whole face", 158, "KURTINPLANINGFORACNESCARRING:WHOLEFACE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 159, "Kurtin planing for acne scarring: Extensive", 159, "KURTINPLANINGFORACNESCARRING:EXTENSIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 160, "Kurtin planing for acne scarring: Limited", 160, "KURTINPLANINGFORACNESCARRING:LIMITED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 161, "Kurtin planing for acne scarring: Subsequent planing of whole face within 12 months", 161, "KURTINPLANINGFORACNESCARRING:SUBSEQUENTPLANINGOFWHOLEFACEWITHIN12MONTHS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 162, "Surgical treatment for axillary hyperhidrosis", 162, "SURGICALTREATMENTFORAXILLARYHYPERHIDROSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 163, "Laser treatment for small skin lesions: First lesion", 163, "LASERTREATMENTFORSMALLSKINLESIONS:FIRSTLESION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 164, "Laser treatment for small skin lesions: Subsequent lesions (each)", 164, "LASERTREATMENTFORSMALLSKINLESIONS:SUBSEQUENTLESIONS(EACH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 165, "Laser treatment for small skin lesions: Maximum for multiple additional lesions", 165, "LASERTREATMENTFORSMALLSKINLESIONS:MAXIMUMFORMULTIPLEADDITIONALLESIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 156, "Removal of foreign body superficial to deep fascia (except hands)", 156, "REMOVALOFFOREIGNBODYSUPERFICIALTODEEPFASCIA(EXCEPTHANDS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 144, "Biopsy without suturing: Maximum for multiple additional lesions", 144, "BIOPSYWITHOUTSUTURING:MAXIMUMFORMULTIPLEADDITIONALLESIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 143, "Biopsy without suturing: Subsequent lesions (each)", 143, "BIOPSYWITHOUTSUTURING:SUBSEQUENTLESIONS(EACH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 142, "Biopsy without suturing: First lesion", 142, "BIOPSYWITHOUTSUTURING:FIRSTLESION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 121, "Exchange transfusion: First and subsequent (including after-care)", 121, "EXCHANGETRANSFUSION:FIRSTANDSUBSEQUENT(INCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 122, "Treatment with cytostatic agents: Administering of Chemotherapy: Intramuscular or subcutaneous: Per injection. For use by providers who do not make use of recognised chemotherapy facilities and/or who are not primarily responsible for managing the chemotherapy treatment", 122, "TREATMENTWITHCYTOSTATICAGENTS:ADMINISTERINGOFCHEMOTHERAPY:INTRAMUSCULARORSUBCUTANEOUS:PERINJECTION.FORUSEBYPROVIDERSWHODONOTMAKEUSEOFRECOGNISEDCHEMOTHERAPYFACILITIESAND/ORWHOARENOTPRIMARILYRESPONSIBLEFORMANAGINGTHECHEMOTHERAPYTREATMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 123, "Intravenous treatment with cytostatic agents: Administering of Chemotherapy: Intravenous bolus technique: Per injection. For use by providers who do not make use of recognised chemotherapy facilities and/or who are not primarily responsible for managing the chemotherapy treatment", 123, "INTRAVENOUSTREATMENTWITHCYTOSTATICAGENTS:ADMINISTERINGOFCHEMOTHERAPY:INTRAVENOUSBOLUSTECHNIQUE:PERINJECTION.FORUSEBYPROVIDERSWHODONOTMAKEUSEOFRECOGNISEDCHEMOTHERAPYFACILITIESAND/ORWHOARENOTPRIMARILYRESPONSIBLEFORMANAGINGTHECHEMOTHERAPYTREATMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 124, "Intravenous treatment with cytostatic agents: Administering of Chemotherapy: Intravenous infusion technique: Per injection. For use by providers who do not make use of recognised chemotherapy facilities and/or who are not primarily responsible for managing the chemotherapy treatment", 124, "INTRAVENOUSTREATMENTWITHCYTOSTATICAGENTS:ADMINISTERINGOFCHEMOTHERAPY:INTRAVENOUSINFUSIONTECHNIQUE:PERINJECTION.FORUSEBYPROVIDERSWHODONOTMAKEUSEOFRECOGNISEDCHEMOTHERAPYFACILITIESAND/ORWHOARENOTPRIMARILYRESPONSIBLEFORMANAGINGTHECHEMOTHERAPYTREATMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 125, "Interstitial implants: Placing of guide tubes for interstitial implants under local or general anaesthetic. The cost of materials is not included", 125, "INTERSTITIALIMPLANTS:PLACINGOFGUIDETUBESFORINTERSTITIALIMPLANTSUNDERLOCALORGENERALANAESTHETIC.THECOSTOFMATERIALSISNOTINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 126, "Intracavitary applications:  Placing of guide tubes under local or general anaesthetic for manual or remote afterloading brachytherapy. The cost of materials is not included", 126, "INTRACAVITARYAPPLICATIONS:PLACINGOFGUIDETUBESUNDERLOCALORGENERALANAESTHETICFORMANUALORREMOTEAFTERLOADINGBRACHYTHERAPY.THECOSTOFMATERIALSISNOTINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 127, "Isotope Therapy: Administration of low dose surface applicators, up to five applications. Typically an out patient procedure. The cost of materials is not included", 127, "ISOTOPETHERAPY:ADMINISTRATIONOFLOWDOSESURFACEAPPLICATORS,UPTOFIVEAPPLICATIONS.TYPICALLYANOUTPATIENTPROCEDURE.THECOSTOFMATERIALSISNOTINCLUDED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 128, "Infusional pharmacotherapy: Fee for the treatment of non cancerous conditions with bolus or infusional pharmacotherapy per treatment day (consultations to be charged separately)", 128, "INFUSIONALPHARMACOTHERAPY:FEEFORTHETREATMENTOFNONCANCEROUSCONDITIONSWITHBOLUSORINFUSIONALPHARMACOTHERAPYPERTREATMENTDAY(CONSULTATIONSTOBECHARGEDSEPARATELY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 129, "Allergy: Patch tests: First patch", 129, "ALLERGY:PATCHTESTS:FIRSTPATCH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 130, "Allergy: Skin-prick tests: Skin-prick testing: Insect venom, latex and drugs", 130, "ALLERGY:SKIN-PRICKTESTS:SKIN-PRICKTESTING:INSECTVENOM,LATEXANDDRUGS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 131, "Allergy: Patch tests: Each additional patch", 131, "ALLERGY:PATCHTESTS:EACHADDITIONALPATCH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 132, "Allergy: Skin-prick tests: Immediate hypersensitivity testing (Type I reaction): Per antigen: Inhalant and food allergens", 132, "ALLERGY:SKIN-PRICKTESTS:IMMEDIATEHYPERSENSITIVITYTESTING(TYPEIREACTION):PERANTIGEN:INHALANTANDFOODALLERGENS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 133, "Allergy: Skin-prick tests: Delayed hypersensitivity testing (Type IV reaction): Per antigen", 133, "ALLERGY:SKIN-PRICKTESTS:DELAYEDHYPERSENSITIVITYTESTING(TYPEIVREACTION):PERANTIGEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 134, "Intralesional injection into areas of pathology e.g. Keloid: Single", 134, "INTRALESIONALINJECTIONINTOAREASOFPATHOLOGYE.G.KELOID:SINGLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 135, "Intralesional injection into areas of pathology e.g. Keloids: Multiple", 135, "INTRALESIONALINJECTIONINTOAREASOFPATHOLOGYE.G.KELOIDS:MULTIPLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 136, "Epilation: Per session", 136, "EPILATION:PERSESSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 137, "Special treatment of severe acne cases, including draining of cysts, expressing of cleaning of Comedones and/or steaming, abrasive cleaning of skin and UVR per session", 137, "SPECIALTREATMENTOFSEVEREACNECASES,INCLUDINGDRAININGOFCYSTS,EXPRESSINGOFCLEANINGOFCOMEDONESAND/ORSTEAMING,ABRASIVECLEANINGOFSKINANDUVRPERSESSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 138, "PUVA Treatment: Maximum of 21 treatments", 138, "PUVATREATMENT:MAXIMUMOF21TREATMENTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 139, "PUVA: Follow-up or maintenance therapy once a week", 139, "PUVA:FOLLOW-UPORMAINTENANCETHERAPYONCEAWEEK", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 140, "UVR-Treatment", 140, "UVR-TREATMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 141, "UVR-Follow-up - for use of ultraviolet lamp (applied personally by the dermatologist). No charge to be levied if a nurse or physiotherapist applies the ultraviolet lamp", 141, "UVR-FOLLOW-UP-FORUSEOFULTRAVIOLETLAMP(APPLIEDPERSONALLYBYTHEDERMATOLOGIST).NOCHARGETOBELEVIEDIFANURSEORPHYSIOTHERAPISTAPPLIESTHEULTRAVIOLETLAMP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 262, "Fracture (reduction under general anaesthetic): Other: Compound", 262, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):OTHER:COMPOUND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 263, "Fracture (reduction under general anaesthetic): Sternum and/or ribs: Closed", 263, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):STERNUMAND/ORRIBS:CLOSED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 264, "Fracture (reduction under general anaesthetic): Sternum and/or ribs: Open reduction and fixation of multiple fractured ribs for flail chest", 264, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):STERNUMAND/ORRIBS:OPENREDUCTIONANDFIXATIONOFMULTIPLEFRACTUREDRIBSFORFLAILCHEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 265, "Fracture (reduction under general anaesthetic): Spine: With or without paralysis: Cervical", 265, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):SPINE:WITHORWITHOUTPARALYSIS:CERVICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 387, "Post-amputation reconstruction: Toe to thumb transfer", 387, "POST-AMPUTATIONRECONSTRUCTION:TOETOTHUMBTRANSFER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 388, "Electromyography", 388, "ELECTROMYOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 389, "Electro-myographic neuromuscular junctional study, including edrophonium response (not to be used with item 2730)", 389, "ELECTRO-MYOGRAPHICNEUROMUSCULARJUNCTIONALSTUDY,INCLUDINGEDROPHONIUMRESPONSE(NOTTOBEUSEDWITHITEM2730)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 390, "Strength duration curve per session", 390, "STRENGTHDURATIONCURVEPERSESSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 391, "Electrical examination of single nerve or muscle", 391, "ELECTRICALEXAMINATIONOFSINGLENERVEORMUSCLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 392, "Oxidative study for mitochondrial function", 392, "OXIDATIVESTUDYFORMITOCHONDRIALFUNCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 393, "Voltage integration during isometric contraction", 393, "VOLTAGEINTEGRATIONDURINGISOMETRICCONTRACTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 394, "Tonometry with edrophonium", 394, "TONOMETRYWITHEDROPHONIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 395, "Isometric tension studies with edrophonium", 395, "ISOMETRICTENSIONSTUDIESWITHEDROPHONIUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 386, "Post-amputation reconstruction: Pollicisation of the finger (to include all stages)", 386, "POST-AMPUTATIONRECONSTRUCTION:POLLICISATIONOFTHEFINGER(TOINCLUDEALLSTAGES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 396, "Cranial reflex study (both early and late responses) supra occulofacial or corneofacial or flabellofacial: Unilateral", 396, "CRANIALREFLEXSTUDY(BOTHEARLYANDLATERESPONSES)SUPRAOCCULOFACIALORCORNEOFACIALORFLABELLOFACIAL:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 398, "Tendon reflex time", 398, "TENDONREFLEXTIME", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 399, "Limb brain somatosensory studies (per limb)", 399, "LIMBBRAINSOMATOSENSORYSTUDIES(PERLIMB)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 400, "Vision and audio-sensory studies", 400, "VISIONANDAUDIO-SENSORYSTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 401, "Motor nerve conduction studies (single nerve)", 401, "MOTORNERVECONDUCTIONSTUDIES(SINGLENERVE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 402, "Examinations of sensory nerve conduction by sweep averages (single nerve)", 402, "EXAMINATIONSOFSENSORYNERVECONDUCTIONBYSWEEPAVERAGES(SINGLENERVE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 403, "Biopsy for motor nerve terminals and end plates", 403, "BIOPSYFORMOTORNERVETERMINALSANDENDPLATES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 404, "Combined muscle biopsy with end plates and nerve terminal biopsy", 404, "COMBINEDMUSCLEBIOPSYWITHENDPLATESANDNERVETERMINALBIOPSY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 405, "Muscle fatigue studies", 405, "MUSCLEFATIGUESTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 406, "Muscle biopsy", 406, "MUSCLEBIOPSY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 397, "Cranial reflex study (both early and late responses) supra occulofacial or corneofacial or flabellofacial: Bilateral", 397, "CRANIALREFLEXSTUDY(BOTHEARLYANDLATERESPONSES)SUPRAOCCULOFACIALORCORNEOFACIALORFLABELLOFACIAL:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 407, "Global fee for all muscle studies, including histochemical studies", 407, "GLOBALFEEFORALLMUSCLESTUDIES,INCLUDINGHISTOCHEMICALSTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 385, "Post-amputation reconstruction: Metacarpal transfer", 385, "POST-AMPUTATIONRECONSTRUCTION:METACARPALTRANSFER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 383, "Post-amputation reconstruction: Skin flap taken from a site remote from the injured finger or in cases of an advanced flap e.g. Cutler", 383, "POST-AMPUTATIONRECONSTRUCTION:SKINFLAPTAKENFROMASITEREMOTEFROMTHEINJUREDFINGERORINCASESOFANADVANCEDFLAPE.G.CUTLER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 363, "Manipulation large joint under general anaesthetic (not including after-care) (modifier 0005 not applicable)", 363, "MANIPULATIONLARGEJOINTUNDERGENERALANAESTHETIC(NOTINCLUDINGAFTER-CARE)(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 364, "Only the consultation fee should be charged when manipulation of a large joint is performed with or without local anaesthetic", 364, "ONLYTHECONSULTATIONFEESHOULDBECHARGEDWHENMANIPULATIONOFALARGEJOINTISPERFORMEDWITHORWITHOUTLOCALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 365, "Meniscectomy or operation for other internal derangement of knee", 365, "MENISCECTOMYOROPERATIONFOROTHERINTERNALDERANGEMENTOFKNEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 366, "Joint ligament reconstruction or suture: Ankle: Collateral", 366, "JOINTLIGAMENTRECONSTRUCTIONORSUTURE:ANKLE:COLLATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 367, "Joint ligament reconstruction or suture: Knee: Collateral", 367, "JOINTLIGAMENTRECONSTRUCTIONORSUTURE:KNEE:COLLATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 368, "Joint ligament reconstruction or suture: Knee: Cruciate", 368, "JOINTLIGAMENTRECONSTRUCTIONORSUTURE:KNEE:CRUCIATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 369, "Joint ligament reconstruction or suture: Ligament augmentation procedure of knee", 369, "JOINTLIGAMENTRECONSTRUCTIONORSUTURE:LIGAMENTAUGMENTATIONPROCEDUREOFKNEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 370, "Joint ligament reconstruction or suture: Digital joint ligament", 370, "JOINTLIGAMENTRECONSTRUCTIONORSUTURE:DIGITALJOINTLIGAMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 371, "Amputation: Fore-quarter amputation", 371, "AMPUTATION:FORE-QUARTERAMPUTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 384, "Post-amputation reconstruction: Krukenberg reconstruction", 384, "POST-AMPUTATIONRECONSTRUCTION:KRUKENBERGRECONSTRUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 372, "Amputation: Through shoulder", 372, "AMPUTATION:THROUGHSHOULDER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 374, "Partial amputation of the hand: One ray", 374, "PARTIALAMPUTATIONOFTHEHAND:ONERAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 375, "Amputation: Whole or part of finger", 375, "AMPUTATION:WHOLEORPARTOFFINGER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 376, "Hindquarter amputation", 376, "HINDQUARTERAMPUTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 377, "Amputation: Through hip joint region", 377, "AMPUTATION:THROUGHHIPJOINTREGION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 378, "Amputation: Through thigh", 378, "AMPUTATION:THROUGHTHIGH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 379, "Amputation: Below knee, through knee or Syme", 379, "AMPUTATION:BELOWKNEE,THROUGHKNEEORSYME", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 380, "Amputation: Trans-metatarsal or trans-tarsal", 380, "AMPUTATION:TRANS-METATARSALORTRANS-TARSAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 381, "Amputation: Foot: One ray", 381, "AMPUTATION:FOOT:ONERAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 382, "Amputation: Toe", 382, "AMPUTATION:TOE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 373, "Amputation: Upper arm or fore-arm", 373, "AMPUTATION:UPPERARMORFORE-ARM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 408, "Biochemical estimations on muscle biopsy specimens: Creatine kinase", 408, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:CREATINEKINASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 409, "Biochemical estimations on muscle biopsy specimens: Adenylate kinase", 409, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:ADENYLATEKINASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 410, "Biochemical estimations on muscle biopsy specimens: Pyruvate kinase", 410, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:PYRUVATEKINASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 436, "Muscle and tendon repair: Scapulopexy - stand alone procedure", 436, "MUSCLEANDTENDONREPAIR:SCAPULOPEXY-STANDALONEPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 437, "Muscle and tendon repair: Infrapatellar of quadriceps tendon", 437, "MUSCLEANDTENDONREPAIR:INFRAPATELLAROFQUADRICEPSTENDON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 438, "Muscle and tendon repair: Achilles tendon repair", 438, "MUSCLEANDTENDONREPAIR:ACHILLESTENDONREPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 439, "Muscle and tendon repair: Other single tendon", 439, "MUSCLEANDTENDONREPAIR:OTHERSINGLETENDON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 440, "Muscle and tendon repair: Tendon or ligament injection", 440, "MUSCLEANDTENDONREPAIR:TENDONORLIGAMENTINJECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 441, "Hand: Flexor tendon suture: Primary (per tendon)", 441, "HAND:FLEXORTENDONSUTURE:PRIMARY(PERTENDON)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 442, "Hand: Flexor tendon suture: Secondary (per tendon)", 442, "HAND:FLEXORTENDONSUTURE:SECONDARY(PERTENDON)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 443, "Extensor tendon suture: Primary (per tendon)", 443, "EXTENSORTENDONSUTURE:PRIMARY(PERTENDON)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 444, "Extensor tendon suture: Secondary (per tendon)", 444, "EXTENSORTENDONSUTURE:SECONDARY(PERTENDON)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 435, "Muscle and tendon repair: Debridement rotator cuff", 435, "MUSCLEANDTENDONREPAIR:DEBRIDEMENTROTATORCUFF", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 445, "Repair of Boutonniere deformity or Mallet finger with graft", 445, "REPAIROFBOUTONNIEREDEFORMITYORMALLETFINGERWITHGRAFT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 447, "Reconstruction of pulley for flexor tendon", 447, "RECONSTRUCTIONOFPULLEYFORFLEXORTENDON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 448, "Tendon graft: Finger: Flexor", 448, "TENDONGRAFT:FINGER:FLEXOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 449, "Tendon graft: Finger: Extensor", 449, "TENDONGRAFT:FINGER:EXTENSOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 450, "Two stage flexor tendon graft using silastic rod", 450, "TWOSTAGEFLEXORTENDONGRAFTUSINGSILASTICROD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 451, "Tendon freeing operation, except where specified elsewhere", 451, "TENDONFREEINGOPERATION,EXCEPTWHERESPECIFIEDELSEWHERE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 452, "Carpal tunnel syndrome", 452, "CARPALTUNNELSYNDROME", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 453, "Tenolysis: De Quervain", 453, "TENOLYSIS:DEQUERVAIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 454, "Trigger finger", 454, "TRIGGERFINGER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 455, "Flexor tendon freeing operation following free tendon graft or suture", 455, "FLEXORTENDONFREEINGOPERATIONFOLLOWINGFREETENDONGRAFTORSUTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 446, "Free tendon graft", 446, "FREETENDONGRAFT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 434, "Muscle and tendon repair: Rotator cuff", 434, "MUSCLEANDTENDONREPAIR:ROTATORCUFF", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 433, "Muscle and tendon repair: Removal of calcification in Rotator cuff", 433, "MUSCLEANDTENDONREPAIR:REMOVALOFCALCIFICATIONINROTATORCUFF", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 432, "Muscle and tendon repair: Biceps humeri", 432, "MUSCLEANDTENDONREPAIR:BICEPSHUMERI", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 411, "Biochemical estimations on muscle biopsy specimens: Lactate dehydrogenase", 411, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:LACTATEDEHYDROGENASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 412, "Biochemical estimations on muscle biopsy specimens: Adenylate deaminase", 412, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:ADENYLATEDEAMINASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 413, "Biochemical estimations on muscle biopsy specimens: Phosphoglycerate kinase", 413, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:PHOSPHOGLYCERATEKINASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 414, "Biochemical estimations on muscle biopsy specimens: Phosphoglycerate mutase", 414, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:PHOSPHOGLYCERATEMUTASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 415, "Biochemical estimations on muscle biopsy specimens: Enolase", 415, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:ENOLASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 416, "Biochemical estimations on muscle biopsy specimens: Phosphofructokinase", 416, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:PHOSPHOFRUCTOKINASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 417, "Biochemical estimations on muscle biopsy specimens: Aldolase", 417, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:ALDOLASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 418, "Biochemical estimations on muscle biopsy specimens: Glyceraldehyde 3 phosphate dehydrogenase", 418, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:GLYCERALDEHYDE3PHOSPHATEDEHYDROGENASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 419, "Biochemical estimations on muscle biopsy specimens: Phosphorylase", 419, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:PHOSPHORYLASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 420, "Biochemical estimations on muscle biopsy specimens: Phosphoglucomutase", 420, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:PHOSPHOGLUCOMUTASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 421, "Biochemical estimations on muscle biopsy specimens: Phosphohexose Isomerase", 421, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:PHOSPHOHEXOSEISOMERASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 422, "Biochemical estimations on muscle biopsy specimens: Muscle biopsy for muscle tension study", 422, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:MUSCLEBIOPSYFORMUSCLETENSIONSTUDY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 423, "Biochemical estimations on muscle biopsy specimens: H-response study (per nerve)", 423, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:H-RESPONSESTUDY(PERNERVE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 424, "Biochemical estimations on muscle biopsy specimens: Late response study (per nerve)", 424, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:LATERESPONSESTUDY(PERNERVE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 425, "Biochemical estimations on muscle biopsy specimens: Single fibre studies", 425, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:SINGLEFIBRESTUDIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 426, "Biochemical estimations on muscle biopsy specimens: Somatosensory study (limb-spine)", 426, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:SOMATOSENSORYSTUDY(LIMB-SPINE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 427, "Biochemical estimations on muscle biopsy specimens: Dystrophin estimation", 427, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:DYSTROPHINESTIMATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 428, "Biochemical estimations on muscle biopsy specimens: Tension/caffeine/halothane procedure in malignant hyperthermia", 428, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:TENSION/CAFFEINE/HALOTHANEPROCEDUREINMALIGNANTHYPERTHERMIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 429, "Biochemical estimations on muscle biopsy specimens: Electron microscopy", 429, "BIOCHEMICALESTIMATIONSONMUSCLEBIOPSYSPECIMENS:ELECTRONMICROSCOPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 430, "Major compartmental decompression", 430, "MAJORCOMPARTMENTALDECOMPRESSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 431, "Decompression operation: Fasciotomy only", 431, "DECOMPRESSIONOPERATION:FASCIOTOMYONLY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 362, "Arthroscopy (excluding after-care) (modifiers 0005 and 0013 not applicable)", 362, "ARTHROSCOPY(EXCLUDINGAFTER-CARE)(MODIFIERS0005AND0013NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 457, "Intrinsic tendon release per finger", 457, "INTRINSICTENDONRELEASEPERFINGER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 361, "Multiple intra-articular injections for rheumatoid arthritis (excluding after-care) (modifier 0005 not applicable): Additional (each)", 361, "MULTIPLEINTRA-ARTICULARINJECTIONSFORRHEUMATOIDARTHRITIS(EXCLUDINGAFTER-CARE)(MODIFIER0005NOTAPPLICABLE):ADDITIONAL(EACH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 359, "Aspiration of joint or intra-articular injection (not including after-care) (modifier 0005 not applicable)", 359, "ASPIRATIONOFJOINTORINTRA-ARTICULARINJECTION(NOTINCLUDINGAFTER-CARE)(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 290, "Osteotomy: Os Calcis (Dwyer operation)", 290, "OSTEOTOMY:OSCALCIS(DWYEROPERATION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 291, "Osteotomy: Metacarpal and phalanx: Corrective for malunion or rotation", 291, "OSTEOTOMY:METACARPALANDPHALANX:CORRECTIVEFORMALUNIONORROTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 292, "Rotational osteotomy of tibia and fibula - stand alone procedure", 292, "ROTATIONALOSTEOTOMYOFTIBIAANDFIBULA-STANDALONEPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 293, "Osteotomy: Rotation osteotomy of the Radius, Ulna or Humerus", 293, "OSTEOTOMY:ROTATIONOSTEOTOMYOFTHERADIUS,ULNAORHUMERUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 294, "Osteotomy: Single metatarsal", 294, "OSTEOTOMY:SINGLEMETATARSAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 295, "Osteotomy: Multiple metatarsal osteotomies", 295, "OSTEOTOMY:MULTIPLEMETATARSALOSTEOTOMIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 296, "Exostosis: Excision: Readily accessible sites", 296, "EXOSTOSIS:EXCISION:READILYACCESSIBLESITES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 297, "Exostosis: Excision: Less accessible sites", 297, "EXOSTOSIS:EXCISION:LESSACCESSIBLESITES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 298, "Needle Biopsy: Spine (no after-care) (modifier 0005 not applicable)", 298, "NEEDLEBIOPSY:SPINE(NOAFTER-CARE)(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 289, "Osteotomy: Knee region", 289, "OSTEOTOMY:KNEEREGION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 299, "Needle Biopsy: Other sites (no after-care) (modifier 0005 not applicable)", 299, "NEEDLEBIOPSY:OTHERSITES(NOAFTER-CARE)(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 301, "Biopsy: Open (modifier 0005 not applicable): Less accessible site", 301, "BIOPSY:OPEN(MODIFIER0005NOTAPPLICABLE):LESSACCESSIBLESITE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 302, "Joint: Dislocation: Clavicle either end", 302, "JOINT:DISLOCATION:CLAVICLEEITHEREND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 303, "Joint: Dislocation: Shoulder", 303, "JOINT:DISLOCATION:SHOULDER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 304, "Joint: Dislocation: Elbow", 304, "JOINT:DISLOCATION:ELBOW", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 305, "Joint: Dislocation: Wrist", 305, "JOINT:DISLOCATION:WRIST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 306, "Joint: Dislocation: Perilunar trans-scaphoid fracture dislocation", 306, "JOINT:DISLOCATION:PERILUNARTRANS-SCAPHOIDFRACTUREDISLOCATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 307, "Joint: Dislocation: Lunate", 307, "JOINT:DISLOCATION:LUNATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 308, "Joint: Dislocation: Carpo-metacarpo dislocation", 308, "JOINT:DISLOCATION:CARPO-METACARPODISLOCATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 309, "Joint: Dislocation: Metacarpo-phalangeal or interphalangeal (hand)", 309, "JOINT:DISLOCATION:METACARPO-PHALANGEALORINTERPHALANGEAL(HAND)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 300, "Biopsy: Open (modifier 0005 not applicable): Readily accessible site", 300, "BIOPSY:OPEN(MODIFIER0005NOTAPPLICABLE):READILYACCESSIBLESITE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 310, "Joint: Dislocation: Hip", 310, "JOINT:DISLOCATION:HIP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 288, "Osteotomy: Femoral: Proximal", 288, "OSTEOTOMY:FEMORAL:PROXIMAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 286, "Osteotomy: Sternum: Repair of pectus carinatum", 286, "OSTEOTOMY:STERNUM:REPAIROFPECTUSCARINATUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 266, "Fracture (reduction under general anaesthetic): Spine: With or without paralysis: Rest", 266, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):SPINE:WITHORWITHOUTPARALYSIS:REST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 267, "Fracture (reduction under general anaesthetic): Compression fracture: Cervical", 267, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):COMPRESSIONFRACTURE:CERVICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 268, "Fracture (reduction under general anaesthetic): Compression fracture: Rest", 268, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):COMPRESSIONFRACTURE:REST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 269, "Fracture (reduction under general anaesthetic): Spinous or transverse processes: Cervical", 269, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):SPINOUSORTRANSVERSEPROCESSES:CERVICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 270, "Fracture (reduction under general anaesthetic): Spinous or transverse processes: Rest", 270, "FRACTURE(REDUCTIONUNDERGENERALANAESTHETIC):SPINOUSORTRANSVERSEPROCESSES:REST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 271, "Fractures involving large joints (includes the item for the relative bone) (this item may not be used as a modifier)", 271, "FRACTURESINVOLVINGLARGEJOINTS(INCLUDESTHEITEMFORTHERELATIVEBONE)(THISITEMMAYNOTBEUSEDASAMODIFIER)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 272, "Percutaneous insertion plus subsequent removal of Kirschner wires or Steinmann pins (no after-care) (modifier 0005 not applicable)", 272, "PERCUTANEOUSINSERTIONPLUSSUBSEQUENTREMOVALOFKIRSCHNERWIRESORSTEINMANNPINS(NOAFTER-CARE)(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 273, "Bonegrafting or internal fixation for malunion or non-union: Femur, Tibia, Humerus, Radius and Ulna", 273, "BONEGRAFTINGORINTERNALFIXATIONFORMALUNIONORNON-UNION:FEMUR,TIBIA,HUMERUS,RADIUSANDULNA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 274, "Bonegrafting or internal fixation for malunion or non-union: Other bones", 274, "BONEGRAFTINGORINTERNALFIXATIONFORMALUNIONORNON-UNION:OTHERBONES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 287, "Osteotomy: Pelvic", 287, "OSTEOTOMY:PELVIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 275, "Resection of bone or tumour with or without grafting (benign)", 275, "RESECTIONOFBONEORTUMOURWITHORWITHOUTGRAFTING(BENIGN)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 277, "Grafts to cysts: Large bones", 277, "GRAFTSTOCYSTS:LARGEBONES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 278, "Grafts to cysts: Small bones", 278, "GRAFTSTOCYSTS:SMALLBONES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 279, "Grafts to cysts: Cartilage graft", 279, "GRAFTSTOCYSTS:CARTILAGEGRAFT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 280, "Grafts to cysts: Inter-metacarpal bone graft", 280, "GRAFTSTOCYSTS:INTER-METACARPALBONEGRAFT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 281, "Removal of autogenous bone for grafting (not subject to general modifier 0005)", 281, "REMOVALOFAUTOGENOUSBONEFORGRAFTING(NOTSUBJECTTOGENERALMODIFIER0005)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 282, "Acute or chronic osteomyelitis: Conservative treatment", 282, "ACUTEORCHRONICOSTEOMYELITIS:CONSERVATIVETREATMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 283, "Acute or chronic osteomyelitis: Operation: Tariff which would be applicable for compound fracture of the bone involved, including six weeks post-operative care", 283, "ACUTEORCHRONICOSTEOMYELITIS:OPERATION:TARIFFWHICHWOULDBEAPPLICABLEFORCOMPOUNDFRACTUREOFTHEBONEINVOLVED,INCLUDINGSIXWEEKSPOST-OPERATIVECARE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 284, "Acute or chronic osteomyelitis: Sternum sequestrectomy and drainage: Including six weeks after-care", 284, "ACUTEORCHRONICOSTEOMYELITIS:STERNUMSEQUESTRECTOMYANDDRAINAGE:INCLUDINGSIXWEEKSAFTER-CARE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 285, "Osteotomy: Sternum: Repair of pectus excavatum", 285, "OSTEOTOMY:STERNUM:REPAIROFPECTUSEXCAVATUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 276, "Resection of bone or tumour with or without grafting (malignant) - does not include digits", 276, "RESECTIONOFBONEORTUMOURWITHORWITHOUTGRAFTING(MALIGNANT)-DOESNOTINCLUDEDIGITS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 311, "Joint: Dislocation: Knee", 311, "JOINT:DISLOCATION:KNEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 312, "Joint: Dislocation: Patella", 312, "JOINT:DISLOCATION:PATELLA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 313, "Joint: Dislocation: Ankle", 313, "JOINT:DISLOCATION:ANKLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 339, "Arthroplasty: Excision medial or lateral end of clavicle", 339, "ARTHROPLASTY:EXCISIONMEDIALORLATERALENDOFCLAVICLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 340, "Shoulder: Acromioplasty", 340, "SHOULDER:ACROMIOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 341, "Shoulder: Partial replacement", 341, "SHOULDER:PARTIALREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 342, "Shoulder: Total replacement", 342, "SHOULDER:TOTALREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 343, "Elbow: Excision head of radius", 343, "ELBOW:EXCISIONHEADOFRADIUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 344, "Elbow: Excision", 344, "ELBOW:EXCISION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 345, "Elbow: Partial replacement", 345, "ELBOW:PARTIALREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 346, "Elbow: Total replacement", 346, "ELBOW:TOTALREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 347, "Wrist: Excision distal end of ulna", 347, "WRIST:EXCISIONDISTALENDOFULNA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 338, "Arthroplasty: Debridement large joints", 338, "ARTHROPLASTY:DEBRIDEMENTLARGEJOINTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 348, "Wrist: Excision single bone", 348, "WRIST:EXCISIONSINGLEBONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 350, "Wrist: Total replacement", 350, "WRIST:TOTALREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 351, "Digital Joint: Total replacement", 351, "DIGITALJOINT:TOTALREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 352, "Hip: Total replacement", 352, "HIP:TOTALREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 353, "Hip: Prosthetic replacement of femoral head", 353, "HIP:PROSTHETICREPLACEMENTOFFEMORALHEAD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 354, "Hip: Girdlestone", 354, "HIP:GIRDLESTONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 355, "Knee: Partial replacement", 355, "KNEE:PARTIALREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 356, "Knee: Total replacement", 356, "KNEE:TOTALREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 357, "Ankle: Total replacement", 357, "ANKLE:TOTALREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 358, "Ankle: Astragalectomy", 358, "ANKLE:ASTRAGALECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 349, "Wrist: Excision proximal row", 349, "WRIST:EXCISIONPROXIMALROW", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 337, "Arthrodesis: Mid-tarsal wedge resection", 337, "ARTHRODESIS:MID-TARSALWEDGERESECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 336, "Arthrodesis: Stabilisation of foot (triple-arthrodesis)", 336, "ARTHRODESIS:STABILISATIONOFFOOT(TRIPLE-ARTHRODESIS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 335, "Arthrodesis: Sub-talar", 335, "ARTHRODESIS:SUB-TALAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 314, "Joint: Dislocation: Sub-Talar dislocation", 314, "JOINT:DISLOCATION:SUB-TALARDISLOCATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 315, "Joint: Dislocation: Intertarsal or Tarsometatarsal or Mid-tarsal", 315, "JOINT:DISLOCATION:INTERTARSALORTARSOMETATARSALORMID-TARSAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 316, "Joint: Dislocation: Meta-tarsophalangeal or interphalangeal joints (foot)", 316, "JOINT:DISLOCATION:META-TARSOPHALANGEALORINTERPHALANGEALJOINTS(FOOT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 317, "Joint: Dislocation: Spine with or without paralysis", 317, "JOINT:DISLOCATION:SPINEWITHORWITHOUTPARALYSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 318, "Operations for dislocations: Recurrent dislocation of shoulder", 318, "OPERATIONSFORDISLOCATIONS:RECURRENTDISLOCATIONOFSHOULDER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 319, "Operations for dislocations: Recurrent dislocation of all other joints", 319, "OPERATIONSFORDISLOCATIONS:RECURRENTDISLOCATIONOFALLOTHERJOINTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 320, "Capsulotomy or arthrotomy or biopsy or drainage of joint: Small joint (including three weeks after-care)", 320, "CAPSULOTOMYORARTHROTOMYORBIOPSYORDRAINAGEOFJOINT:SMALLJOINT(INCLUDINGTHREEWEEKSAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 321, "Capsulotomy or arthrotomy or biopsy or drainage of joint: Large joint (including three weeks after-care)", 321, "CAPSULOTOMYORARTHROTOMYORBIOPSYORDRAINAGEOFJOINT:LARGEJOINT(INCLUDINGTHREEWEEKSAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 322, "Capsulectomy digital joint", 322, "CAPSULECTOMYDIGITALJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 323, "Multiple percutaneous capsulotomies of metacarpophalangeal joints", 323, "MULTIPLEPERCUTANEOUSCAPSULOTOMIESOFMETACARPOPHALANGEALJOINTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 324, "Release of digital joint contracture", 324, "RELEASEOFDIGITALJOINTCONTRACTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 325, "Synovectomy: Digital joint", 325, "SYNOVECTOMY:DIGITALJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 326, "Synovectomy: Large joint", 326, "SYNOVECTOMY:LARGEJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 327, "Tendon synovectomy", 327, "TENDONSYNOVECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 328, "Arthrodesis: Shoulder", 328, "ARTHRODESIS:SHOULDER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 329, "Arthrodesis: Elbow", 329, "ARTHRODESIS:ELBOW", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 330, "Arthrodesis: Wrist", 330, "ARTHRODESIS:WRIST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 331, "Arthrodesis: Digital joint", 331, "ARTHRODESIS:DIGITALJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 332, "Arthrodesis: Hip", 332, "ARTHRODESIS:HIP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 333, "Arthrodesis: Knee", 333, "ARTHRODESIS:KNEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 334, "Arthrodesis: Ankle", 334, "ARTHRODESIS:ANKLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 360, "Multiple intra-articular injections for rheumatoid arthritis (excluding after-care) (modifier 0005 not applicable): First joint", 360, "MULTIPLEINTRA-ARTICULARINJECTIONSFORRHEUMATOIDARTHRITIS(EXCLUDINGAFTER-CARE)(MODIFIER0005NOTAPPLICABLE):FIRSTJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 844, "Coarctation of aorta", 844, "COARCTATIONOFAORTA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 834, "Atherectomy: Single lesion: First cardiologist", 834, "ATHERECTOMY:SINGLELESION:FIRSTCARDIOLOGIST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 846, "Mitral valvotomy: Closed heart technique", 846, "MITRALVALVOTOMY:CLOSEDHEARTTECHNIQUE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1355, "Destruction of condylomata/chemo- or cryotherapy: Limited number (see item 2317)", 1355, "DESTRUCTIONOFCONDYLOMATA/CHEMO-ORCRYOTHERAPY:LIMITEDNUMBER(SEEITEM2317)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1356, "Destruction of condylomata/chemo-or cryotherapy: Multiple extensive", 1356, "DESTRUCTIONOFCONDYLOMATA/CHEMO-ORCRYOTHERAPY:MULTIPLEEXTENSIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1357, "Electrodesiccation: Limited number", 1357, "ELECTRODESICCATION:LIMITEDNUMBER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1358, "Electrodesiccation: Multiple extensive", 1358, "ELECTRODESICCATION:MULTIPLEEXTENSIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1359, "Ligation of abnormal venous drainage", 1359, "LIGATIONOFABNORMALVENOUSDRAINAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1360, "Circumcision: Clamp procedure", 1360, "CIRCUMCISION:CLAMPPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1361, "Circumcision: Surgical excision other than by clamp or dorsal slit, any age", 1361, "CIRCUMCISION:SURGICALEXCISIONOTHERTHANBYCLAMPORDORSALSLIT,ANYAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1362, "Circumcision: Dorsal slit of prepuce (independent procedure)", 1362, "CIRCUMCISION:DORSALSLITOFPREPUCE(INDEPENDENTPROCEDURE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1363, "Reconstructive operation of penis: Reconstructive operation for insertion of prostheses", 1363, "RECONSTRUCTIVEOPERATIONOFPENIS:RECONSTRUCTIVEOPERATIONFORINSERTIONOFPROSTHESES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1354, "Biopsy of penis (independent procedure)", 1354, "BIOPSYOFPENIS(INDEPENDENTPROCEDURE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1364, "Reconstructive operation of penis: For straightening of chordee e.g. hypospadias with or without mobilisation of urethra", 1364, "RECONSTRUCTIVEOPERATIONOFPENIS:FORSTRAIGHTENINGOFCHORDEEE.G.HYPOSPADIASWITHORWITHOUTMOBILISATIONOFURETHRA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1366, "Reconstructive operation of penis: For injury: Including fracture of penis and skin graft, if required", 1366, "RECONSTRUCTIVEOPERATIONOFPENIS:FORINJURY:INCLUDINGFRACTUREOFPENISANDSKINGRAFT,IFREQUIRED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1367, "Reconstructive operation of penis: For epispadias distal to the external sphincter", 1367, "RECONSTRUCTIVEOPERATIONOFPENIS:FOREPISPADIASDISTALTOTHEEXTERNALSPHINCTER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1368, "Reconstructive operation for epispadias with incontinence", 1368, "RECONSTRUCTIVEOPERATIONFOREPISPADIASWITHINCONTINENCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1369, "Induction of artificial erection", 1369, "INDUCTIONOFARTIFICIALERECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1370, "Hypospadias: Urethral reconstruction", 1370, "HYPOSPADIAS:URETHRALRECONSTRUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1371, "Hypospadias: Subsequent procedures for repair of urethra: Total", 1371, "HYPOSPADIAS:SUBSEQUENTPROCEDURESFORREPAIROFURETHRA:TOTAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1372, "Hypospadias: Urethraplasty: Complete, one stage for hypospadias", 1372, "HYPOSPADIAS:URETHRAPLASTY:COMPLETE,ONESTAGEFORHYPOSPADIAS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1373, "Total amputation of penis: Without gland dissection", 1373, "TOTALAMPUTATIONOFPENIS:WITHOUTGLANDDISSECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1374, "Total amputation of penis: With gland-dissection", 1374, "TOTALAMPUTATIONOFPENIS:WITHGLAND-DISSECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1365, "Reconstructive operation of penis: For straightening of chordee with transplantation of prepuce", 1365, "RECONSTRUCTIVEOPERATIONOFPENIS:FORSTRAIGHTENINGOFCHORDEEWITHTRANSPLANTATIONOFPREPUCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1375, "Partial amputation of penis: With gland-dissection", 1375, "PARTIALAMPUTATIONOFPENIS:WITHGLAND-DISSECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1353, "Closure of urethrovaginal fistula: Including diversionary procedures", 1353, "CLOSUREOFURETHROVAGINALFISTULA:INCLUDINGDIVERSIONARYPROCEDURES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1351, "Urethral meatoplasty", 1351, "URETHRALMEATOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1331, "Reconstruction or repair of male anterior urethra (one stage)", 1331, "RECONSTRUCTIONORREPAIROFMALEANTERIORURETHRA(ONESTAGE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1332, "Reconstruction or repair of prostatic or membranous urethra: First stage", 1332, "RECONSTRUCTIONORREPAIROFPROSTATICORMEMBRANOUSURETHRA:FIRSTSTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1333, "Reconstruction or repair of prostatic or membranous urethra: Second stage", 1333, "RECONSTRUCTIONORREPAIROFPROSTATICORMEMBRANOUSURETHRA:SECONDSTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1334, "Reconstruction or repair of prostatic or membranous urethra: If done in one stage", 1334, "RECONSTRUCTIONORREPAIROFPROSTATICORMEMBRANOUSURETHRA:IFDONEINONESTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1335, "Urethral diverticulectomy: Male or female", 1335, "URETHRALDIVERTICULECTOMY:MALEORFEMALE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1336, "Peri-urethral teflon injection: Male or female - fee as for cystoscopy (item 1949) plus 42,00 clinical procedure units", 1336, "PERI-URETHRALTEFLONINJECTION:MALEORFEMALE-FEEASFORCYSTOSCOPY(ITEM1949)PLUS42,00CLINICALPROCEDUREUNITS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1337, "Marsupialisation of urethral diverticula: Male or female", 1337, "MARSUPIALISATIONOFURETHRALDIVERTICULA:MALEORFEMALE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1338, "Total urethrectomy: Female", 1338, "TOTALURETHRECTOMY:FEMALE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1339, "Total urethrectomy: Male", 1339, "TOTALURETHRECTOMY:MALE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1352, "Closure of urethrostomy or urethro-cutaneous fistula (independent procedure)", 1352, "CLOSUREOFURETHROSTOMYORURETHRO-CUTANEOUSFISTULA(INDEPENDENTPROCEDURE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1340, "Drainage of simple localised perineal urinary extravasation", 1340, "DRAINAGEOFSIMPLELOCALISEDPERINEALURINARYEXTRAVASATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1342, "Fulguration for urethral caruncle or polyp", 1342, "FULGURATIONFORURETHRALCARUNCLEORPOLYP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1343, "Excision of urethral caruncle", 1343, "EXCISIONOFURETHRALCARUNCLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1344, "Simple urethral meatotomy", 1344, "SIMPLEURETHRALMEATOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1345, "Incision of deep peri-urethral abscess: Female", 1345, "INCISIONOFDEEPPERI-URETHRALABSCESS:FEMALE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1346, "Incision of deep peri-urethral abscess: Male", 1346, "INCISIONOFDEEPPERI-URETHRALABSCESS:MALE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1347, "Badenoch pull-through for intractable stricture or incontinence", 1347, "BADENOCHPULL-THROUGHFORINTRACTABLESTRICTUREORINCONTINENCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1348, "External sphincterotomy", 1348, "EXTERNALSPHINCTEROTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1349, "Drainage of Skene gland abscess or cyst", 1349, "DRAINAGEOFSKENEGLANDABSCESSORCYST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1350, "Operation for correction of male urinary incontinence with or without introduction of prostheses (excluding cost of prostheses)", 1350, "OPERATIONFORCORRECTIONOFMALEURINARYINCONTINENCEWITHORWITHOUTINTRODUCTIONOFPROSTHESES(EXCLUDINGCOSTOFPROSTHESES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1341, "Drainage of extensive perineal and/or abdominal urinary extravasation", 1341, "DRAINAGEOFEXTENSIVEPERINEALAND/ORABDOMINALURINARYEXTRAVASATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1330, "Reconstruction of female urethra", 1330, "RECONSTRUCTIONOFFEMALEURETHRA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1376, "Partial amputation of penis: Without gland-dissection", 1376, "PARTIALAMPUTATIONOFPENIS:WITHOUTGLAND-DISSECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1378, "Priapism operation: Irrigation of corpora cavernosa for priapism", 1378, "PRIAPISMOPERATION:IRRIGATIONOFCORPORACAVERNOSAFORPRIAPISM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1403, "Incision and drainage of testis or epididymis e.g. abscess or haematoma", 1403, "INCISIONANDDRAINAGEOFTESTISOREPIDIDYMISE.G.ABSCESSORHAEMATOMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1404, "Excision of local lesion of testis or epididymis", 1404, "EXCISIONOFLOCALLESIONOFTESTISOREPIDIDYMIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1405, "Vaso-vasostomy: Unilateral", 1405, "VASO-VASOSTOMY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1406, "Vaso-vasostomy: Bilateral", 1406, "VASO-VASOSTOMY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1407, "Epididymo-vasostomy: Unilateral", 1407, "EPIDIDYMO-VASOSTOMY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1408, "Epididymo-vasostomy: Bilateral", 1408, "EPIDIDYMO-VASOSTOMY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1409, "Incision and drainage of scrotal wall abscess", 1409, "INCISIONANDDRAINAGEOFSCROTALWALLABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1410, "Excision of Mullerian duct cyst", 1410, "EXCISIONOFMULLERIANDUCTCYST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1411, "Excision of lesion of spermatic cord", 1411, "EXCISIONOFLESIONOFSPERMATICCORD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1402, "Suture or repair of testicular injury", 1402, "SUTUREORREPAIROFTESTICULARINJURY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1412, "Seminal Vesiculectomy", 1412, "SEMINALVESICULECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1414, "Biopsy prostate: Incisional, any approach", 1414, "BIOPSYPROSTATE:INCISIONAL,ANYAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1415, "Transurethral drainage of prostatic abscess", 1415, "TRANSURETHRALDRAINAGEOFPROSTATICABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1416, "Perineal drainage of prostatic abscess", 1416, "PERINEALDRAINAGEOFPROSTATICABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1417, "Trans-urethral cryo-surgical removal of prostate", 1417, "TRANS-URETHRALCRYO-SURGICALREMOVALOFPROSTATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1418, "Trans-urethral resection of prostate", 1418, "TRANS-URETHRALRESECTIONOFPROSTATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1419, "Trans-urethral resection of residual prostatic tissue 90 days post-operative or longer", 1419, "TRANS-URETHRALRESECTIONOFRESIDUALPROSTATICTISSUE90DAYSPOST-OPERATIVEORLONGER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1420, "Trans-urethral resection of post-operative bladder neck contracture", 1420, "TRANS-URETHRALRESECTIONOFPOST-OPERATIVEBLADDERNECKCONTRACTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1421, "Prostatectomy: Perineal: Sub-total", 1421, "PROSTATECTOMY:PERINEAL:SUB-TOTAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1422, "Prostatectomy: Perineal: Radical", 1422, "PROSTATECTOMY:PERINEAL:RADICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1413, "Biopsy prostate: Needle or punch, single or multiple, any approach", 1413, "BIOPSYPROSTATE:NEEDLEORPUNCH,SINGLEORMULTIPLE,ANYAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1377, "Injection procedure for Peyronie's disease", 1377, "INJECTIONPROCEDUREFORPEYRONIE'SDISEASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1401, "Insertion of testicular prosthesis: Independent procedure (exclusive of cost of material)", 1401, "INSERTIONOFTESTICULARPROSTHESIS:INDEPENDENTPROCEDURE(EXCLUSIVEOFCOSTOFMATERIAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1399, "Vasogram, seminal vesiculogram: Unilateral", 1399, "VASOGRAM,SEMINALVESICULOGRAM:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1379, "Priapism operation: Shunt procedure: Any type", 1379, "PRIAPISMOPERATION:SHUNTPROCEDURE:ANYTYPE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1380, "Priapism operation: Stab shunt", 1380, "PRIAPISMOPERATION:STABSHUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1381, "Testis biopsy: Needle (independent procedure)", 1381, "TESTISBIOPSY:NEEDLE(INDEPENDENTPROCEDURE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1382, "Testis biopsy: Incisional: Independent procedure: Unilateral", 1382, "TESTISBIOPSY:INCISIONAL:INDEPENDENTPROCEDURE:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1383, "Testis biopsy: Incisional: Independent procedure: Bilateral", 1383, "TESTISBIOPSY:INCISIONAL:INDEPENDENTPROCEDURE:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1384, "Epididymis biopsy: Needle", 1384, "EPIDIDYMISBIOPSY:NEEDLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1385, "Puncture aspiration hydrocele with or without injection of medication", 1385, "PUNCTUREASPIRATIONHYDROCELEWITHORWITHOUTINJECTIONOFMEDICATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1386, "Operation for maldescended testicle: Including herniotomy", 1386, "OPERATIONFORMALDESCENDEDTESTICLE:INCLUDINGHERNIOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1387, "Operation for torsion appendix testis", 1387, "OPERATIONFORTORSIONAPPENDIXTESTIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1400, "Vasogram, seminal vesiculogram: Bilateral", 1400, "VASOGRAM,SEMINALVESICULOGRAM:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1388, "Operation for torsion testis with fixation of contralateral testis", 1388, "OPERATIONFORTORSIONTESTISWITHFIXATIONOFCONTRALATERALTESTIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1390, "Orchidectomy (total or subcapsular): Bilateral", 1390, "ORCHIDECTOMY(TOTALORSUBCAPSULAR):BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1391, "Radical operation for malignant testis: Excluding gland dissection", 1391, "RADICALOPERATIONFORMALIGNANTTESTIS:EXCLUDINGGLANDDISSECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1392, "Operation for hydrocele or spermatocele", 1392, "OPERATIONFORHYDROCELEORSPERMATOCELE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1393, "Varicocelectomy", 1393, "VARICOCELECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1394, "Abdominal ligation of spermatic vein for varicocele", 1394, "ABDOMINALLIGATIONOFSPERMATICVEINFORVARICOCELE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1395, "Epididymectomy: Unilateral", 1395, "EPIDIDYMECTOMY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1396, "Epididymectomy: Bilateral", 1396, "EPIDIDYMECTOMY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1397, "Vasectomy: Unilateral or bilateral (no extra fee to be charged if done in combination with prostatectomy)", 1397, "VASECTOMY:UNILATERALORBILATERAL(NOEXTRAFEETOBECHARGEDIFDONEINCOMBINATIONWITHPROSTATECTOMY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1398, "Vasotomy: Unilateral or bilateral", 1398, "VASOTOMY:UNILATERALORBILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1389, "Orchidectomy (total or subcapsular): Unilateral", 1389, "ORCHIDECTOMY(TOTALORSUBCAPSULAR):UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1329, "Urethraplasty: Pendulous urethra: Second stage", 1329, "URETHRAPLASTY:PENDULOUSURETHRA:SECONDSTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1328, "Urethraplasty: Pendulous urethra: First stage", 1328, "URETHRAPLASTY:PENDULOUSURETHRA:FIRSTSTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1327, "External urethrotomy: Pendulous urethra (anterior)", 1327, "EXTERNALURETHROTOMY:PENDULOUSURETHRA(ANTERIOR)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1258, "With ureteric meatotomy: Unilateral or bilateral", 1258, "WITHURETERICMEATOTOMY:UNILATERALORBILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1259, "And cold biopsy", 1259, "ANDCOLDBIOPSY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1260, "With cryosurgery for bladder or prostatic disease", 1260, "WITHCRYOSURGERYFORBLADDERORPROSTATICDISEASE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1261, "With incision fulguration, or resection of bladder neck and/or posterior urethra for congenital valves or obstructive hypertrophic bladder neck in a child", 1261, "WITHINCISIONFULGURATION,ORRESECTIONOFBLADDERNECKAND/ORPOSTERIORURETHRAFORCONGENITALVALVESOROBSTRUCTIVEHYPERTROPHICBLADDERNECKINACHILD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1262, "Ultraviolet cystoscopy for bladder tumour", 1262, "ULTRAVIOLETCYSTOSCOPYFORBLADDERTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1263, "Optic urethrotomy", 1263, "OPTICURETHROTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1264, "Transurethral resection of ejaculatory duct", 1264, "TRANSURETHRALRESECTIONOFEJACULATORYDUCT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1265, "Internal urethrotomy: Female", 1265, "INTERNALURETHROTOMY:FEMALE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1266, "Internal urethrotomy: Male", 1266, "INTERNALURETHROTOMY:MALE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1257, "And catheterisation of the ejaculatory duct", 1257, "ANDCATHETERISATIONOFTHEEJACULATORYDUCT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1267, "Transurethral resection of bladder tumour", 1267, "TRANSURETHRALRESECTIONOFBLADDERTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1269, "Transurethral resection of bladder neck: Female or child", 1269, "TRANSURETHRALRESECTIONOFBLADDERNECK:FEMALEORCHILD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1270, "Transurethral resection of bladder neck: Male", 1270, "TRANSURETHRALRESECTIONOFBLADDERNECK:MALE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1271, "Litholapaxy", 1271, "LITHOLAPAXY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1272, "Cystometrogram", 1272, "CYSTOMETROGRAM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1273, "Flometric bladder, studies with videocystograph", 1273, "FLOMETRICBLADDER,STUDIESWITHVIDEOCYSTOGRAPH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1274, "Without videocystograph", 1274, "WITHOUTVIDEOCYSTOGRAPH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1275, "Voiding cysto-urethrogram", 1275, "VOIDINGCYSTO-URETHROGRAM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1276, "Rigiscan examination", 1276, "RIGISCANEXAMINATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1277, "Percutaneous aspiration of bladder", 1277, "PERCUTANEOUSASPIRATIONOFBLADDER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1268, "Transurethral resection of bladder tumours: Large multiple tumours", 1268, "TRANSURETHRALRESECTIONOFBLADDERTUMOURS:LARGEMULTIPLETUMOURS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1278, "Bladder catheterisation: Male (not at operation)", 1278, "BLADDERCATHETERISATION:MALE(NOTATOPERATION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1256, "And control of haemorrhage and blood clot evacuation", 1256, "ANDCONTROLOFHAEMORRHAGEANDBLOODCLOTEVACUATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1254, "With removal of foreign body or calculus from urethra or bladder", 1254, "WITHREMOVALOFFOREIGNBODYORCALCULUSFROMURETHRAORBLADDER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1234, "Transuretero-ureterostomy", 1234, "TRANSURETERO-URETEROSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1235, "Closure of ureteric fistula", 1235, "CLOSUREOFURETERICFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1236, "Immediate deligation of ureter", 1236, "IMMEDIATEDELIGATIONOFURETER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1237, "Ureterolysis for retrocaval ureter with anastomosis", 1237, "URETEROLYSISFORRETROCAVALURETERWITHANASTOMOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1238, "Uretero-pyelostomy", 1238, "URETERO-PYELOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1239, "Uretero-neo-cystostomy: Unilateral", 1239, "URETERO-NEO-CYSTOSTOMY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1240, "Uretero-neo-cystostomy: Bilateral", 1240, "URETERO-NEO-CYSTOSTOMY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1241, "Uretero-neo-cystostomy: With Boariplasty", 1241, "URETERO-NEO-CYSTOSTOMY:WITHBOARIPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1242, "Uretero-sigmoidostomy with rectal bladder and colostomy", 1242, "URETERO-SIGMOIDOSTOMYWITHRECTALBLADDERANDCOLOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1255, "With fulguration or treatment of minor lesions, with or without biopsy", 1255, "WITHFULGURATIONORTREATMENTOFMINORLESIONS,WITHORWITHOUTBIOPSY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 845, "Systemo-pulmonary anastomosis", 845, "SYSTEMO-PULMONARYANASTOMOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1245, "Replacement of ureter by bowel segment: Bilateral", 1245, "REPLACEMENTOFURETERBYBOWELSEGMENT:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1246, "Ureterostomy-in-situ: Unilateral", 1246, "URETEROSTOMY-IN-SITU:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1247, "Ureterostomy-in-situ: Bilateral", 1247, "URETEROSTOMY-IN-SITU:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1248, "J J Stent catheter", 1248, "JJSTENTCATHETER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1249, "With hydrodilatation of the bladder for interstitial cystitis", 1249, "WITHHYDRODILATATIONOFTHEBLADDERFORINTERSTITIALCYSTITIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1250, "Uretroscopy", 1250, "URETROSCOPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1251, "And bilateral ureteric catheterisation with differential function studies requiring additional attention time", 1251, "ANDBILATERALURETERICCATHETERISATIONWITHDIFFERENTIALFUNCTIONSTUDIESREQUIRINGADDITIONALATTENTIONTIME", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1252, "With dilatation of the ureter or ureters", 1252, "WITHDILATATIONOFTHEURETERORURETERS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1253, "With manipulation of ureteral calculus", 1253, "WITHMANIPULATIONOFURETERALCALCULUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1244, "Replacement of ureter by bowel segment: Unilateral", 1244, "REPLACEMENTOFURETERBYBOWELSEGMENT:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1279, "Bladder catheterisation: Female (not at operation)", 1279, "BLADDERCATHETERISATION:FEMALE(NOTATOPERATION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1280, "Percutaneous cystostomy", 1280, "PERCUTANEOUSCYSTOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1281, "Instillation of radio-opaque material for cystography or urethrocystography", 1281, "INSTILLATIONOFRADIO-OPAQUEMATERIALFORCYSTOGRAPHYORURETHROCYSTOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1307, "Reconstruction of ectopic bladder exclusive of orthopaedic operation (if required): Subsequent", 1307, "RECONSTRUCTIONOFECTOPICBLADDEREXCLUSIVEOFORTHOPAEDICOPERATION(IFREQUIRED):SUBSEQUENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1308, "Cutaneous vesicostomy", 1308, "CUTANEOUSVESICOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1309, "Cystoplasty, cysto-urethraplasty, vesicolysis", 1309, "CYSTOPLASTY,CYSTO-URETHRAPLASTY,VESICOLYSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1310, "Operation for ruptured bladder", 1310, "OPERATIONFORRUPTUREDBLADDER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1311, "Enterocystoplasty plus bowel anastomosis", 1311, "ENTEROCYSTOPLASTYPLUSBOWELANASTOMOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1312, "Cysto-lithotomy", 1312, "CYSTO-LITHOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1313, "Excision of patent-urachus or urachal cyst", 1313, "EXCISIONOFPATENT-URACHUSORURACHALCYST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1314, "Drainage of perivesical or prevesical abscess", 1314, "DRAINAGEOFPERIVESICALORPREVESICALABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1315, "Evacuation of clots from bladder: Other than post-operative", 1315, "EVACUATIONOFCLOTSFROMBLADDER:OTHERTHANPOST-OPERATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1306, "Reconstruction of ectopic bladder exclusive of orthopaedic operation (if required): Initial", 1306, "RECONSTRUCTIONOFECTOPICBLADDEREXCLUSIVEOFORTHOPAEDICOPERATION(IFREQUIRED):INITIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1316, "Evacuation of clots from bladder: Post-operative", 1316, "EVACUATIONOFCLOTSFROMBLADDER:POST-OPERATIVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1318, "Bladder neck plasty: Male", 1318, "BLADDERNECKPLASTY:MALE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1319, "Bladder neck plasty: Female", 1319, "BLADDERNECKPLASTY:FEMALE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1320, "Open biopsy of urethra: Male", 1320, "OPENBIOPSYOFURETHRA:MALE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1321, "Open biopsy of urethra: Female", 1321, "OPENBIOPSYOFURETHRA:FEMALE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1322, "Dilatation of urethra stricture: By passage sound: Initial (male)", 1322, "DILATATIONOFURETHRASTRICTURE:BYPASSAGESOUND:INITIAL(MALE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1323, "Dilatation of urethra stricture: By passage sound: Subsequent (male)", 1323, "DILATATIONOFURETHRASTRICTURE:BYPASSAGESOUND:SUBSEQUENT(MALE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1324, "Dilatation of urethra stricture: By passage sound: By passage of filiform and follower (male)", 1324, "DILATATIONOFURETHRASTRICTURE:BYPASSAGESOUND:BYPASSAGEOFFILIFORMANDFOLLOWER(MALE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1325, "Dilatation of female urethra", 1325, "DILATATIONOFFEMALEURETHRA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1326, "Urethrorraphy: Suture of urethral wound or injury", 1326, "URETHRORRAPHY:SUTUREOFURETHRALWOUNDORINJURY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1317, "Simple bladder lavage: Including catheterisation", 1317, "SIMPLEBLADDERLAVAGE:INCLUDINGCATHETERISATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1305, "Open operation for ureterocele: Bilateral", 1305, "OPENOPERATIONFORURETEROCELE:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1304, "Open operation for ureterocele: Unilateral", 1304, "OPENOPERATIONFORURETEROCELE:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1303, "Vesico-urethropexy with rectus sling", 1303, "VESICO-URETHROPEXYWITHRECTUSSLING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1282, "Instillation of anti-carcinogenic agent including retention time, but not cost of material or hydro-dilatation of bladder", 1282, "INSTILLATIONOFANTI-CARCINOGENICAGENTINCLUDINGRETENTIONTIME,BUTNOTCOSTOFMATERIALORHYDRO-DILATATIONOFBLADDER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1283, "Cystoscopy: Hospital equipment", 1283, "CYSTOSCOPY:HOSPITALEQUIPMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1284, "And retrograde pyelography or retrograde ureteral catheterisation: Unilateral or bilateral", 1284, "ANDRETROGRADEPYELOGRAPHYORRETROGRADEURETERALCATHETERISATION:UNILATERALORBILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1285, "Total cystectomy: After previous urinary diversion", 1285, "TOTALCYSTECTOMY:AFTERPREVIOUSURINARYDIVERSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1286, "Total cystectomy: With conduit construction and ureteric anastomosis", 1286, "TOTALCYSTECTOMY:WITHCONDUITCONSTRUCTIONANDURETERICANASTOMOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1287, "Cystectomy with substitute bowel bladder construction with anastomosis to urethra or trigone", 1287, "CYSTECTOMYWITHSUBSTITUTEBOWELBLADDERCONSTRUCTIONWITHANASTOMOSISTOURETHRAORTRIGONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1288, "Cystectomy with continent urinary diversion (e.g. Kocks Pouch)", 1288, "CYSTECTOMYWITHCONTINENTURINARYDIVERSION(E.G.KOCKSPOUCH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1289, "Partial cystectomy", 1289, "PARTIALCYSTECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1290, "Continent urinary diversion without cystectomy (e.g. Kocks Pouch)", 1290, "CONTINENTURINARYDIVERSIONWITHOUTCYSTECTOMY(E.G.KOCKSPOUCH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1291, "Radical total cystectomy with block dissection, ileal conduit and transplantation of ureters", 1291, "RADICALTOTALCYSTECTOMYWITHBLOCKDISSECTION,ILEALCONDUITANDTRANSPLANTATIONOFURETERS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1292, "Reversion of temporary conduit", 1292, "REVERSIONOFTEMPORARYCONDUIT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1293, "Partial cystectomy with uretero-neo-cystostomy", 1293, "PARTIALCYSTECTOMYWITHURETERO-NEO-CYSTOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1294, "Reversion of conduit with major urinary tract reconstruction", 1294, "REVERSIONOFCONDUITWITHMAJORURINARYTRACTRECONSTRUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1295, "Diverticulectomy (independent procedure): Multiple or single", 1295, "DIVERTICULECTOMY(INDEPENDENTPROCEDURE):MULTIPLEORSINGLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1296, "Suprapubic cystostomy", 1296, "SUPRAPUBICCYSTOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1297, "Abdomino-neo-urethrostomy", 1297, "ABDOMINO-NEO-URETHROSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1298, "Open loop fulguration or excision of bladder tumour", 1298, "OPENLOOPFULGURATIONOREXCISIONOFBLADDERTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1299, "Operation for vesico-vaginal or urethra-vaginal fistula", 1299, "OPERATIONFORVESICO-VAGINALORURETHRA-VAGINALFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1300, "Repair of vesico vaginal fistula: Abdominal approach", 1300, "REPAIROFVESICOVAGINALFISTULA:ABDOMINALAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1301, "Vesico-plication (Hamilton Stewart)", 1301, "VESICO-PLICATION(HAMILTONSTEWART)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1302, "Vesico-urethropexy for correction or urinary incontinence: Abdominal approach", 1302, "VESICO-URETHROPEXYFORCORRECTIONORURINARYINCONTINENCE:ABDOMINALAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1423, "Pelvic lymph adenectomy", 1423, "PELVICLYMPHADENECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1424, "Supra-pelvic, transversical", 1424, "SUPRA-PELVIC,TRANSVERSICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1425, "Retropubic: Sub-total", 1425, "RETROPUBIC:SUB-TOTAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1426, "Retropubic: Radical", 1426, "RETROPUBIC:RADICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1548, "Non-surgical endometrial destruction, any method, not utilising hysteroscopic instrumentation or assistance", 1548, "NON-SURGICALENDOMETRIALDESTRUCTION,ANYMETHOD,NOTUTILISINGHYSTEROSCOPICINSTRUMENTATIONORASSISTANCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1549, "Surgical endometrial destruction: Any method, utilising hysteroscopic instrumentation or assistance", 1549, "SURGICALENDOMETRIALDESTRUCTION:ANYMETHOD,UTILISINGHYSTEROSCOPICINSTRUMENTATIONORASSISTANCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1550, "Laparoscopy by second gynaecologist during endometrial ablation (item 2479)", 1550, "LAPAROSCOPYBYSECONDGYNAECOLOGISTDURINGENDOMETRIALABLATION(ITEM2479)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1551, "Insufflation Fallopian tubes (excluding after-care)", 1551, "INSUFFLATIONFALLOPIANTUBES(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1552, "Salpingolysis", 1552, "SALPINGOLYSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1553, "Salpingostomy", 1553, "SALPINGOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1554, "Tuboplasty tubal anastomosis or re-implantation", 1554, "TUBOPLASTYTUBALANASTOMOSISORRE-IMPLANTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1555, "Ectopic pregnancy under 12 weeks (salpingectomy)", 1555, "ECTOPICPREGNANCYUNDER12WEEKS(SALPINGECTOMY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1556, "Ectopic pregnancy under 12 weeks (salpingostomy)", 1556, "ECTOPICPREGNANCYUNDER12WEEKS(SALPINGOSTOMY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1547, "Abdominal hysterotomy with or without sterilisation", 1547, "ABDOMINALHYSTEROTOMYWITHORWITHOUTSTERILISATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1557, "Ectopic pregnancy - after 12 weeks", 1557, "ECTOPICPREGNANCY-AFTER12WEEKS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1559, "Diagnostic laparoscopy (excluding after-care)", 1559, "DIAGNOSTICLAPAROSCOPY(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1560, "Laparoscopy: Plus aspiration of a cyst (excluding after-care)", 1560, "LAPAROSCOPY:PLUSASPIRATIONOFACYST(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1561, "Laparoscopy: Plus sterilisation", 1561, "LAPAROSCOPY:PLUSSTERILISATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1562, "Laparoscopy: Plus biopsy (excluding after-care)", 1562, "LAPAROSCOPY:PLUSBIOPSY(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1563, "Laparoscopy: Plus ablation of endometriosis by laser, harmonic scalpel or cautery", 1563, "LAPAROSCOPY:PLUSABLATIONOFENDOMETRIOSISBYLASER,HARMONICSCALPELORCAUTERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1564, "Laparoscopy: Plus cauterisation and/or lysis of adhesions", 1564, "LAPAROSCOPY:PLUSCAUTERISATIONAND/ORLYSISOFADHESIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1565, "Laparoscopy: Plus aspiration of follicles (IVF) (excluding after-care)", 1565, "LAPAROSCOPY:PLUSASPIRATIONOFFOLLICLES(IVF)(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1566, "Laparoscopy: Plus ovarian drilling", 1566, "LAPAROSCOPY:PLUSOVARIANDRILLING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1567, "Laparoscopy: Plus Gamete intra fallopian tube transfer (includes follicle aspiration) (GIFT)", 1567, "LAPAROSCOPY:PLUSGAMETEINTRAFALLOPIANTUBETRANSFER(INCLUDESFOLLICLEASPIRATION)(GIFT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1558, "Salpingectomy: Uni- or bilateral or sterilisation for accepted medical reasons", 1558, "SALPINGECTOMY:UNI-ORBILATERALORSTERILISATIONFORACCEPTEDMEDICALREASONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1568, "Laparoscopy: Plus laparoscopic uterosacral nerve ablation", 1568, "LAPAROSCOPY:PLUSLAPAROSCOPICUTEROSACRALNERVEABLATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1546, "Radical abdominal hysterectomy with bilateral lymphadenectomy (Wertheim)", 1546, "RADICALABDOMINALHYSTERECTOMYWITHBILATERALLYMPHADENECTOMY(WERTHEIM)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1544, "Total abdominal hysterectomy: With or without unilateral or bilateral salpingo-oophorectomy - uncomplicated", 1544, "TOTALABDOMINALHYSTERECTOMY:WITHORWITHOUTUNILATERALORBILATERALSALPINGO-OOPHORECTOMY-UNCOMPLICATED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1524, "Hysteroscopy and removal of uterine septum (excluding after-care)", 1524, "HYSTEROSCOPYANDREMOVALOFUTERINESEPTUM(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1525, "Hysteroscopy and division of endometrial and endocervical bands (excluding after-care)", 1525, "HYSTEROSCOPYANDDIVISIONOFENDOMETRIALANDENDOCERVICALBANDS(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1526, "Hysteroscopy and polypectomy (excluding after-care)", 1526, "HYSTEROSCOPYANDPOLYPECTOMY(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1527, "Hysteroscopy and myomectomy (excluding after-care)", 1527, "HYSTEROSCOPYANDMYOMECTOMY(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1528, "Insertion of intra uterine contraceptive device (IUCD) (excluding after-care)", 1528, "INSERTIONOFINTRAUTERINECONTRACEPTIVEDEVICE(IUCD)(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1529, "Dilatation and curettage (D&C) (excluding after-care)", 1529, "DILATATIONANDCURETTAGE(D&C)(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1530, "Fractional dilatation and curettage (D&C) (excluding after-care) ", 1530, "FRACTIONALDILATATIONANDCURETTAGE(D&C)(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1531, "Evacuation of uterus: Incomplete abortion: Before 12 weeks gestation", 1531, "EVACUATIONOFUTERUS:INCOMPLETEABORTION:BEFORE12WEEKSGESTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1532, "Evacuation of uterus, incomplete abortion: After 12 weeks gestation", 1532, "EVACUATIONOFUTERUS,INCOMPLETEABORTION:AFTER12WEEKSGESTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1545, "Total abdominal hysterectomy plus vaginal cuff with or without unilateral or bilateral salpingo-oophorectomy", 1545, "TOTALABDOMINALHYSTERECTOMYPLUSVAGINALCUFFWITHORWITHOUTUNILATERALORBILATERALSALPINGO-OOPHORECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1533, "Termination of pregnancy before 12 weeks", 1533, "TERMINATIONOFPREGNANCYBEFORE12WEEKS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1535, "Evacuation: Missed abortion: After 12 weeks gestation", 1535, "EVACUATION:MISSEDABORTION:AFTER12WEEKSGESTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1536, "Termination of pregnancy after 12 weeks - administration of intra/extra amniotic prostaglandin", 1536, "TERMINATIONOFPREGNANCYAFTER12WEEKS-ADMINISTRATIONOFINTRA/EXTRAAMNIOTICPROSTAGLANDIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1537, "Evacuation hydatidiform mole", 1537, "EVACUATIONHYDATIDIFORMMOLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1538, "Evacuation uterus post-partum", 1538, "EVACUATIONUTERUSPOST-PARTUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1539, "Ventrosuspension", 1539, "VENTROSUSPENSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1540, "Uteroplasty: Strassman", 1540, "UTEROPLASTY:STRASSMAN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1541, "Uteroplasty: Tompkins", 1541, "UTEROPLASTY:TOMPKINS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1542, "Myomectomy", 1542, "MYOMECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1543, "Subtotal hysterectomy with or without unilateral or bilateral salpingo-oophorectomy", 1543, "SUBTOTALHYSTERECTOMYWITHORWITHOUTUNILATERALORBILATERALSALPINGO-OOPHORECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1534, "Evacuation: Missed abortion: Before 12 weeks gestation", 1534, "EVACUATION:MISSEDABORTION:BEFORE12WEEKSGESTATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1569, "Transcervical gamete/embryo intra-fallopian tube transfer (TET/TEST)", 1569, "TRANSCERVICALGAMETE/EMBRYOINTRA-FALLOPIANTUBETRANSFER(TET/TEST)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1570, "Wedge resection of ovaries, unilateral or bilateral", 1570, "WEDGERESECTIONOFOVARIES,UNILATERALORBILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1571, "Removal of ovarian tumour or cyst", 1571, "REMOVALOFOVARIANTUMOURORCYST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1597, "External cephalic version (excluding after-care)", 1597, "EXTERNALCEPHALICVERSION(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1598, "Amniocentesis (excluding after-care)", 1598, "AMNIOCENTESIS(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1599, "Amnioscopy (excluding after-care)", 1599, "AMNIOSCOPY(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1600, "Intra-uterine transfusion of foetus or cordocentesis", 1600, "INTRA-UTERINETRANSFUSIONOFFOETUSORCORDOCENTESIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1601, "Tococardiography - pre-natal and intrapartum (including stress and non-stress test: Own machine) (excluding after-care)", 1601, "TOCOCARDIOGRAPHY-PRE-NATALANDINTRAPARTUM(INCLUDINGSTRESSANDNON-STRESSTEST:OWNMACHINE)(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1602, "Chorion villus sampling (excluding after-care)", 1602, "CHORIONVILLUSSAMPLING(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1603, "Global obstetric care: All inclusive fee that includes all modes of vaginal delivery (excluding Caesarean section) and obstetric care from the commencement of labour until after the post-partum visit (6 weeks visit)", 1603, "GLOBALOBSTETRICCARE:ALLINCLUSIVEFEETHATINCLUDESALLMODESOFVAGINALDELIVERY(EXCLUDINGCAESAREANSECTION)ANDOBSTETRICCAREFROMTHECOMMENCEMENTOFLABOURUNTILAFTERTHEPOST-PARTUMVISIT(6WEEKSVISIT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1604, "Global obstetric care: All inclusive fee for caesarean section and obstetric care from the commencement of labour until after the post-partum visit (6 weeks visit). See modifier 0011 for emergency caesarean section (all hours)", 1604, "GLOBALOBSTETRICCARE:ALLINCLUSIVEFEEFORCAESAREANSECTIONANDOBSTETRICCAREFROMTHECOMMENCEMENTOFLABOURUNTILAFTERTHEPOST-PARTUMVISIT(6WEEKSVISIT).SEEMODIFIER0011FOREMERGENCYCAESAREANSECTION(ALLHOURS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1605, "Intrapartum obstetric care by obstetrician in consultation (excluding after-care)", 1605, "INTRAPARTUMOBSTETRICCAREBYOBSTETRICIANINCONSULTATION(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1596, "Ligation of internal iliac vessels (when not part of another procedure)", 1596, "LIGATIONOFINTERNALILIACVESSELS(WHENNOTPARTOFANOTHERPROCEDURE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1606, "Caesarean-hysterectomy", 1606, "CAESAREAN-HYSTERECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1608, "Abdominal operation for ruptured gravid uterus: Repair", 1608, "ABDOMINALOPERATIONFORRUPTUREDGRAVIDUTERUS:REPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1609, "Visual evoked potentials (VEP): Unilateral", 1609, "VISUALEVOKEDPOTENTIALS(VEP):UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1610, "Visual evoked potentials (VEP): Bilateral", 1610, "VISUALEVOKEDPOTENTIALS(VEP):BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1611, "Electro-retinography (Ganzfeld method): Unilateral", 1611, "ELECTRO-RETINOGRAPHY(GANZFELDMETHOD):UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1612, "Electro-retinography (Ganzfeld method): Bilateral", 1612, "ELECTRO-RETINOGRAPHY(GANZFELDMETHOD):BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1613, "Electro-oculography: Unilateral", 1613, "ELECTRO-OCULOGRAPHY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1614, "Electro-oculography: Bilateral", 1614, "ELECTRO-OCULOGRAPHY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1615, "VEP stable condition (photic drive): Unilateral", 1615, "VEPSTABLECONDITION(PHOTICDRIVE):UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1616, "VEP stable condition (photic drive): Bilateral", 1616, "VEPSTABLECONDITION(PHOTICDRIVE):BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1607, "Post-partum hysterectomy", 1607, "POST-PARTUMHYSTERECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1595, "Implantation hormone pellets (excluding after-care)", 1595, "IMPLANTATIONHORMONEPELLETS(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1594, "Treatment of endometriosis (any method) found as an incidental finding during surgery for unrelated condition (histology required)", 1594, "TREATMENTOFENDOMETRIOSIS(ANYMETHOD)FOUNDASANINCIDENTALFINDINGDURINGSURGERYFORUNRELATEDCONDITION(HISTOLOGYREQUIRED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1593, "Surgery for severe endometriosis (AFS stage 4 - retrovaginal septum): Any method (may not be used with another procedure or as a modifier)", 1593, "SURGERYFORSEVEREENDOMETRIOSIS(AFSSTAGE4-RETROVAGINALSEPTUM):ANYMETHOD(MAYNOTBEUSEDWITHANOTHERPROCEDUREORASAMODIFIER)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1572, "Oophorectomy: Uni- or bilateral", 1572, "OOPHORECTOMY:UNI-ORBILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1573, "Ovarian carcinoma debulking and omentectomy", 1573, "OVARIANCARCINOMADEBULKINGANDOMENTECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1574, "Ovarian carcinoma: Abdominal hysterectomy, bilateral salpingo-oophorectomy, debulking and omentectomy", 1574, "OVARIANCARCINOMA:ABDOMINALHYSTERECTOMY,BILATERALSALPINGO-OOPHORECTOMY,DEBULKINGANDOMENTECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1575, "Exenteration: Anterior Exenteration", 1575, "EXENTERATION:ANTERIOREXENTERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1576, "Exenteration: Posterior Exenteration", 1576, "EXENTERATION:POSTERIOREXENTERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1577, "Exenteration: Total", 1577, "EXENTERATION:TOTAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1578, "Presacral neurectomy", 1578, "PRESACRALNEURECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1579, "Moschowitz operation", 1579, "MOSCHOWITZOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1580, "Laparoscopic vaginal suspension for stress incontinence (item 1807 may not be used together with this item)", 1580, "LAPAROSCOPICVAGINALSUSPENSIONFORSTRESSINCONTINENCE(ITEM1807MAYNOTBEUSEDTOGETHERWITHTHISITEM)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1581, "Operations for stress incontinence: Marshall-Marchetti-Kranz operation", 1581, "OPERATIONSFORSTRESSINCONTINENCE:MARSHALL-MARCHETTI-KRANZOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1582, "Operations for stress incontinence: Urethro-vesicopexy: Abdominal approach", 1582, "OPERATIONSFORSTRESSINCONTINENCE:URETHRO-VESICOPEXY:ABDOMINALAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1583, "Operations for stress incontinence: Burch colposuspension", 1583, "OPERATIONSFORSTRESSINCONTINENCE:BURCHCOLPOSUSPENSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1584, "Operation for stress incontinence: Use of tape", 1584, "OPERATIONFORSTRESSINCONTINENCE:USEOFTAPE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1585, "Operations for stress incontinence: Urethro-vesicopexy: Combined abdominal and vaginal approach", 1585, "OPERATIONSFORSTRESSINCONTINENCE:URETHRO-VESICOPEXY:COMBINEDABDOMINALANDVAGINALAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1586, "Laparotomy", 1586, "LAPAROTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1587, "Removal benign retroperitoneal tumour", 1587, "REMOVALBENIGNRETROPERITONEALTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1588, "Radical removal of malignant retroperitoneal tumour", 1588, "RADICALREMOVALOFMALIGNANTRETROPERITONEALTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1589, "Drainage of pelvic abscess per abdomen", 1589, "DRAINAGEOFPELVICABSCESSPERABDOMEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1590, "Drainage of pelvic abscess per vagina (refer to item 2341)", 1590, "DRAINAGEOFPELVICABSCESSPERVAGINA(REFERTOITEM2341)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1591, "Drainage intra-abdominal abscess: Delayed closure", 1591, "DRAINAGEINTRA-ABDOMINALABSCESS:DELAYEDCLOSURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1592, "Surgery for moderate endometriosis (AFS stages 2 + 3): Any method", 1592, "SURGERYFORMODERATEENDOMETRIOSIS(AFSSTAGES2+3):ANYMETHOD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1523, "Hysteroscopy and D&C (excluding after-care)", 1523, "HYSTEROSCOPYANDD&C(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1233, "Uretero-ureterostomy", 1233, "URETERO-URETEROSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1522, "Hysteroscopy (excluding after-care)", 1522, "HYSTEROSCOPY(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1520, "Endometrial biopsy (excluding after-care)", 1520, "ENDOMETRIALBIOPSY(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1451, "Radical vulvectomy with bilateral lymphdenectomy", 1451, "RADICALVULVECTOMYWITHBILATERALLYMPHDENECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1452, "Radical vulvectomy with bilateral lymphadenectomy, plus deep lymph gland dissection", 1452, "RADICALVULVECTOMYWITHBILATERALLYMPHADENECTOMY,PLUSDEEPLYMPHGLANDDISSECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1453, "Artificial insemination", 1453, "ARTIFICIALINSEMINATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1454, "Examination under anaesthetic when no other procedures are performed (not limited to female patients only) - Stand alone procedure", 1454, "EXAMINATIONUNDERANAESTHETICWHENNOOTHERPROCEDURESAREPERFORMED(NOTLIMITEDTOFEMALEPATIENTSONLY)-STANDALONEPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1455, "Intra uterine insemination", 1455, "INTRAUTERINEINSEMINATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1456, "Simms H?hner test plus wet smear", 1456, "SIMMSH?HNERTESTPLUSWETSMEAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1457, "Destruction of condylomata by chemo-, cryo-, or electrotherapy, or harmonic scalpel: First lesion", 1457, "DESTRUCTIONOFCONDYLOMATABYCHEMO-,CRYO-,ORELECTROTHERAPY,ORHARMONICSCALPEL:FIRSTLESION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1458, "Destruction of condylomata by chemo-, cryo-, or electrotherapy, or harmonic scalpel: Repeat - Limited", 1458, "DESTRUCTIONOFCONDYLOMATABYCHEMO-,CRYO-,ORELECTROTHERAPY,ORHARMONICSCALPEL:REPEAT-LIMITED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1459, "Destruction of condylomata by chemo-, cryo-, or electrotherapy, or harmonic scalpel: Widespread", 1459, "DESTRUCTIONOFCONDYLOMATABYCHEMO-,CRYO-,ORELECTROTHERAPY,ORHARMONICSCALPEL:WIDESPREAD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1450, "Vulvectomy", 1450, "VULVECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1460, "Excision of cysts or tumours", 1460, "EXCISIONOFCYSTSORTUMOURS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1462, "Pudendal nerve block", 1462, "PUDENDALNERVEBLOCK", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1463, "Reconstruction of vagina after atresia", 1463, "RECONSTRUCTIONOFVAGINAAFTERATRESIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1464, "Construction of artificial vagina: Labial fusion", 1464, "CONSTRUCTIONOFARTIFICIALVAGINA:LABIALFUSION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1465, "Construction of artificial vagina: Macindoe type", 1465, "CONSTRUCTIONOFARTIFICIALVAGINA:MACINDOETYPE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1466, "Construction of vagina: Bowel pull-through operation: Two surgeons: Each", 1466, "CONSTRUCTIONOFVAGINA:BOWELPULL-THROUGHOPERATION:TWOSURGEONS:EACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1467, "Vaginal septum removal", 1467, "VAGINALSEPTUMREMOVAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1468, "Vaginal prolapse: Abdominal approach: Sacrocolpopexy with use of mesh", 1468, "VAGINALPROLAPSE:ABDOMINALAPPROACH:SACROCOLPOPEXYWITHUSEOFMESH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1469, "Vaginal prolapse: Abdominal approach: Use of rectus sheath or tape", 1469, "VAGINALPROLAPSE:ABDOMINALAPPROACH:USEOFRECTUSSHEATHORTAPE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1470, "Vaginal prolapse: Vaginal approach: Sacrospinous fixations", 1470, "VAGINALPROLAPSE:VAGINALAPPROACH:SACROSPINOUSFIXATIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1461, "Drainage of vaginal abscess", 1461, "DRAINAGEOFVAGINALABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1471, "Vaginal prolapse: Vaginal approach: Use of mesh or tape", 1471, "VAGINALPROLAPSE:VAGINALAPPROACH:USEOFMESHORTAPE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1449, "Vulvectomy: Partial", 1449, "VULVECTOMY:PARTIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1447, "Operation for enlarging introitus: Fenton plasty", 1447, "OPERATIONFORENLARGINGINTROITUS:FENTONPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1427, "Prostate brachytherapy", 1427, "PROSTATEBRACHYTHERAPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1428, "Removal of tag or polyp", 1428, "REMOVALOFTAGORPOLYP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1429, "Removal of small superficial benign lesions", 1429, "REMOVALOFSMALLSUPERFICIALBENIGNLESIONS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1430, "Biopsy with suture in theatre (excluding after-care)", 1430, "BIOPSYWITHSUTUREINTHEATRE(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1431, "Laser therapy of vulva and/or vagina (colposcopically directed)", 1431, "LASERTHERAPYOFVULVAAND/ORVAGINA(COLPOSCOPICALLYDIRECTED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1432, "Reduction labial hypertrophy", 1432, "REDUCTIONLABIALHYPERTROPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1433, "Removal of extensive benign vulva tumour", 1433, "REMOVALOFEXTENSIVEBENIGNVULVATUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1434, "Secondary perineal repair: Repair second degree tear", 1434, "SECONDARYPERINEALREPAIR:REPAIRSECONDDEGREETEAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1435, "Secondary perineal repair: Repair third degree tear", 1435, "SECONDARYPERINEALREPAIR:REPAIRTHIRDDEGREETEAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1448, "Operation for enlarging introitus: Bilateral Z-plastic", 1448, "OPERATIONFORENLARGINGINTROITUS:BILATERALZ-PLASTIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1436, "Excision of inclusion cyst", 1436, "EXCISIONOFINCLUSIONCYST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1438, "Drainage haematocolpos", 1438, "DRAINAGEHAEMATOCOLPOS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1439, "Clitoris repair for injury: Including skin graft, if required", 1439, "CLITORISREPAIRFORINJURY:INCLUDINGSKINGRAFT,IFREQUIRED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1440, "Clitoral reduction", 1440, "CLITORALREDUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1441, "Denervation or alcohol infiltration vulva (Woodruff)", 1441, "DENERVATIONORALCOHOLINFILTRATIONVULVA(WOODRUFF)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1442, "Vulva: Undercutting skin (ball)", 1442, "VULVA:UNDERCUTTINGSKIN(BALL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1443, "Vulva and introitus: Drainage of abscess", 1443, "VULVAANDINTROITUS:DRAINAGEOFABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1444, "Bartholin gland: Bartholin abscess marsupialisation", 1444, "BARTHOLINGLAND:BARTHOLINABSCESSMARSUPIALISATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1445, "Bartholin gland: Bartholin gland excision", 1445, "BARTHOLINGLAND:BARTHOLINGLANDEXCISION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1446, "Bartholin gland: Bartholin radical excision for malignant lesion", 1446, "BARTHOLINGLAND:BARTHOLINRADICALEXCISIONFORMALIGNANTLESION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1437, "Hymenectomy", 1437, "HYMENECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1472, "Colpotomy: Diagnostic (excluding after-care)", 1472, "COLPOTOMY:DIAGNOSTIC(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1473, "Colpotomy: Therapeutic, with or without sterilisation", 1473, "COLPOTOMY:THERAPEUTIC,WITHORWITHOUTSTERILISATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1474, "Vaginal hysterectomy: Without repair", 1474, "VAGINALHYSTERECTOMY:WITHOUTREPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1500, "Dilation of cervix for stenosis and insertion of prosthesis and Budge suture", 1500, "DILATIONOFCERVIXFORSTENOSISANDINSERTIONOFPROSTHESISANDBUDGESUTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1501, "Punch biopsy (excluding after-care)", 1501, "PUNCHBIOPSY(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1502, "Biopsy during pregnancy (excluding after-care)", 1502, "BIOPSYDURINGPREGNANCY(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1503, "Wedge biopsy: Cervix (excluding after-care)", 1503, "WEDGEBIOPSY:CERVIX(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1504, "Biopsy: Wedge during pregnancy: Cervix (excluding after-care)", 1504, "BIOPSY:WEDGEDURINGPREGNANCY:CERVIX(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1505, "Cone biopsy: Cervix (excluding after-care)", 1505, "CONEBIOPSY:CERVIX(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1506, "Amputation: Cervix", 1506, "AMPUTATION:CERVIX", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1507, "Cervix encirclage: McDonald stitch", 1507, "CERVIXENCIRCLAGE:MCDONALDSTITCH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1508, "Cervix encirclage: Shirodkar suture", 1508, "CERVIXENCIRCLAGE:SHIRODKARSUTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1499, "Laser or harmonic scalpel treatment of the cervix", 1499, "LASERORHARMONICSCALPELTREATMENTOFTHECERVIX", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1509, "Cervix encirclage: Lash", 1509, "CERVIXENCIRCLAGE:LASH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1511, "Cervix: Removal items 2409 and 2411: With anaesthetic in theatre", 1511, "CERVIX:REMOVALITEMS2409AND2411:WITHANAESTHETICINTHEATRE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1512, "Repair of tears: Emmet repair of tears", 1512, "REPAIROFTEARS:EMMETREPAIROFTEARS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1513, "Repair of tears: Sturmdorff repair of tears", 1513, "REPAIROFTEARS:STURMDORFFREPAIROFTEARS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1514, "Extirpation of cervical stump: Vaginal", 1514, "EXTIRPATIONOFCERVICALSTUMP:VAGINAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1515, "Extirpation of cervical stump: Abdominal", 1515, "EXTIRPATIONOFCERVICALSTUMP:ABDOMINAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1516, "Removal of cervical polyps (excluding after-care)", 1516, "REMOVALOFCERVICALPOLYPS(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1517, "Removal of cervical myomata", 1517, "REMOVALOFCERVICALMYOMATA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1518, "Colposcopy (excluding after-care)", 1518, "COLPOSCOPY(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1519, "Embryo transfer", 1519, "EMBRYOTRANSFER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1510, "Cervix encirclage: Removal items 2409 and 2411: Without anaesthetic", 1510, "CERVIXENCIRCLAGE:REMOVALITEMS2409AND2411:WITHOUTANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1498, "Cryo- or electro-cauterisation, or Lletz of cervix (excluding cost of disposable loop electrode): Under anaesthetic", 1498, "CRYO-ORELECTRO-CAUTERISATION,ORLLETZOFCERVIX(EXCLUDINGCOSTOFDISPOSABLELOOPELECTRODE):UNDERANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1497, "Cryo- or electro-cauterisation, or Lletz of cervix (excluding cost of disposable loop electrode): In consulting room", 1497, "CRYO-ORELECTRO-CAUTERISATION,ORLLETZOFCERVIX(EXCLUDINGCOSTOFDISPOSABLELOOPELECTRODE):INCONSULTINGROOM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1496, "Cervix: Canal reconstruction", 1496, "CERVIX:CANALRECONSTRUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1475, "Vaginal hysterectomy: With repair", 1475, "VAGINALHYSTERECTOMY:WITHREPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1476, "Vaginal hysterectomy and repair with unilateral or bilateral salpingo-oophorectomy", 1476, "VAGINALHYSTERECTOMYANDREPAIRWITHUNILATERALORBILATERALSALPINGO-OOPHORECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1477, "Vaginal hysterectomy and repair for total prolapse", 1477, "VAGINALHYSTERECTOMYANDREPAIRFORTOTALPROLAPSE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1478, "Fothergill or Manchester repair operation", 1478, "FOTHERGILLORMANCHESTERREPAIROPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1479, "Repair of recurrent enterocele or vault prolapse (except at the time of hysterectomy)", 1479, "REPAIROFRECURRENTENTEROCELEORVAULTPROLAPSE(EXCEPTATTHETIMEOFHYSTERECTOMY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1480, "Posterior repair alone", 1480, "POSTERIORREPAIRALONE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1481, "Other operations for prolapse: Anterior repair - with or without posterior repair", 1481, "OTHEROPERATIONSFORPROLAPSE:ANTERIORREPAIR-WITHORWITHOUTPOSTERIORREPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1482, "Uterovesical fistula", 1482, "UTEROVESICALFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1483, "Repair of Vesico- or urethro-vaginal fistula", 1483, "REPAIROFVESICO-ORURETHRO-VAGINALFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1484, "Repair of VVF - Obstetric or radiation", 1484, "REPAIROFVVF-OBSTETRICORRADIATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1485, "Closure of uretero-vaginal fistula", 1485, "CLOSUREOFURETERO-VAGINALFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1486, "Closure of uretero-vaginal fistula: Obstetric or radiation", 1486, "CLOSUREOFURETERO-VAGINALFISTULA:OBSTETRICORRADIATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1487, "Closure of recto-vaginal fistula", 1487, "CLOSUREOFRECTO-VAGINALFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1488, "Closure of recto-vaginal fistula: Obstetric or radiation", 1488, "CLOSUREOFRECTO-VAGINALFISTULA:OBSTETRICORRADIATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1489, "Colpocleisis", 1489, "COLPOCLEISIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1490, "Le Fort operation", 1490, "LEFORTOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1491, "Schauta operation", 1491, "SCHAUTAOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1492, "Vaginectomy", 1492, "VAGINECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1493, "Synchronous combined hysterocolpectomy: One or two surgeons - total fee", 1493, "SYNCHRONOUSCOMBINEDHYSTEROCOLPECTOMY:ONEORTWOSURGEONS-TOTALFEE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1494, "Vaginal laceration or trauma: Repair", 1494, "VAGINALLACERATIONORTRAUMA:REPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1495, "Paracervical (pelvis) nerve block (for neck refer to item 3294)", 1495, "PARACERVICAL(PELVIS)NERVEBLOCK(FORNECKREFERTOITEM3294)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1521, "Hysterosalpingogram (excluding after-care)", 1521, "HYSTEROSALPINGOGRAM(EXCLUDINGAFTER-CARE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1232, "Uretero-enterostomy: Bilateral", 1232, "URETERO-ENTEROSTOMY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1243, "Uretero-ileal conduit", 1243, "URETERO-ILEALCONDUIT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1230, "Cutaneous ureterostomy: Bilateral", 1230, "CUTANEOUSURETEROSTOMY:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 968, "Alveolar periosteal or other flaps for arch closure", 968, "ALVEOLARPERIOSTEALOROTHERFLAPSFORARCHCLOSURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 969, "Closure of anterior nasal floor", 969, "CLOSUREOFANTERIORNASALFLOOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 970, "Cleft lip repair: Lip adhesion (cleft lip)", 970, "CLEFTLIPREPAIR:LIPADHESION(CLEFTLIP)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 971, "Local excision of benign lesion of lip", 971, "LOCALEXCISIONOFBENIGNLESIONOFLIP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 972, "Resection for lip malignancy", 972, "RESECTIONFORLIPMALIGNANCY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 973, "Cleft lip repair: Repair unilateral cleft lip (with muscle reconstruction)", 973, "CLEFTLIPREPAIR:REPAIRUNILATERALCLEFTLIP(WITHMUSCLERECONSTRUCTION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 974, "Cleft lip repair: Bilateral cleft lip repair (with muscle reconstruction): One of two stages", 974, "CLEFTLIPREPAIR:BILATERALCLEFTLIPREPAIR(WITHMUSCLERECONSTRUCTION):ONEOFTWOSTAGES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 975, "Cleft lip repair: Repair bilateral cleft lip (with muscle reconstruction): One stage", 975, "CLEFTLIPREPAIR:REPAIRBILATERALCLEFTLIP(WITHMUSCLERECONSTRUCTION):ONESTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 976, "Cleft lip repair: Bilateral cleft lip repair: Second stage", 976, "CLEFTLIPREPAIR:BILATERALCLEFTLIPREPAIR:SECONDSTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 967, "Repair of oronasal fistula (large): Second stage", 967, "REPAIROFORONASALFISTULA(LARGE):SECONDSTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 977, "Cleft lip repair: Total revision of secondary cleft lip deformities", 977, "CLEFTLIPREPAIR:TOTALREVISIONOFSECONDARYCLEFTLIPDEFORMITIES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 979, "Abb? or Estlander type flap (all stages included)", 979, "ABB?ORESTLANDERTYPEFLAP(ALLSTAGESINCLUDED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 980, "Vermilionectomy", 980, "VERMILIONECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 981, "Lip reconstruction following an injury: Direct repair", 981, "LIPRECONSTRUCTIONFOLLOWINGANINJURY:DIRECTREPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 982, "Lip reconstruction following an injury or tumour removal: Flap repair", 982, "LIPRECONSTRUCTIONFOLLOWINGANINJURYORTUMOURREMOVAL:FLAPREPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 983, "Lip reconstruction following an injury or tumour removal: Total reconstruction (first stage)", 983, "LIPRECONSTRUCTIONFOLLOWINGANINJURYORTUMOURREMOVAL:TOTALRECONSTRUCTION(FIRSTSTAGE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 984, "Lip reconstruction following an injury or tumour removal: Subsequent stages (see item 0297)", 984, "LIPRECONSTRUCTIONFOLLOWINGANINJURYORTUMOURREMOVAL:SUBSEQUENTSTAGES(SEEITEM0297)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 985, "Partial glossectomy", 985, "PARTIALGLOSSECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 986, "Local excision of lesion of tongue", 986, "LOCALEXCISIONOFLESIONOFTONGUE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 987, "Wide excision of lesion of palate", 987, "WIDEEXCISIONOFLESIONOFPALATE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 978, "Cleft lip repair: Partial revision of secondary cleft lip deformity", 978, "CLEFTLIPREPAIR:PARTIALREVISIONOFSECONDARYCLEFTLIPDEFORMITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 988, "Radical resection of palate (including skin graft)", 988, "RADICALRESECTIONOFPALATE(INCLUDINGSKINGRAFT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 966, "Repair of oronasal fistula (small) e.g. trapdoor: One stage or first stage", 966, "REPAIROFORONASALFISTULA(SMALL)E.G.TRAPDOOR:ONESTAGEORFIRSTSTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 964, "Velopharyngeal reconstruction with or without pharyngeal flap (static repair)", 964, "VELOPHARYNGEALRECONSTRUCTIONWITHORWITHOUTPHARYNGEALFLAP(STATICREPAIR)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 944, "Radical excision of lymph nodes of axilla", 944, "RADICALEXCISIONOFLYMPHNODESOFAXILLA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 945, "Bone marrow transplantation: Cryopreservation of bone marrow or peripheral blood stem cells", 945, "BONEMARROWTRANSPLANTATION:CRYOPRESERVATIONOFBONEMARROWORPERIPHERALBLOODSTEMCELLS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 946, "Radical excision of lymph nodes of groin: Ilio-inguinal", 946, "RADICALEXCISIONOFLYMPHNODESOFGROIN:ILIO-INGUINAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 947, "Radical excision of lymph nodes of groin: Inguinal", 947, "RADICALEXCISIONOFLYMPHNODESOFGROIN:INGUINAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 948, "Bone marrow transplantation: Plasma/cell separation using designated cell separator equipment (per hour) (specify time used)", 948, "BONEMARROWTRANSPLANTATION:PLASMA/CELLSEPARATIONUSINGDESIGNATEDCELLSEPARATOREQUIPMENT(PERHOUR)(SPECIFYTIMEUSED)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 949, "Retroperitoneal lymph adenectomy including pelvic, aortic and renal nodes", 949, "RETROPERITONEALLYMPHADENECTOMYINCLUDINGPELVIC,AORTICANDRENALNODES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 950, "Bone marrow transplantation: Preparation for extra-corporeal equipment by the medical practitioner for plasma, platelet and leucocyte phaeresis", 950, "BONEMARROWTRANSPLANTATION:PREPARATIONFOREXTRA-CORPOREALEQUIPMENTBYTHEMEDICALPRACTITIONERFORPLASMA,PLATELETANDLEUCOCYTEPHAERESIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 951, "Bone marrow biopsy: By trephine", 951, "BONEMARROWBIOPSY:BYTREPHINE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 952, "Bone marrow biopsy: Simple aspiration of marrow by means of trocar or cannula", 952, "BONEMARROWBIOPSY:SIMPLEASPIRATIONOFMARROWBYMEANSOFTROCARORCANNULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 965, "Repair of oronasal fistula (large) e.g. distant flap", 965, "REPAIROFORONASALFISTULA(LARGE)E.G.DISTANTFLAP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 953, "Staging laparotomy for lymphoma (including splenectomy", 953, "STAGINGLAPAROTOMYFORLYMPHOMA(INCLUDINGSPLENECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 955, "Surgical biopsy of tongue or palate: Under general anaesthetic", 955, "SURGICALBIOPSYOFTONGUEORPALATE:UNDERGENERALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 956, "Surgical biopsy of tongue or palate: Under local anaesthetic", 956, "SURGICALBIOPSYOFTONGUEORPALATE:UNDERLOCALANAESTHETIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 957, "Drainage of intra-oral abscess", 957, "DRAINAGEOFINTRA-ORALABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 958, "Local excision of mucosal lesion of oral cavity", 958, "LOCALEXCISIONOFMUCOSALLESIONOFORALCAVITY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 959, "Resection of malignant lesion of buccal mucosa including radical neck dissection (Commando operation), but not including reconstructive plastic procedure", 959, "RESECTIONOFMALIGNANTLESIONOFBUCCALMUCOSAINCLUDINGRADICALNECKDISSECTION(COMMANDOOPERATION),BUTNOTINCLUDINGRECONSTRUCTIVEPLASTICPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 960, "Complicated reconstruction following major ablative procedure for head and neck cancer", 960, "COMPLICATEDRECONSTRUCTIONFOLLOWINGMAJORABLATIVEPROCEDUREFORHEADANDNECKCANCER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 961, "Cleft palate: Repair primary deformity with or without pharyngoplasty", 961, "CLEFTPALATE:REPAIRPRIMARYDEFORMITYWITHORWITHOUTPHARYNGOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 962, "Cleft palate: Secondary repair", 962, "CLEFTPALATE:SECONDARYREPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 963, "Velopharyngeal reconstruction with myoneuro-vascular transfer (dynamic repair)", 963, "VELOPHARYNGEALRECONSTRUCTIONWITHMYONEURO-VASCULARTRANSFER(DYNAMICREPAIR)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 954, "All dental procedures", 954, "ALLDENTALPROCEDURES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 943, "Radical excision of lymph nodes of neck: Total: Suprahyoid unilateral", 943, "RADICALEXCISIONOFLYMPHNODESOFNECK:TOTAL:SUPRAHYOIDUNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 989, "Excision of ranula", 989, "EXCISIONOFRANULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 991, "Excision of submandibular salivary gland", 991, "EXCISIONOFSUBMANDIBULARSALIVARYGLAND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1016, "Oesophagectomy: Two stage", 1016, "OESOPHAGECTOMY:TWOSTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1017, "Oesophagectomy: Three stage", 1017, "OESOPHAGECTOMY:THREESTAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1018, "Thoraco-abdominal oesophagogastrectomy", 1018, "THORACO-ABDOMINALOESOPHAGOGASTRECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1019, "Hiatus hernia and diaphragmatic hernia repair: With anti-reflux procedure", 1019, "HIATUSHERNIAANDDIAPHRAGMATICHERNIAREPAIR:WITHANTI-REFLUXPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1020, "Hiatus hernia and diaphragmatic hernia repair: With Collis Nissen oesophageal lengthening procedure", 1020, "HIATUSHERNIAANDDIAPHRAGMATICHERNIAREPAIR:WITHCOLLISNISSENOESOPHAGEALLENGTHENINGPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1021, "Private fee: Gastroplasty", 1021, "PRIVATEFEE:GASTROPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1022, "Bochdalek hernia repair in newborn", 1022, "BOCHDALEKHERNIAREPAIRINNEWBORN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1023, "Hiatus hernia and diaphragmatic repair: Revision after previous repair", 1023, "HIATUSHERNIAANDDIAPHRAGMATICREPAIR:REVISIONAFTERPREVIOUSREPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1024, "Heller's operation", 1024, "HELLER'SOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1015, "Oesophageal dilatation", 1015, "OESOPHAGEALDILATATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1025, "Insertion of indwelling oesophageal tube by laparotomy", 1025, "INSERTIONOFINDWELLINGOESOPHAGEALTUBEBYLAPAROTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1231, "Uretero-enterostomy: Unilateral", 1231, "URETERO-ENTEROSTOMY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1028, "Oesophageal motility (6 Channel + pneumograph + pH pull-through)", 1028, "OESOPHAGEALMOTILITY(6CHANNEL+PNEUMOGRAPH+PHPULL-THROUGH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1029, "Removal of benign oesophageal tumours", 1029, "REMOVALOFBENIGNOESOPHAGEALTUMOURS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1030, "Oesophageal motility (4 or 6 channel + pneumograph - ECG + provocative tests for oesophageal spasm vs. myocardial ischaemia)", 1030, "OESOPHAGEALMOTILITY(4OR6CHANNEL+PNEUMOGRAPH-ECG+PROVOCATIVETESTSFOROESOPHAGEALSPASMVS.MYOCARDIALISCHAEMIA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1031, "Excision of intrathoracic oesophageal diverticulum", 1031, "EXCISIONOFINTRATHORACICOESOPHAGEALDIVERTICULUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1032, "24 Hour oesophageal pH studies: Hire fee (Item 0201 applicable for pro-rata of probe: 50 examinations per glass electrode pH probe and 10 examinations per antimone pH probe)", 1032, "24HOUROESOPHAGEALPHSTUDIES:HIREFEE(ITEM0201APPLICABLEFORPRO-RATAOFPROBE:50EXAMINATIONSPERGLASSELECTRODEPHPROBEAND10EXAMINATIONSPERANTIMONEPHPROBE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1033, "24 Hour oesophageal pH studies: Interpretation", 1033, "24HOUROESOPHAGEALPHSTUDIES:INTERPRETATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1034, "Upper gastro-intestinal endoscopy: Hospital equipment", 1034, "UPPERGASTRO-INTESTINALENDOSCOPY:HOSPITALEQUIPMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1035, "Plus polypectomy: ADD to gastro-intestinal endoscopy (Item 1587)", 1035, "PLUSPOLYPECTOMY:ADDTOGASTRO-INTESTINALENDOSCOPY(ITEM1587)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1026, "Oesophageal motility (4 channel + pneumograph)", 1026, "OESOPHAGEALMOTILITY(4CHANNEL+PNEUMOGRAPH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 990, "Excision of sublingual salivary gland", 990, "EXCISIONOFSUBLINGUALSALIVARYGLAND", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1014, "Repair of tracheal oesophageal fistula and oesophageal atresia", 1014, "REPAIROFTRACHEALOESOPHAGEALFISTULAANDOESOPHAGEALATRESIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1012, "Subsequent injection and/or ligation of oesophageal varices (endoscopy inclusive)", 1012, "SUBSEQUENTINJECTIONAND/ORLIGATIONOFOESOPHAGEALVARICES(ENDOSCOPYINCLUSIVE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 992, "Excision of submandibular salivary gland with suprahyoid dissection", 992, "EXCISIONOFSUBMANDIBULARSALIVARYGLANDWITHSUPRAHYOIDDISSECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 993, "Excision of submandibular salivary gland: With radical neck dissection", 993, "EXCISIONOFSUBMANDIBULARSALIVARYGLAND:WITHRADICALNECKDISSECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 994, "Local resection of parotid tumour", 994, "LOCALRESECTIONOFPAROTIDTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 995, "Partial parotidectomy", 995, "PARTIALPAROTIDECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 996, "Total parotidectomy with preservation of facial nerve", 996, "TOTALPAROTIDECTOMYWITHPRESERVATIONOFFACIALNERVE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 997, "Total parotidectomy", 997, "TOTALPAROTIDECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 998, "Parotidectomy: Extracapsular", 998, "PAROTIDECTOMY:EXTRACAPSULAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 999, "Drainage of parotid abscess", 999, "DRAINAGEOFPAROTIDABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1000, "Closure of salivary fistula", 1000, "CLOSUREOFSALIVARYFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1013, "Per-oral small bowel biopsy", 1013, "PER-ORALSMALLBOWELBIOPSY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1001, "Dilatation of salivary duct", 1001, "DILATATIONOFSALIVARYDUCT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1003, "Salivary duct: Meatotomy", 1003, "SALIVARYDUCT:MEATOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1004, "Branchial cyst and/or fistula: Excision", 1004, "BRANCHIALCYSTAND/ORFISTULA:EXCISION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1005, "Excision of cystic hygroma", 1005, "EXCISIONOFCYSTICHYGROMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1006, "Ludwig's Angina: Drainage", 1006, "LUDWIG'SANGINA:DRAINAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1007, "Oesophagoscopy with rigid instrument: First and subsequent", 1007, "OESOPHAGOSCOPYWITHRIGIDINSTRUMENT:FIRSTANDSUBSEQUENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1008, "Oesophagoscopy with dilatation of stricture", 1008, "OESOPHAGOSCOPYWITHDILATATIONOFSTRICTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1009, "Oesophagoscopy with removal of foreign body", 1009, "OESOPHAGOSCOPYWITHREMOVALOFFOREIGNBODY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1010, "Oesophagoscopy with insertion of indwelling oesophageal tube", 1010, "OESOPHAGOSCOPYWITHINSERTIONOFINDWELLINGOESOPHAGEALTUBE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1011, "Injection and/or ligation of oesophageal varices (endoscopy inclusive)", 1011, "INJECTIONAND/ORLIGATIONOFOESOPHAGEALVARICES(ENDOSCOPYINCLUSIVE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1002, "Operative removal of salivary calculus", 1002, "OPERATIVEREMOVALOFSALIVARYCALCULUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 942, "Radical excision of lymph nodes of neck: Total: Unilateral", 942, "RADICALEXCISIONOFLYMPHNODESOFNECK:TOTAL:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 941, "Simple excision of lymph nodes for tuberculosis", 941, "SIMPLEEXCISIONOFLYMPHNODESFORTUBERCULOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 940, "Excision of lymph node for biopsy: Groin", 940, "EXCISIONOFLYMPHNODEFORBIOPSY:GROIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 871, "Mitral valve replacement", 871, "MITRALVALVEREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 872, "Mitral valvuloplasty", 872, "MITRALVALVULOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 873, "Aortic valve replacement", 873, "AORTICVALVEREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 874, "Tricuspid annulo plasty", 874, "TRICUSPIDANNULOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 875, "Double valve replacement", 875, "DOUBLEVALVEREPLACEMENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 876, "Acute dissecting aneurysm repair", 876, "ACUTEDISSECTINGANEURYSMREPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 877, "Aortic arch aneurysm repair utilising deep hypothermal and circulatory arrest", 877, "AORTICARCHANEURYSMREPAIRUTILISINGDEEPHYPOTHERMALANDCIRCULATORYARREST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 878, "Aorta-coronary bypass operation (including interpretation of angiogram): Harvesting of saphenous veins: Unilateral (modifier 0005 not applicable)", 878, "AORTA-CORONARYBYPASSOPERATION(INCLUDINGINTERPRETATIONOFANGIOGRAM):HARVESTINGOFSAPHENOUSVEINS:UNILATERAL(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 879, "Aorta-coronary bypass operation (including interpretation of angiogram): Harvesting of saphenous veins: Bilateral (modifier 0005 not applicable)", 879, "AORTA-CORONARYBYPASSOPERATION(INCLUDINGINTERPRETATIONOFANGIOGRAM):HARVESTINGOFSAPHENOUSVEINS:BILATERAL(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 870, "Fontan type repair", 870, "FONTANTYPEREPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 880, "Aorta-coronary bypass operation (including interpretation of angiogram): Utilizing saphenous veins", 880, "AORTA-CORONARYBYPASSOPERATION(INCLUDINGINTERPRETATIONOFANGIOGRAM):UTILIZINGSAPHENOUSVEINS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 882, "Aorta-coronary bypass operation (including interpretation of angiogram): Additional double arterial implant: Any artery", 882, "AORTA-CORONARYBYPASSOPERATION(INCLUDINGINTERPRETATIONOFANGIOGRAM):ADDITIONALDOUBLEARTERIALIMPLANT:ANYARTERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 883, "Aorta-coronary bypass operation with valve replacement or excision of cardiac aneurysm", 883, "AORTA-CORONARYBYPASSOPERATIONWITHVALVEREPLACEMENTOREXCISIONOFCARDIACANEURYSM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 884, "Cardiac aneurysm", 884, "CARDIACANEURYSM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 885, "Ascending/descending thoracic aortic aneurysm repair", 885, "ASCENDING/DESCENDINGTHORACICAORTICANEURYSMREPAIR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 886, "Arrhythmia surgery", 886, "ARRHYTHMIASURGERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 887, "Cardiac tumour", 887, "CARDIACTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 888, "Insertion and removal of intra-aortic balloon pump (modifier 0005 not applicable)", 888, "INSERTIONANDREMOVALOFINTRA-AORTICBALLOONPUMP(MODIFIER0005NOTAPPLICABLE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 889, "Harvesting of radial artery", 889, "HARVESTINGOFRADIALARTERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 890, "Skin temperature test: Response to reflex heating", 890, "SKINTEMPERATURETEST:RESPONSETOREFLEXHEATING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 881, "Aorta-coronary bypass operation (including interpretation of angiogram): Additional arterial implant: Any artery", 881, "AORTA-CORONARYBYPASSOPERATION(INCLUDINGINTERPRETATIONOFANGIOGRAM):ADDITIONALARTERIALIMPLANT:ANYARTERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 891, "Skin temperature test: Response to reflex cooling", 891, "SKINTEMPERATURETEST:RESPONSETOREFLEXCOOLING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 869, "Creation of atrial septal defect by thoracotomy with or without cardiac bypass", 869, "CREATIONOFATRIALSEPTALDEFECTBYTHORACOTOMYWITHORWITHOUTCARDIACBYPASS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 867, "Total anomalous venous drainage", 867, "TOTALANOMALOUSVENOUSDRAINAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 847, "Heart transplant", 847, "HEARTTRANSPLANT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 848, "Harvesting donor heart", 848, "HARVESTINGDONORHEART", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 849, "Operative implantation of cardiac pacemaker by thoracotomy", 849, "OPERATIVEIMPLANTATIONOFCARDIACPACEMAKERBYTHORACOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 850, "Re-exploration after cardiac surgery", 850, "RE-EXPLORATIONAFTERCARDIACSURGERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 851, "Heart and lung transplant", 851, "HEARTANDLUNGTRANSPLANT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 852, "Harvesting donor heart and lungs", 852, "HARVESTINGDONORHEARTANDLUNGS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 853, "Pericardial drainage", 853, "PERICARDIALDRAINAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 854, "Evaluation of coronary angiogram by cardiothoracic surgeon", 854, "EVALUATIONOFCORONARYANGIOGRAMBYCARDIOTHORACICSURGEON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 855, "Repeat open heart surgery (additional fee above procedure fee)", 855, "REPEATOPENHEARTSURGERY(ADDITIONALFEEABOVEPROCEDUREFEE)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 868, "Aorto-coronary bypass operation as a OpCab procedure (sternotomy with coronary grafting without bypass or hypothermia)", 868, "AORTO-CORONARYBYPASSOPERATIONASAOPCABPROCEDURE(STERNOTOMYWITHCORONARYGRAFTINGWITHOUTBYPASSORHYPOTHERMIA)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 856, "Stand-by fee for coronary angioplasty", 856, "STAND-BYFEEFORCORONARYANGIOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 858, "Atrial septal defect: Osteum secundum", 858, "ATRIALSEPTALDEFECT:OSTEUMSECUNDUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 859, "Atrial septal defect: Sinus venosus or osteum primum", 859, "ATRIALSEPTALDEFECT:SINUSVENOSUSOROSTEUMPRIMUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 860, "Atrial septal defect: Ventricular septal defect", 860, "ATRIALSEPTALDEFECT:VENTRICULARSEPTALDEFECT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 861, "Atrial septal defect: Fallot's tetralogy", 861, "ATRIALSEPTALDEFECT:FALLOT'STETRALOGY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 862, "Atrial septal defect: Pulmonary stenosis", 862, "ATRIALSEPTALDEFECT:PULMONARYSTENOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 863, "Transposition of large vessels (venous repair)", 863, "TRANSPOSITIONOFLARGEVESSELS(VENOUSREPAIR)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 864, "Transposition of great arteries (arterial repair)", 864, "TRANSPOSITIONOFGREATARTERIES(ARTERIALREPAIR)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 865, "Ebstein's Anomaly", 865, "EBSTEIN'SANOMALY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 866, "Aorto-coronary bypass operation as a MidCab procedure (thoracotomy with coronary grafting without bypass or hypothermal)", 866, "AORTO-CORONARYBYPASSOPERATIONASAMIDCABPROCEDURE(THORACOTOMYWITHCORONARYGRAFTINGWITHOUTBYPASSORHYPOTHERMAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 857, "Attendance at other operations or monitoring at bedside, by physician e.g. heart block etc.: Per hour", 857, "ATTENDANCEATOTHEROPERATIONSORMONITORINGATBEDSIDE,BYPHYSICIANE.G.HEARTBLOCKETC.:PERHOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 892, "Cold sensitivity test", 892, "COLDSENSITIVITYTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 893, "Oscillometry test", 893, "OSCILLOMETRYTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 894, "Sweating test", 894, "SWEATINGTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 920, "Femoro-femoral", 920, "FEMORO-FEMORAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 921, "Carotid-subclavian", 921, "CAROTID-SUBCLAVIAN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 922, "Axillo-femoral: (Bifemoral + 50%)", 922, "AXILLO-FEMORAL:(BIFEMORAL+50%)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 923, "Ligation of saphenous vein", 923, "LIGATIONOFSAPHENOUSVEIN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 924, "Placement of Hickman catheter or similar", 924, "PLACEMENTOFHICKMANCATHETERORSIMILAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 925, "Litigation of inferior vena cava: Abdominal", 925, "LITIGATIONOFINFERIORVENACAVA:ABDOMINAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 926, "Umbrella operation on inferior vena cava: Abdominal", 926, "UMBRELLAOPERATIONONINFERIORVENACAVA:ABDOMINAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 927, "Combined procedure for varicose veins: Ligation of saphenous vein stripping, multiple ligation including of perforating veins as indicated: Unilateral", 927, "COMBINEDPROCEDUREFORVARICOSEVEINS:LIGATIONOFSAPHENOUSVEINSTRIPPING,MULTIPLELIGATIONINCLUDINGOFPERFORATINGVEINSASINDICATED:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 928, "Combined procedure for varicose veins: Ligation of saphenous vein stripping, multiple ligation including of perforating veins as indicated: Bilateral", 928, "COMBINEDPROCEDUREFORVARICOSEVEINS:LIGATIONOFSAPHENOUSVEINSTRIPPING,MULTIPLELIGATIONINCLUDINGOFPERFORATINGVEINSASINDICATED:BILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 919, "Distal tibial (ankle region)", 919, "DISTALTIBIAL(ANKLEREGION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 929, "Extensive sub-fascial ligation of perforating veins", 929, "EXTENSIVESUB-FASCIALLIGATIONOFPERFORATINGVEINS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 931, "Compression sclerotherapy of varicose veins: Per injection to a maximum of nine (9) injections per leg (excluding cost of material)", 931, "COMPRESSIONSCLEROTHERAPYOFVARICOSEVEINS:PERINJECTIONTOAMAXIMUMOFNINE(9)INJECTIONSPERLEG(EXCLUDINGCOSTOFMATERIAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 932, "Thrombectomy: Inferior vena cava (Trans-abdominal)", 932, "THROMBECTOMY:INFERIORVENACAVA(TRANS-ABDOMINAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 933, "Thrombectomy: IIlio-femoral", 933, "THROMBECTOMY:IILIO-FEMORAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 934, "Porto-caval shunt", 934, "PORTO-CAVALSHUNT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 935, "Cardiac rehabilitation: Phase II: Exercise rehabilitation: Per patient per 60 minute session with a maximum of 5 patients per group", 935, "CARDIACREHABILITATION:PHASEII:EXERCISEREHABILITATION:PERPATIENTPER60MINUTESESSIONWITHAMAXIMUMOF5PATIENTSPERGROUP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 936, "Cardiac rehabilitation: Phase III: Exercise rehabilitation: Per patient per 60 minute session with a maximum of 10 patients per group", 936, "CARDIACREHABILITATION:PHASEIII:EXERCISEREHABILITATION:PERPATIENTPER60MINUTESESSIONWITHAMAXIMUMOF10PATIENTSPERGROUP", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 937, "Splenectomy (in all cases)", 937, "SPLENECTOMY(INALLCASES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 938, "Splenorrhaphy", 938, "SPLENORRHAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 939, "Excision of lymph node for biopsy: Neck or axilla", 939, "EXCISIONOFLYMPHNODEFORBIOPSY:NECKORAXILLA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 930, "Lesser varicose vein procedures", 930, "LESSERVARICOSEVEINPROCEDURES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 918, "Profundoplasty", 918, "PROFUNDOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 917, "Suture major blood vessel (artery or vein) - trauma (major blood vessels are defined as aorta, innominate artery, carotid artery and vertebral artery, subclavian artery, axillary artery, iliac artery, common femoral and popliteal arteries are included because of popliteal artery. The vertebral and popliteal arteries are included because of the relevant inaccessibility of the arteries and difficult surgical exposure", 917, "SUTUREMAJORBLOODVESSEL(ARTERYORVEIN)-TRAUMA(MAJORBLOODVESSELSAREDEFINEDASAORTA,INNOMINATEARTERY,CAROTIDARTERYANDVERTEBRALARTERY,SUBCLAVIANARTERY,AXILLARYARTERY,ILIACARTERY,COMMONFEMORALANDPOPLITEALARTERIESAREINCLUDEDBECAUSEOFPOPLITEALARTERY.THEVERTEBRALANDPOPLITEALARTERIESAREINCLUDEDBECAUSEOFTHERELEVANTINACCESSIBILITYOFTHEARTERIESANDDIFFICULTSURGICALEXPOSURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 916, "Miscellaneous arterial procedures: Arterial suture: Trauma", 916, "MISCELLANEOUSARTERIALPROCEDURES:ARTERIALSUTURE:TRAUMA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 895, "Transcutaneous oximetry: Transcutaneous oximetry - single site", 895, "TRANSCUTANEOUSOXIMETRY:TRANSCUTANEOUSOXIMETRY-SINGLESITE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 896, "Doppler blood tests", 896, "DOPPLERBLOODTESTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 897, "Doppler arterial pressures", 897, "DOPPLERARTERIALPRESSURES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 898, "Doppler arterial pressures with exercise", 898, "DOPPLERARTERIALPRESSURESWITHEXERCISE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 899, "Doppler segmental pressures and wave forms", 899, "DOPPLERSEGMENTALPRESSURESANDWAVEFORMS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 900, "Venous doppler examination (both limbs)", 900, "VENOUSDOPPLEREXAMINATION(BOTHLIMBS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 901, "Venous plethysmography", 901, "VENOUSPLETHYSMOGRAPHY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 902, "Supra-orbital doppler test", 902, "SUPRA-ORBITALDOPPLERTEST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 903, "Carotid non-invasive complex tests", 903, "CAROTIDNON-INVASIVECOMPLEXTESTS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 904, "Fistula or aneurysm (as for grafting of various arteries)", 904, "FISTULAORANEURYSM(ASFORGRAFTINGOFVARIOUSARTERIES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 905, "Abdominal aorta and iliac artery: Unruptured", 905, "ABDOMINALAORTAANDILIACARTERY:UNRUPTURED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 906, "Abdominal aorta and iliac artery: Ruptured", 906, "ABDOMINALAORTAANDILIACARTERY:RUPTURED", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 907, "Grafting and/or thrombo-endarterectomy for thrombosis", 907, "GRAFTINGAND/ORTHROMBO-ENDARTERECTOMYFORTHROMBOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 908, "Aorta bi-femoral graft, including proximal and distal endarterectomy and preparation for anastomosis", 908, "AORTABI-FEMORALGRAFT,INCLUDINGPROXIMALANDDISTALENDARTERECTOMYANDPREPARATIONFORANASTOMOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 909, "Prosthetic grafting and/or thrombo-endarterectomy", 909, "PROSTHETICGRAFTINGAND/ORTHROMBO-ENDARTERECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 910, "Prosthetic grafting", 910, "PROSTHETICGRAFTING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 911, "Grafting vein: Vein grafting proximal to knee joint", 911, "GRAFTINGVEIN:VEINGRAFTINGPROXIMALTOKNEEJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 912, "Grafting vein: Distal to knee joint", 912, "GRAFTINGVEIN:DISTALTOKNEEJOINT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 913, "Grafting vein: Endarterectomy when not part of another specified procedure", 913, "GRAFTINGVEIN:ENDARTERECTOMYWHENNOTPARTOFANOTHERSPECIFIEDPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 914, "Grafting vein: Carotid endarterectomy", 914, "GRAFTINGVEIN:CAROTIDENDARTERECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 915, "Embolectomy: Peripheral embolectomy transfemoral", 915, "EMBOLECTOMY:PERIPHERALEMBOLECTOMYTRANSFEMORAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1036, "Endoscopic control of gastrointestinal haemorrhage from upper gastrointestinal tract, intestines or large bowel by injection, ligation or application of energy device (endoscopic haemostasis) to be added to gastroscopy (item 1587) or colonoscopy (item 1653)", 1036, "ENDOSCOPICCONTROLOFGASTROINTESTINALHAEMORRHAGEFROMUPPERGASTROINTESTINALTRACT,INTESTINESORLARGEBOWELBYINJECTION,LIGATIONORAPPLICATIONOFENERGYDEVICE(ENDOSCOPICHAEMOSTASIS)TOBEADDEDTOGASTROSCOPY(ITEM1587)ORCOLONOSCOPY(ITEM1653)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1037, "Plus removal of foreign bodies (stomach): ADD to gastro-intestinal endoscopy (Item 1587)", 1037, "PLUSREMOVALOFFOREIGNBODIES(STOMACH):ADDTOGASTRO-INTESTINALENDOSCOPY(ITEM1587)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1027, "Oesophageal substitution (without oesophagectomy) using colon, small bowel or stomach", 1027, "OESOPHAGEALSUBSTITUTION(WITHOUTOESOPHAGECTOMY)USINGCOLON,SMALLBOWELORSTOMACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1039, "Gastrostomy or Gastrotomy", 1039, "GASTROSTOMYORGASTROTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1161, "Internal drainage of pancreatic cyst with Roux-Y", 1161, "INTERNALDRAINAGEOFPANCREATICCYSTWITHROUX-Y", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1162, "Operative pancreatogram: ADD", 1162, "OPERATIVEPANCREATOGRAM:ADD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1163, "Biopsy of pancreas", 1163, "BIOPSYOFPANCREAS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1164, "Pancreatico-duodenectomy", 1164, "PANCREATICO-DUODENECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1165, "Local, partial or subtotal pancreatectomy", 1165, "LOCAL,PARTIALORSUBTOTALPANCREATECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1166, "Distal pancreatectomy with internal drainage", 1166, "DISTALPANCREATECTOMYWITHINTERNALDRAINAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1167, "Pneumo-peritoneum: First", 1167, "PNEUMO-PERITONEUM:FIRST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1168, "Pneumo-peritoneum: Repeat", 1168, "PNEUMO-PERITONEUM:REPEAT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1169, "Peritoneal lavage", 1169, "PERITONEALLAVAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1160, "Endoscopic placement of biliduodenal endoprosthesis: ADD to ERCP (item 1778)", 1160, "ENDOSCOPICPLACEMENTOFBILIDUODENALENDOPROSTHESIS:ADDTOERCP(ITEM1778)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1170, "Diagnostic paracentesis: Abdomen", 1170, "DIAGNOSTICPARACENTESIS:ABDOMEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1172, "ADD to open procedure where procedure was performed through a laparoscope (for anaesthetic refer to modifier 0027)", 1172, "ADDTOOPENPROCEDUREWHEREPROCEDUREWASPERFORMEDTHROUGHALAPAROSCOPE(FORANAESTHETICREFERTOMODIFIER0027)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1173, "Laparotomy", 1173, "LAPAROTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1174, "Radical removal of retro-peritoneal malignant tumours (including sacro-coccygeal and pre-sacral)", 1174, "RADICALREMOVALOFRETRO-PERITONEALMALIGNANTTUMOURS(INCLUDINGSACRO-COCCYGEALANDPRE-SACRAL)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1175, "Suture of burst abdomen", 1175, "SUTUREOFBURSTABDOMEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1176, "Laparotomy for control of surgical haemorrhage", 1176, "LAPAROTOMYFORCONTROLOFSURGICALHAEMORRHAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1177, "Drainage of sub-phrenic abscess", 1177, "DRAINAGEOFSUB-PHRENICABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1178, "Drainage of other intraperitoneal abscess (excluding appendix abscess): Transabdominal", 1178, "DRAINAGEOFOTHERINTRAPERITONEALABSCESS(EXCLUDINGAPPENDIXABSCESS):TRANSABDOMINAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1179, "Drainage of other intraperitoneal abscess (excluding appendix abscess): Transrectal drainage of pelvic abscess", 1179, "DRAINAGEOFOTHERINTRAPERITONEALABSCESS(EXCLUDINGAPPENDIXABSCESS):TRANSRECTALDRAINAGEOFPELVICABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1180, "Inguinal or femoral hernia: Adult", 1180, "INGUINALORFEMORALHERNIA:ADULT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1171, "Therapeutic paracentesis: Abdomen", 1171, "THERAPEUTICPARACENTESIS:ABDOMEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1181, "Inguinal or femoral hernia: Child under 14 years", 1181, "INGUINALORFEMORALHERNIA:CHILDUNDER14YEARS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1159, "Internal drainage of pancreatic cyst", 1159, "INTERNALDRAINAGEOFPANCREATICCYST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1157, "Drainage of pancreatic abscess", 1157, "DRAINAGEOFPANCREATICABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1137, "Harvesting donor hepatectomy", 1137, "HARVESTINGDONORHEPATECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1138, "Suture of liver wound or injury", 1138, "SUTUREOFLIVERWOUNDORINJURY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1139, "Cholecystostomy", 1139, "CHOLECYSTOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1140, "Cholecystectomy", 1140, "CHOLECYSTECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1141, "Cholecystectomy and operative cholangiogram", 1141, "CHOLECYSTECTOMYANDOPERATIVECHOLANGIOGRAM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1142, "With exploration of common bile duct", 1142, "WITHEXPLORATIONOFCOMMONBILEDUCT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1143, "Exploration of common bile duct: Secondary operation", 1143, "EXPLORATIONOFCOMMONBILEDUCT:SECONDARYOPERATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1144, "Reconstruction of common bile duct", 1144, "RECONSTRUCTIONOFCOMMONBILEDUCT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1145, "Resection bile duct tumour with reconstruction", 1145, "RESECTIONBILEDUCTTUMOURWITHRECONSTRUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1158, "Debridement pancreatic necrosis", 1158, "DEBRIDEMENTPANCREATICNECROSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1038, "Augmented histamine test: Gastric intubation with x-ray screening", 1038, "AUGMENTEDHISTAMINETEST:GASTRICINTUBATIONWITHX-RAYSCREENING", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1148, "Transduodenal sphincteroplasty", 1148, "TRANSDUODENALSPHINCTEROPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1149, "Balloon dilatation of common bile duct strictures", 1149, "BALLOONDILATATIONOFCOMMONBILEDUCTSTRICTURES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1150, "Excision choledochal cyst with reconstruction", 1150, "EXCISIONCHOLEDOCHALCYSTWITHRECONSTRUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1151, "Porto-enterostomy for biliary atresia", 1151, "PORTO-ENTEROSTOMYFORBILIARYATRESIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1152, "Endoscopic Retrograde Cholangiopancreatography (ERCP): Endoscopy + catheterisation of pancreas duct or choledochus", 1152, "ENDOSCOPICRETROGRADECHOLANGIOPANCREATOGRAPHY(ERCP):ENDOSCOPY+CATHETERISATIONOFPANCREASDUCTORCHOLEDOCHUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1153, "Endoscopic retrograde removal of stone(s) as for biliary and/or pancreatic duct. ADD to ERCP (item 1778)", 1153, "ENDOSCOPICRETROGRADEREMOVALOFSTONE(S)ASFORBILIARYAND/ORPANCREATICDUCT.ADDTOERCP(ITEM1778)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1154, "Gastric and duodenal intubation", 1154, "GASTRICANDDUODENALINTUBATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1155, "Procedure (excluding laboratory tests)", 1155, "PROCEDURE(EXCLUDINGLABORATORYTESTS)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1156, "Endoscopic Sphincterotomy: ADD to ERCP (item 1778)", 1156, "ENDOSCOPICSPHINCTEROTOMY:ADDTOERCP(ITEM1778)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1147, "Endoscopic placement of a nasobiliary drainage tube: ADD to ERCP (item 1778)", 1147, "ENDOSCOPICPLACEMENTOFANASOBILIARYDRAINAGETUBE:ADDTOERCP(ITEM1778)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1182, "Inguinal hernia: Infant under one year", 1182, "INGUINALHERNIA:INFANTUNDERONEYEAR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1183, "Recurrent inguinal or femoral hernia", 1183, "RECURRENTINGUINALORFEMORALHERNIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1184, "Strangulated hernia or femoral hernia", 1184, "STRANGULATEDHERNIAORFEMORALHERNIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1210, "Percutaneous aspiration cyst: Nephrostomy, pyelostomy", 1210, "PERCUTANEOUSASPIRATIONCYST:NEPHROSTOMY,PYELOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1211, "Operation for renal cyst: Marsupialisation or excision", 1211, "OPERATIONFORRENALCYST:MARSUPIALISATIONOREXCISION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1212, "Closure renal fistula", 1212, "CLOSURERENALFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1213, "Pyeloplasty", 1213, "PYELOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1214, "Pyelostomy", 1214, "PYELOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1215, "Pyelolithotomy", 1215, "PYELOLITHOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1216, "Complicated pyelo-lithotomy (e.g. solitary, ectopic, horse-shoe kidney or secondary operation)", 1216, "COMPLICATEDPYELO-LITHOTOMY(E.G.SOLITARY,ECTOPIC,HORSE-SHOEKIDNEYORSECONDARYOPERATION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1217, "Nephrectomy for Allograft: Living or dead", 1217, "NEPHRECTOMYFORALLOGRAFT:LIVINGORDEAD", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1218, "Perinephric abscess or renal abscess: Drainage", 1218, "PERINEPHRICABSCESSORRENALABSCESS:DRAINAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1209, "Suture renal laceration (renorraphy)", 1209, "SUTURERENALLACERATION(RENORRAPHY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1219, "Aberrant renal vessels: Repositioning with pyeloplasty", 1219, "ABERRANTRENALVESSELS:REPOSITIONINGWITHPYELOPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1221, "Allo transplantation of kidney", 1221, "ALLOTRANSPLANTATIONOFKIDNEY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1222, "Ureterorraphy: Suture of ureter", 1222, "URETERORRAPHY:SUTUREOFURETER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1223, "Ureterorraphy: Lumbar approach", 1223, "URETERORRAPHY:LUMBARAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1224, "Ureteroplasty", 1224, "URETEROPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1225, "Ureterolysis", 1225, "URETEROLYSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1226, "Ureterolysis: Lumbar approach", 1226, "URETEROLYSIS:LUMBARAPPROACH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1227, "Ureterectomy only", 1227, "URETERECTOMYONLY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1228, "Ureterolithotomy", 1228, "URETEROLITHOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1229, "Cutaneous ureterostomy: Unilateral", 1229, "CUTANEOUSURETEROSTOMY:UNILATERAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1220, "Auto transplantation of kidney", 1220, "AUTOTRANSPLANTATIONOFKIDNEY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1208, "Staghorn stone: Surgical", 1208, "STAGHORNSTONE:SURGICAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1207, "Nephrolithotomy: Multiple calculi: Repeat open operation + 25%", 1207, "NEPHROLITHOTOMY:MULTIPLECALCULI:REPEATOPENOPERATION+25%", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1206, "Nephrolithotomy", 1206, "NEPHROLITHOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1185, "Epigastric hernia", 1185, "EPIGASTRICHERNIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1186, "Umbilical hernia: Adult", 1186, "UMBILICALHERNIA:ADULT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1187, "Umbilical hernia: Child under 14 years", 1187, "UMBILICALHERNIA:CHILDUNDER14YEARS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1188, "Incisional hernia", 1188, "INCISIONALHERNIA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1189, "Implantation of mesh or other prosthesis for incisional or ventral hernia repair (List separately in addition to item for the incisional or ventral hernia repair)", 1189, "IMPLANTATIONOFMESHOROTHERPROSTHESISFORINCISIONALORVENTRALHERNIAREPAIR(LISTSEPARATELYINADDITIONTOITEMFORTHEINCISIONALORVENTRALHERNIAREPAIR)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1190, "Repair of omphalocele in new-born (one or more procedures)", 1190, "REPAIROFOMPHALOCELEINNEW-BORN(ONEORMOREPROCEDURES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1191, "Renal biopsy: Per kidney: Open", 1191, "RENALBIOPSY:PERKIDNEY:OPEN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1192, "Renal biopsy: Needle", 1192, "RENALBIOPSY:NEEDLE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1193, "Peritoneal dialysis: First day", 1193, "PERITONEALDIALYSIS:FIRSTDAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1194, "Peritoneal dialysis: Every subsequent day", 1194, "PERITONEALDIALYSIS:EVERYSUBSEQUENTDAY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1195, "Haemodialysis: Per hour or part thereof", 1195, "HAEMODIALYSIS:PERHOURORPARTTHEREOF", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1196, "Haemodialysis: Maximum: Eight hours", 1196, "HAEMODIALYSIS:MAXIMUM:EIGHTHOURS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1197, "Haemodialysis: Thereafter per week", 1197, "HAEMODIALYSIS:THEREAFTERPERWEEK", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1198, "Continuous haemodiafiltration per day in intensive or high care unit", 1198, "CONTINUOUSHAEMODIAFILTRATIONPERDAYININTENSIVEORHIGHCAREUNIT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1199, "Nephrectomy: Primary nephrectomy", 1199, "NEPHRECTOMY:PRIMARYNEPHRECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1200, "Nephrectomy: Secondary nephrectomy", 1200, "NEPHRECTOMY:SECONDARYNEPHRECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1201, "Radical with regional lymph adenectomy for tumour", 1201, "RADICALWITHREGIONALLYMPHADENECTOMYFORTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1202, "Nephrectomy: Partial", 1202, "NEPHRECTOMY:PARTIAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1203, "Symphysiotomy for horse-shoe kidney", 1203, "SYMPHYSIOTOMYFORHORSE-SHOEKIDNEY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1204, "Nephro-ureterectomy", 1204, "NEPHRO-URETERECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1205, "Nephrotomy with drainage nephrostomy", 1205, "NEPHROTOMYWITHDRAINAGENEPHROSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1136, "Liver transplant", 1136, "LIVERTRANSPLANT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1135, "Hepatico-jejunostomy", 1135, "HEPATICO-JEJUNOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1146, "Cholecysto-enterostomy or gastrostomy", 1146, "CHOLECYSTO-ENTEROSTOMYORGASTROSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1133, "Extended right or left hepatectomy", 1133, "EXTENDEDRIGHTORLEFTHEPATECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1064, "Resection of small bowel with enterostomy or anastomosis", 1064, "RESECTIONOFSMALLBOWELWITHENTEROSTOMYORANASTOMOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1065, "Entero-enterostomy or entero-colostomy for bypass", 1065, "ENTERO-ENTEROSTOMYORENTERO-COLOSTOMYFORBYPASS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1066, "Gastrointestinal tract imaging, intraluminal (e.g. video capsule endoscopy): Hire fee (item 0201 applicable for video capsule - disposable single patient use) (Please note: All patients should have had a normal gastroscopy and colonoscopy)", 1066, "GASTROINTESTINALTRACTIMAGING,INTRALUMINAL(E.G.VIDEOCAPSULEENDOSCOPY):HIREFEE(ITEM0201APPLICABLEFORVIDEOCAPSULE-DISPOSABLESINGLEPATIENTUSE)(PLEASENOTE:ALLPATIENTSSHOULDHAVEHADANORMALGASTROSCOPYANDCOLONOSCOPY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1067, "Gastrointestinal tract imaging, intraluminal (e.g. video capsule endoscopy), oesophagus through ileum: Doctor interpretation and report", 1067, "GASTROINTESTINALTRACTIMAGING,INTRALUMINAL(E.G.VIDEOCAPSULEENDOSCOPY),OESOPHAGUSTHROUGHILEUM:DOCTORINTERPRETATIONANDREPORT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1068, "Suture of intestine (small or large): Perforated ulcer, wound or injury", 1068, "SUTUREOFINTESTINE(SMALLORLARGE):PERFORATEDULCER,WOUNDORINJURY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1069, "Closure of intestinal fistula", 1069, "CLOSUREOFINTESTINALFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1070, "Excision of Meckel's diverticulum", 1070, "EXCISIONOFMECKEL'SDIVERTICULUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1071, "Excision of lesion of mesentery", 1071, "EXCISIONOFLESIONOFMESENTERY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1072, "Laparotomy for mesenteric thrombosis", 1072, "LAPAROTOMYFORMESENTERICTHROMBOSIS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1063, "Operation for relief of intestinal obstruction", 1063, "OPERATIONFORRELIEFOFINTESTINALOBSTRUCTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1073, "Total colonoscopy: With hospital equipment (including biopsy)", 1073, "TOTALCOLONOSCOPY:WITHHOSPITALEQUIPMENT(INCLUDINGBIOPSY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1134, "Partial or segmental hepatectomy", 1134, "PARTIALORSEGMENTALHEPATECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1076, "Right or left hemicolectomy or segmental colectomy", 1076, "RIGHTORLEFTHEMICOLECTOMYORSEGMENTALCOLECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1077, "Reconstruction of colon after Hartman?s procedure", 1077, "RECONSTRUCTIONOFCOLONAFTERHARTMAN?SPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1078, "Colotomy: Including removal of tumour or foreign body", 1078, "COLOTOMY:INCLUDINGREMOVALOFTUMOURORFOREIGNBODY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1079, "Total colectomy", 1079, "TOTALCOLECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1080, "Colostomy or ileostomy isolated procedure", 1080, "COLOSTOMYORILEOSTOMYISOLATEDPROCEDURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1081, "Continent ileostomy pouch (all types)", 1081, "CONTINENTILEOSTOMYPOUCH(ALLTYPES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1082, "Colostomy: Closure", 1082, "COLOSTOMY:CLOSURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1083, "Revision of ileostomy pouch", 1083, "REVISIONOFILEOSTOMYPOUCH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1074, "Plus removal of polyps: ADD to colonoscopy (Item 1653)", 1074, "PLUSREMOVALOFPOLYPS:ADDTOCOLONOSCOPY(ITEM1653)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1084, "Total proctocolectomy and ileostomy", 1084, "TOTALPROCTOCOLECTOMYANDILEOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1062, "Intestinal obstruction of the newborn", 1062, "INTESTINALOBSTRUCTIONOFTHENEWBORN", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1060, "Complete test using lactose or lactulose", 1060, "COMPLETETESTUSINGLACTOSEORLACTULOSE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1040, "Gastrotomy with suture repair of bleeding ulcer", 1040, "GASTROTOMYWITHSUTUREREPAIROFBLEEDINGULCER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1041, "Pyloromyotomy (Rammstedt)", 1041, "PYLOROMYOTOMY(RAMMSTEDT)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1042, "Local excision of ulcer or benign neoplasm", 1042, "LOCALEXCISIONOFULCERORBENIGNNEOPLASM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1043, "Vagotomy: Abdominal", 1043, "VAGOTOMY:ABDOMINAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1044, "Vagotomy: Thoracic", 1044, "VAGOTOMY:THORACIC", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1045, "Truncal or selective with drainage procedures", 1045, "TRUNCALORSELECTIVEWITHDRAINAGEPROCEDURES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1046, "Vagotomy and antrectomy", 1046, "VAGOTOMYANDANTRECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1047, "Highly selective vagotomy", 1047, "HIGHLYSELECTIVEVAGOTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1048, "Pyloroplasty", 1048, "PYLOROPLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1061, "Enterotomy or Enterostomy", 1061, "ENTEROTOMYORENTEROSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1049, "Gastroenterostomy", 1049, "GASTROENTEROSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1051, "Partial gastrectomy", 1051, "PARTIALGASTRECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1052, "Total gastrectomy", 1052, "TOTALGASTRECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1053, "Revision of gastrectomy or gastro-enterostomy", 1053, "REVISIONOFGASTRECTOMYORGASTRO-ENTEROSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1054, "Gastro-esophageal operation for portal hypertension (Tanner)", 1054, "GASTRO-ESOPHAGEALOPERATIONFORPORTALHYPERTENSION(TANNER)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1055, "Endoscopic examination of the small bowel beyond the duodenojenunal flexure with biopsy with or without polypectomy with or without arrest of haemorrhage (enteroscopy)", 1055, "ENDOSCOPICEXAMINATIONOFTHESMALLBOWELBEYONDTHEDUODENOJENUNALFLEXUREWITHBIOPSYWITHORWITHOUTPOLYPECTOMYWITHORWITHOUTARRESTOFHAEMORRHAGE(ENTEROSCOPY)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1056, "Duodenal intubation (under X-ray screening)", 1056, "DUODENALINTUBATION(UNDERX-RAYSCREENING)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1057, "Duodenal intubation with biliary drainage after gall bladder stimulation", 1057, "DUODENALINTUBATIONWITHBILIARYDRAINAGEAFTERGALLBLADDERSTIMULATION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1058, "Duodenal intubation: Under 3 years of age", 1058, "DUODENALINTUBATION:UNDER3YEARSOFAGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1059, "H2 breath test (intestines)", 1059, "H2BREATHTEST(INTESTINES)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1050, "Suture of perforated gastric or duodenal ulcer or wound or injury", 1050, "SUTUREOFPERFORATEDGASTRICORDUODENALULCERORWOUNDORINJURY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1085, "Proctocolectomy, ileostomy and ileostomy pouch", 1085, "PROCTOCOLECTOMY,ILEOSTOMYANDILEOSTOMYPOUCH", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1075, "Left-sided colonoscopy", 1075, "LEFT-SIDEDCOLONOSCOPY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1087, "Drainage of appendix abscess", 1087, "DRAINAGEOFAPPENDIXABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1113, "Rubber band ligation of haemorrhoids: Per haemorrhoid", 1113, "RUBBERBANDLIGATIONOFHAEMORRHOIDS:PERHAEMORRHOID", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1114, "Sclerosing injection for haemorrhoids: Per injection", 1114, "SCLEROSINGINJECTIONFORHAEMORRHOIDS:PERINJECTION", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1115, "Haemorrhoidectomy", 1115, "HAEMORRHOIDECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1116, "Drainage of external thrombosed pile", 1116, "DRAINAGEOFEXTERNALTHROMBOSEDPILE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1117, "Multiple procedures (haemorrhoids, fissure, etc.)", 1117, "MULTIPLEPROCEDURES(HAEMORRHOIDS,FISSURE,ETC.)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1118, "Biopsy of ano-rectal wall, for congenital megacolon", 1118, "BIOPSYOFANO-RECTALWALL,FORCONGENITALMEGACOLON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1119, "Excision of anal skin tags", 1119, "EXCISIONOFANALSKINTAGS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1120, "Operation for low imperforate anus", 1120, "OPERATIONFORLOWIMPERFORATEANUS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1086, "Colomyotomy (Reilly operation)", 1086, "COLOMYOTOMY(REILLYOPERATION)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1112, "Operation for fissure-in-ano", 1112, "OPERATIONFORFISSURE-IN-ANO", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1122, "Anal sphincteroplasty for incontinence", 1122, "ANALSPHINCTEROPLASTYFORINCONTINENCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1124, "Closure of recto-vesical fistula", 1124, "CLOSUREOFRECTO-VESICALFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1125, "Closure of recto-urethral fistula", 1125, "CLOSUREOFRECTO-URETHRALFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1126, "Bio-feedback training for faecal incontinence during anorectal manometry performed by doctor", 1126, "BIO-FEEDBACKTRAININGFORFAECALINCONTINENCEDURINGANORECTALMANOMETRYPERFORMEDBYDOCTOR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1127, "Needle biopsy of liver", 1127, "NEEDLEBIOPSYOFLIVER", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1128, "Biopsy of liver by laparotomy", 1128, "BIOPSYOFLIVERBYLAPAROTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1129, "Drainage of liver abscess or cyst", 1129, "DRAINAGEOFLIVERABSCESSORCYST", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1130, "Body composition measured by bio-electrical impedance", 1130, "BODYCOMPOSITIONMEASUREDBYBIO-ELECTRICALIMPEDANCE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1131, "Hemi-hepatectomy: Right", 1131, "HEMI-HEPATECTOMY:RIGHT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1132, "Hemi-hepatectomy: Left", 1132, "HEMI-HEPATECTOMY:LEFT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1123, "Dilation of ano-rectal stricture", 1123, "DILATIONOFANO-RECTALSTRICTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1111, "Excision of fistula-in-ano", 1111, "EXCISIONOFFISTULA-IN-ANO", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1121, "Anoplasty: Y-V-plasty", 1121, "ANOPLASTY:Y-V-PLASTY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1109, "Drainage of ischio-rectal abscess", 1109, "DRAINAGEOFISCHIO-RECTALABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1110, "Excision of pelvi-rectal fistula", 1110, "EXCISIONOFPELVI-RECTALFISTULA", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1089, "Flexible sigmoidoscopy (including rectum and anus): Hospital equipment.", 1089, "FLEXIBLESIGMOIDOSCOPY(INCLUDINGRECTUMANDANUS):HOSPITALEQUIPMENT.", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1090, "Sigmoidoscopy: First and subsequent, with or without biopsy", 1090, "SIGMOIDOSCOPY:FIRSTANDSUBSEQUENT,WITHORWITHOUTBIOPSY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1091, "Plus polypectomy: ADD to sigmoidoscopy (Item 1676)", 1091, "PLUSPOLYPECTOMY:ADDTOSIGMOIDOSCOPY(ITEM1676)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1092, "Sigmoidoscopy with removal of polyps, first and subsequent", 1092, "SIGMOIDOSCOPYWITHREMOVALOFPOLYPS,FIRSTANDSUBSEQUENT", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1093, "Proctoscopy with removal of polyps: First time", 1093, "PROCTOSCOPYWITHREMOVALOFPOLYPS:FIRSTTIME", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1094, "Proctoscopy with removal of polyps: Subsequent times", 1094, "PROCTOSCOPYWITHREMOVALOFPOLYPS:SUBSEQUENTTIMES", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1095, "Endoscopic fulguration of tumour", 1095, "ENDOSCOPICFULGURATIONOFTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1096, "Anterior resection of rectum performed for carcinoma of rectum including excision of any part of proximal colon necessary", 1096, "ANTERIORRESECTIONOFRECTUMPERFORMEDFORCARCINOMAOFRECTUMINCLUDINGEXCISIONOFANYPARTOFPROXIMALCOLONNECESSARY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1097, "Total mesorectal excision with colo-anal anastomosis and defunctioning enterostomy or colostomy", 1097, "TOTALMESORECTALEXCISIONWITHCOLO-ANALANASTOMOSISANDDEFUNCTIONINGENTEROSTOMYORCOLOSTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1088, "Appendicectomy", 1088, "APPENDICECTOMY", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1099, "Abdomino-perineal resection of rectum: Abdominal surgeon", 1099, "ABDOMINO-PERINEALRESECTIONOFRECTUM:ABDOMINALSURGEON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1100, "Abdomino-perineal resection of rectum: Perineal surgeon", 1100, "ABDOMINO-PERINEALRESECTIONOFRECTUM:PERINEALSURGEON", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1101, "Abdomino-perineal resection of rectum: Local excision of rectal tumour (posterior approach)", 1101, "ABDOMINO-PERINEALRESECTIONOFRECTUM:LOCALEXCISIONOFRECTALTUMOUR(POSTERIORAPPROACH)", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1102, "Abdomino-perineal resection of rectum: Combined abdomino-anal pull-through procedure for Hirschsprung's disease, rectal agenesis or tumour", 1102, "ABDOMINO-PERINEALRESECTIONOFRECTUM:COMBINEDABDOMINO-ANALPULL-THROUGHPROCEDUREFORHIRSCHSPRUNG'SDISEASE,RECTALAGENESISORTUMOUR", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1103, "Repair of prolapsed rectum: Abdominal: Roscoe Graham Moskovitz", 1103, "REPAIROFPROLAPSEDRECTUM:ABDOMINAL:ROSCOEGRAHAMMOSKOVITZ", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1104, "Repair of prolapsed rectum: Abdominal: Ivalon sponge", 1104, "REPAIROFPROLAPSEDRECTUM:ABDOMINAL:IVALONSPONGE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1105, "Repair of prolapsed rectum: Abdominal: Perineal", 1105, "REPAIROFPROLAPSEDRECTUM:ABDOMINAL:PERINEAL", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1106, "Repair of prolapsed rectum: Abdominal: Thierisch suture", 1106, "REPAIROFPROLAPSEDRECTUM:ABDOMINAL:THIERISCHSUTURE", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1098, "Perineal resection of rectum", 1098, "PERINEALRESECTIONOFRECTUM", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1107, "Incision and drainage of peri-anal abscess", 1107, "INCISIONANDDRAINAGEOFPERI-ANALABSCESS", 2 });

            migrationBuilder.InsertData(
                table: "MedicalItemPublications",
                columns: new[] { "Id", "Description", "MedicalItemId", "NormalizedDescription", "PublicationId" },
                values: new object[] { 1108, "Drainage of submucous abscess", 1108, "DRAINAGEOFSUBMUCOUSABSCESS", 2 });

            migrationBuilder.UpdateData(
                table: "MedicalItemTypes",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 879, DateTimeKind.Local).AddTicks(7063), new DateTime(2019, 9, 22, 14, 17, 55, 879, DateTimeKind.Local).AddTicks(7098) });

            migrationBuilder.UpdateData(
                table: "MedicalItemTypes",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 879, DateTimeKind.Local).AddTicks(7163), new DateTime(2019, 9, 22, 14, 17, 55, 879, DateTimeKind.Local).AddTicks(7167) });

            migrationBuilder.UpdateData(
                table: "MedicalItemTypes",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 879, DateTimeKind.Local).AddTicks(7171), new DateTime(2019, 9, 22, 14, 17, 55, 879, DateTimeKind.Local).AddTicks(7171) });

            migrationBuilder.UpdateData(
                table: "MedicalItemTypes",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 879, DateTimeKind.Local).AddTicks(7179), new DateTime(2019, 9, 22, 14, 17, 55, 879, DateTimeKind.Local).AddTicks(7182) });

            migrationBuilder.UpdateData(
                table: "MedicalItemTypes",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 879, DateTimeKind.Local).AddTicks(7182), new DateTime(2019, 9, 22, 14, 17, 55, 879, DateTimeKind.Local).AddTicks(7186) });

            migrationBuilder.UpdateData(
                table: "MedicalItemTypes",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 879, DateTimeKind.Local).AddTicks(7190), new DateTime(2019, 9, 22, 14, 17, 55, 879, DateTimeKind.Local).AddTicks(7190) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6815), new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6850) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6896), new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6900) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6904), new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6904) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6907), new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6907) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6911), new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6915) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6915), new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6919) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 7,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6919), new DateTime(2019, 9, 22, 14, 17, 55, 930, DateTimeKind.Local).AddTicks(6923) });

            migrationBuilder.UpdateData(
                table: "PractitionerTypes",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 925, DateTimeKind.Local).AddTicks(9415), new DateTime(2019, 9, 22, 14, 17, 55, 925, DateTimeKind.Local).AddTicks(9441) });

            migrationBuilder.UpdateData(
                table: "PractitionerTypes",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 925, DateTimeKind.Local).AddTicks(9472), new DateTime(2019, 9, 22, 14, 17, 55, 925, DateTimeKind.Local).AddTicks(9472) });

            migrationBuilder.UpdateData(
                table: "PractitionerTypes",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 925, DateTimeKind.Local).AddTicks(9472), new DateTime(2019, 9, 22, 14, 17, 55, 925, DateTimeKind.Local).AddTicks(9476) });

            migrationBuilder.UpdateData(
                table: "PractitionerTypes",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 925, DateTimeKind.Local).AddTicks(9476), new DateTime(2019, 9, 22, 14, 17, 55, 925, DateTimeKind.Local).AddTicks(9476) });

            migrationBuilder.UpdateData(
                table: "PractitionerTypes",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 925, DateTimeKind.Local).AddTicks(9480), new DateTime(2019, 9, 22, 14, 17, 55, 925, DateTimeKind.Local).AddTicks(9480) });

            migrationBuilder.UpdateData(
                table: "PractitionerTypes",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 55, 925, DateTimeKind.Local).AddTicks(9484), new DateTime(2019, 9, 22, 14, 17, 55, 925, DateTimeKind.Local).AddTicks(9484) });

            migrationBuilder.UpdateData(
                table: "TariffTypes",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 306, DateTimeKind.Local).AddTicks(7358), new DateTime(2019, 9, 22, 14, 17, 54, 306, DateTimeKind.Local).AddTicks(7377) });

            migrationBuilder.UpdateData(
                table: "TariffTypes",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 306, DateTimeKind.Local).AddTicks(7435), new DateTime(2019, 9, 22, 14, 17, 54, 306, DateTimeKind.Local).AddTicks(7439) });

            migrationBuilder.UpdateData(
                table: "VatTypes",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 315, DateTimeKind.Local).AddTicks(3851), new DateTime(2019, 9, 22, 14, 17, 54, 315, DateTimeKind.Local).AddTicks(3886) });

            migrationBuilder.UpdateData(
                table: "VatTypes",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 14, 17, 54, 315, DateTimeKind.Local).AddTicks(5892), new DateTime(2019, 9, 22, 14, 17, 54, 315, DateTimeKind.Local).AddTicks(5899) });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 73);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 74);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 75);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 76);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 77);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 78);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 79);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 80);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 81);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 82);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 83);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 84);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 85);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 86);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 87);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 88);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 89);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 90);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 91);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 92);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 93);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 94);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 95);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 96);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 97);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 98);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 99);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 100);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 101);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 102);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 103);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 104);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 105);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 106);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 107);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 108);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 109);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 110);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 111);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 112);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 113);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 114);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 115);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 116);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 117);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 118);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 119);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 120);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 121);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 122);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 123);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 124);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 125);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 126);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 127);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 128);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 129);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 130);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 131);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 132);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 133);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 134);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 135);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 136);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 137);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 138);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 139);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 140);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 141);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 142);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 143);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 144);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 145);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 146);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 147);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 148);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 149);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 150);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 151);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 152);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 153);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 154);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 155);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 156);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 157);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 158);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 159);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 160);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 161);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 162);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 163);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 164);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 165);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 166);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 167);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 168);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 169);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 170);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 171);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 172);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 173);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 174);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 175);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 176);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 177);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 178);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 179);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 180);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 181);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 182);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 183);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 184);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 185);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 186);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 187);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 188);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 189);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 190);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 191);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 192);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 193);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 194);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 195);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 196);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 197);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 198);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 199);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 200);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 201);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 202);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 203);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 204);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 205);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 206);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 207);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 208);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 209);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 210);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 211);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 212);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 213);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 214);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 215);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 216);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 217);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 218);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 219);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 220);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 221);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 222);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 223);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 224);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 225);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 226);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 227);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 228);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 229);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 230);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 231);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 232);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 233);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 234);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 235);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 236);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 237);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 238);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 239);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 240);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 241);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 242);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 243);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 244);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 245);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 246);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 247);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 248);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 249);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 250);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 251);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 252);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 253);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 254);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 255);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 256);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 257);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 258);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 259);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 260);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 261);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 262);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 263);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 264);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 265);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 266);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 267);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 268);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 269);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 270);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 271);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 272);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 273);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 274);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 275);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 276);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 277);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 278);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 279);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 280);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 281);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 282);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 283);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 284);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 285);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 286);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 287);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 288);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 289);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 290);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 291);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 292);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 293);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 294);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 295);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 296);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 297);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 298);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 299);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 300);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 301);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 302);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 303);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 304);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 305);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 306);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 307);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 308);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 309);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 310);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 311);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 312);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 313);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 314);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 315);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 316);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 317);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 318);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 319);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 320);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 321);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 322);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 323);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 324);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 325);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 326);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 327);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 328);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 329);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 330);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 331);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 332);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 333);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 334);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 335);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 336);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 337);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 338);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 339);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 340);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 341);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 342);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 343);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 344);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 345);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 346);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 347);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 348);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 349);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 350);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 351);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 352);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 353);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 354);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 355);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 356);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 357);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 358);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 359);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 360);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 361);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 362);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 363);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 364);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 365);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 366);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 367);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 368);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 369);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 370);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 371);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 372);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 373);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 374);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 375);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 376);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 377);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 378);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 379);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 380);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 381);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 382);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 383);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 384);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 385);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 386);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 387);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 388);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 389);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 390);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 391);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 392);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 393);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 394);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 395);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 396);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 397);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 398);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 399);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 400);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 401);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 402);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 403);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 404);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 405);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 406);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 407);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 408);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 409);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 410);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 411);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 412);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 413);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 414);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 415);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 416);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 417);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 418);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 419);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 420);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 421);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 422);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 423);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 424);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 425);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 426);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 427);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 428);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 429);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 430);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 431);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 432);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 433);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 434);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 435);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 436);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 437);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 438);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 439);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 440);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 441);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 442);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 443);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 444);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 445);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 446);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 447);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 448);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 449);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 450);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 451);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 452);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 453);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 454);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 455);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 456);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 457);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 458);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 459);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 460);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 461);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 462);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 463);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 464);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 465);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 466);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 467);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 468);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 469);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 470);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 471);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 472);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 473);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 474);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 475);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 476);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 477);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 478);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 479);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 480);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 481);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 482);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 483);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 484);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 485);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 486);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 487);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 488);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 489);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 490);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 491);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 492);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 493);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 494);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 495);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 496);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 497);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 498);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 499);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 500);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 501);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 502);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 503);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 504);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 505);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 506);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 507);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 508);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 509);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 510);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 511);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 512);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 513);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 514);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 515);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 516);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 517);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 518);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 519);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 520);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 521);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 522);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 523);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 524);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 525);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 526);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 527);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 528);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 529);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 530);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 531);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 532);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 533);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 534);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 535);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 536);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 537);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 538);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 539);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 540);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 541);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 542);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 543);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 544);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 545);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 546);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 547);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 548);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 549);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 550);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 551);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 552);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 553);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 554);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 555);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 556);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 557);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 558);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 559);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 560);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 561);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 562);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 563);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 564);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 565);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 566);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 567);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 568);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 569);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 570);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 571);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 572);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 573);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 574);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 575);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 576);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 577);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 578);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 579);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 580);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 581);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 582);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 583);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 584);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 585);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 586);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 587);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 588);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 589);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 590);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 591);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 592);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 593);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 594);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 595);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 596);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 597);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 598);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 599);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 600);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 601);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 602);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 603);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 604);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 605);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 606);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 607);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 608);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 609);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 610);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 611);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 612);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 613);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 614);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 615);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 616);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 617);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 618);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 619);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 620);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 621);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 622);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 623);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 624);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 625);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 626);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 627);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 628);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 629);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 630);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 631);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 632);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 633);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 634);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 635);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 636);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 637);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 638);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 639);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 640);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 641);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 642);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 643);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 644);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 645);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 646);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 647);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 648);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 649);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 650);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 651);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 652);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 653);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 654);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 655);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 656);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 657);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 658);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 659);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 660);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 661);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 662);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 663);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 664);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 665);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 666);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 667);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 668);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 669);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 670);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 671);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 672);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 673);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 674);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 675);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 676);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 677);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 678);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 679);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 680);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 681);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 682);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 683);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 684);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 685);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 686);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 687);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 688);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 689);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 690);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 691);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 692);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 693);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 694);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 695);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 696);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 697);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 698);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 699);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 700);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 701);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 702);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 703);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 704);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 705);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 706);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 707);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 708);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 709);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 710);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 711);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 712);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 713);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 714);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 715);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 716);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 717);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 718);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 719);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 720);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 721);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 722);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 723);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 724);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 725);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 726);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 727);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 728);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 729);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 730);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 731);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 732);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 733);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 734);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 735);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 736);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 737);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 738);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 739);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 740);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 741);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 742);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 743);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 744);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 745);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 746);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 747);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 748);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 749);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 750);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 751);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 752);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 753);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 754);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 755);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 756);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 757);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 758);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 759);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 760);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 761);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 762);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 763);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 764);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 765);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 766);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 767);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 768);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 769);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 770);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 771);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 772);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 773);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 774);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 775);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 776);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 777);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 778);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 779);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 780);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 781);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 782);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 783);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 784);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 785);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 786);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 787);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 788);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 789);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 790);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 791);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 792);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 793);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 794);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 795);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 796);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 797);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 798);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 799);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 800);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 801);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 802);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 803);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 804);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 805);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 806);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 807);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 808);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 809);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 810);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 811);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 812);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 813);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 814);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 815);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 816);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 817);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 818);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 819);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 820);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 821);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 822);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 823);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 824);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 825);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 826);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 827);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 828);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 829);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 830);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 831);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 832);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 833);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 834);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 835);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 836);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 837);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 838);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 839);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 840);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 841);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 842);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 843);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 844);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 845);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 846);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 847);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 848);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 849);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 850);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 851);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 852);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 853);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 854);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 855);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 856);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 857);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 858);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 859);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 860);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 861);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 862);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 863);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 864);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 865);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 866);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 867);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 868);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 869);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 870);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 871);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 872);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 873);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 874);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 875);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 876);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 877);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 878);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 879);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 880);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 881);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 882);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 883);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 884);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 885);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 886);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 887);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 888);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 889);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 890);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 891);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 892);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 893);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 894);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 895);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 896);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 897);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 898);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 899);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 900);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 901);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 902);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 903);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 904);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 905);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 906);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 907);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 908);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 909);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 910);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 911);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 912);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 913);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 914);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 915);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 916);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 917);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 918);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 919);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 920);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 921);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 922);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 923);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 924);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 925);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 926);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 927);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 928);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 929);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 930);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 931);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 932);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 933);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 934);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 935);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 936);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 937);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 938);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 939);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 940);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 941);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 942);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 943);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 944);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 945);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 946);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 947);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 948);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 949);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 950);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 951);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 952);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 953);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 954);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 955);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 956);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 957);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 958);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 959);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 960);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 961);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 962);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 963);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 964);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 965);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 966);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 967);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 968);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 969);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 970);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 971);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 972);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 973);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 974);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 975);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 976);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 977);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 978);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 979);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 980);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 981);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 982);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 983);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 984);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 985);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 986);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 987);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 988);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 989);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 990);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 991);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 992);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 993);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 994);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 995);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 996);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 997);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 998);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 999);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1000);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1001);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1002);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1003);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1004);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1005);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1006);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1007);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1008);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1009);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1010);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1011);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1012);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1013);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1014);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1015);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1016);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1017);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1018);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1019);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1020);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1021);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1022);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1023);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1024);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1025);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1026);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1027);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1028);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1029);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1030);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1031);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1032);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1033);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1034);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1035);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1036);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1037);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1038);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1039);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1040);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1041);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1042);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1043);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1044);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1045);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1046);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1047);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1048);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1049);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1050);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1051);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1052);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1053);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1054);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1055);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1056);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1057);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1058);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1059);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1060);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1061);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1062);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1063);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1064);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1065);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1066);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1067);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1068);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1069);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1070);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1071);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1072);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1073);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1074);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1075);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1076);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1077);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1078);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1079);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1080);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1081);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1082);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1083);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1084);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1085);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1086);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1087);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1088);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1089);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1090);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1091);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1092);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1093);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1094);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1095);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1096);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1097);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1098);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1099);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1100);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1101);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1102);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1103);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1104);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1105);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1106);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1107);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1108);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1109);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1110);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1111);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1112);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1113);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1114);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1115);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1116);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1117);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1118);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1119);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1120);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1121);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1122);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1123);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1124);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1125);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1126);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1127);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1128);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1129);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1130);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1131);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1132);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1133);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1134);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1135);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1136);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1137);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1138);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1139);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1140);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1141);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1142);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1143);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1144);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1145);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1146);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1147);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1148);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1149);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1150);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1151);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1152);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1153);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1154);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1155);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1156);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1157);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1158);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1159);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1160);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1161);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1162);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1163);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1164);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1165);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1166);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1167);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1168);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1169);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1170);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1171);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1172);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1173);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1174);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1175);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1176);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1177);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1178);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1179);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1180);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1181);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1182);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1183);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1184);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1185);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1186);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1187);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1188);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1189);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1190);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1191);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1192);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1193);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1194);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1195);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1196);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1197);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1198);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1199);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1200);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1201);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1202);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1203);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1204);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1205);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1206);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1207);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1208);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1209);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1210);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1211);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1212);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1213);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1214);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1215);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1216);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1217);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1218);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1219);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1220);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1221);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1222);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1223);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1224);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1225);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1226);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1227);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1228);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1229);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1230);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1231);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1232);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1233);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1234);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1235);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1236);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1237);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1238);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1239);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1240);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1241);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1242);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1243);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1244);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1245);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1246);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1247);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1248);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1249);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1250);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1251);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1252);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1253);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1254);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1255);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1256);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1257);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1258);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1259);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1260);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1261);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1262);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1263);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1264);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1265);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1266);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1267);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1268);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1269);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1270);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1271);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1272);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1273);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1274);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1275);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1276);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1277);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1278);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1279);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1280);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1281);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1282);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1283);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1284);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1285);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1286);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1287);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1288);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1289);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1290);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1291);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1292);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1293);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1294);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1295);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1296);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1297);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1298);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1299);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1300);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1301);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1302);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1303);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1304);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1305);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1306);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1307);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1308);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1309);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1310);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1311);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1312);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1313);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1314);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1315);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1316);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1317);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1318);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1319);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1320);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1321);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1322);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1323);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1324);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1325);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1326);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1327);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1328);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1329);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1330);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1331);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1332);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1333);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1334);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1335);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1336);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1337);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1338);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1339);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1340);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1341);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1342);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1343);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1344);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1345);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1346);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1347);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1348);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1349);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1350);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1351);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1352);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1353);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1354);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1355);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1356);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1357);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1358);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1359);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1360);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1361);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1362);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1363);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1364);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1365);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1366);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1367);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1368);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1369);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1370);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1371);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1372);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1373);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1374);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1375);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1376);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1377);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1378);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1379);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1380);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1381);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1382);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1383);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1384);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1385);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1386);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1387);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1388);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1389);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1390);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1391);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1392);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1393);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1394);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1395);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1396);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1397);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1398);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1399);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1400);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1401);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1402);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1403);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1404);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1405);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1406);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1407);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1408);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1409);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1410);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1411);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1412);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1413);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1414);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1415);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1416);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1417);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1418);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1419);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1420);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1421);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1422);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1423);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1424);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1425);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1426);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1427);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1428);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1429);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1430);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1431);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1432);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1433);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1434);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1435);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1436);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1437);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1438);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1439);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1440);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1441);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1442);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1443);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1444);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1445);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1446);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1447);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1448);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1449);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1450);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1451);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1452);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1453);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1454);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1455);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1456);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1457);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1458);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1459);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1460);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1461);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1462);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1463);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1464);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1465);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1466);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1467);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1468);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1469);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1470);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1471);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1472);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1473);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1474);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1475);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1476);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1477);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1478);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1479);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1480);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1481);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1482);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1483);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1484);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1485);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1486);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1487);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1488);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1489);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1490);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1491);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1492);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1493);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1494);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1495);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1496);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1497);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1498);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1499);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1500);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1501);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1502);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1503);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1504);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1505);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1506);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1507);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1508);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1509);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1510);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1511);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1512);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1513);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1514);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1515);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1516);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1517);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1518);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1519);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1520);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1521);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1522);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1523);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1524);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1525);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1526);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1527);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1528);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1529);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1530);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1531);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1532);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1533);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1534);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1535);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1536);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1537);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1538);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1539);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1540);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1541);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1542);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1543);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1544);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1545);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1546);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1547);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1548);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1549);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1550);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1551);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1552);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1553);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1554);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1555);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1556);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1557);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1558);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1559);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1560);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1561);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1562);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1563);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1564);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1565);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1566);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1567);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1568);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1569);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1570);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1571);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1572);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1573);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1574);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1575);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1576);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1577);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1578);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1579);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1580);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1581);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1582);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1583);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1584);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1585);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1586);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1587);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1588);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1589);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1590);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1591);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1592);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1593);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1594);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1595);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1596);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1597);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1598);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1599);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1600);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1601);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1602);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1603);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1604);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1605);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1606);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1607);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1608);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1609);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1610);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1611);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1612);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1613);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1614);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1615);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1616);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1617);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1618);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1619);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1620);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1621);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1622);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1623);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1624);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1625);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1626);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1627);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1628);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1629);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1630);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1631);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1632);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1633);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1634);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1635);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1636);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1637);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1638);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1639);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1640);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1641);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1642);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1643);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1644);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1645);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1646);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1647);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1648);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1649);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1650);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1651);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1652);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1653);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1654);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1655);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1656);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1657);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1658);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1659);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1660);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1661);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1662);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1663);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1664);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1665);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1666);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1667);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1668);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1669);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1670);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1671);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1672);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1673);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1674);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1675);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1676);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1677);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1678);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1679);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1680);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1681);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1682);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1683);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1684);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1685);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1686);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1687);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1688);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1689);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1690);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1691);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1692);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1693);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1694);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1695);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1696);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1697);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1698);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1699);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1700);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1701);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1702);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1703);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1704);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1705);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1706);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1707);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1708);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1709);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1710);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1711);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1712);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1713);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1714);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1715);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1716);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1717);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1718);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1719);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1720);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1721);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1722);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1723);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1724);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1725);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1726);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1727);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1728);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1729);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1730);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1731);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1732);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1733);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1734);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1735);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1736);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1737);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1738);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1739);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1740);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1741);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1742);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1743);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1744);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1745);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1746);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1747);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1748);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1749);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1750);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1751);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1752);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1753);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1754);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1755);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1756);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1757);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1758);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1759);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1760);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1761);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1762);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1763);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1764);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1765);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1766);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1767);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1768);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1769);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1770);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1771);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1772);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1773);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1774);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1775);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1776);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1777);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1778);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1779);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1780);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1781);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1782);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1783);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1784);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1785);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1786);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1787);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1788);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1789);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1790);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1791);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1792);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1793);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1794);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1795);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1796);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1797);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1798);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1799);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1800);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1801);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1802);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1803);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1804);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1805);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1806);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1807);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1808);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1809);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1810);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1811);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1812);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1813);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1814);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1815);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1816);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1817);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1818);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1819);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1820);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1821);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1822);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1823);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1824);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1825);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1826);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1827);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1828);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1829);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1830);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1831);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1832);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1833);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1834);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1835);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1836);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1837);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1838);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1839);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1840);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1841);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1842);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1843);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1844);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1845);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1846);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1847);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1848);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1849);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1850);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1851);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1852);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1853);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1854);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1855);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1856);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1857);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1858);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1859);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1860);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1861);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1862);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1863);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1864);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1865);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1866);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1867);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1868);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1869);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1870);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1871);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1872);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1873);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1874);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1875);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1876);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1877);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1878);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1879);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1880);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1881);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1882);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1883);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1884);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1885);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1886);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1887);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1888);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1889);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1890);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1891);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1892);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1893);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1894);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1895);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1896);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1897);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1898);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1899);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1900);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1901);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1902);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1903);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1904);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1905);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1906);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1907);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1908);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1909);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1910);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1911);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1912);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1913);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1914);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1915);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1916);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1917);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1918);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1919);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1920);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1921);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1922);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1923);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1924);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1925);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1926);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1927);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1928);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1929);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1930);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1931);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1932);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1933);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1934);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1935);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1936);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1937);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1938);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1939);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1940);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1941);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1942);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1943);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1944);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1945);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1946);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1947);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1948);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1949);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1950);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1951);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1952);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1953);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1954);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1955);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1956);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1957);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1958);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1959);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1960);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1961);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1962);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1963);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1964);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1965);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1966);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1967);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1968);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1969);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1970);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1971);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1972);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1973);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1974);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1975);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1976);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1977);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1978);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1979);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1980);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1981);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1982);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1983);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1984);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1985);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1986);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1987);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1988);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1989);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1990);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1991);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1992);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1993);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1994);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1995);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1996);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1997);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1998);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 1999);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2000);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2001);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2002);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2003);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2004);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2005);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2006);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2007);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2008);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2009);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2010);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2011);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2012);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2013);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2014);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2015);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2016);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2017);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2018);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2019);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2020);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2021);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2022);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2023);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2024);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2025);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2026);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2027);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2028);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2029);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2030);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2031);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2032);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2033);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2034);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2035);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2036);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2037);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2038);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2039);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2040);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2041);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2042);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2043);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2044);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2045);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2046);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2047);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2048);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2049);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2050);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2051);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2052);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2053);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2054);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2055);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2056);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2057);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2058);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2059);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2060);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2061);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2062);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2063);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2064);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2065);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2066);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2067);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2068);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2069);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2070);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2071);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2072);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2073);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2074);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2075);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2076);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2077);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2078);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2079);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2080);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2081);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2082);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2083);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2084);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2085);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2086);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2087);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2088);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2089);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2090);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2091);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2092);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2093);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2094);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2095);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2096);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2097);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2098);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2099);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2100);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2101);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2102);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2103);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2104);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2105);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2106);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2107);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2108);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2109);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2110);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2111);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2112);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2113);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2114);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2115);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2116);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2117);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2118);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2119);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2120);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2121);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2122);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2123);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2124);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2125);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2126);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2127);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2128);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2129);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2130);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2131);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2132);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2133);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2134);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2135);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2136);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2137);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2138);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2139);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2140);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2141);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2142);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2143);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2144);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2145);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2146);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2147);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2148);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2149);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2150);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2151);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2152);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2153);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2154);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2155);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2156);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2157);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2158);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2159);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2160);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2161);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2162);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2163);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2164);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2165);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2166);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2167);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2168);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2169);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2170);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2171);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2172);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2173);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2174);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2175);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2176);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2177);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2178);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2179);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2180);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2181);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2182);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2183);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2184);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2185);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2186);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2187);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2188);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2189);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2190);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2191);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2192);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2193);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2194);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2195);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2196);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2197);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2198);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2199);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2200);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2201);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2202);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2203);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2204);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2205);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2206);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2207);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2208);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2209);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2210);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2211);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2212);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2213);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2214);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2215);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2216);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2217);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2218);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2219);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2220);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2221);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2222);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2223);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2224);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2225);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2226);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2227);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2228);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2229);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2230);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2231);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2232);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2233);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2234);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2235);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2236);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2237);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2238);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2239);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2240);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2241);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2242);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2243);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2244);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2245);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2246);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2247);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2248);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2249);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2250);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2251);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2252);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2253);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2254);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2255);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2256);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2257);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2258);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2259);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2260);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2261);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2262);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2263);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2264);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2265);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2266);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2267);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2268);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2269);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2270);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2271);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2272);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2273);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2274);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2275);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2276);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2277);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2278);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2279);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2280);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2281);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2282);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2283);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2284);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2285);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2286);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2287);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2288);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2289);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2290);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2291);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2292);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2293);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2294);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2295);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2296);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2297);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2298);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2299);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2300);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2301);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2302);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2303);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2304);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2305);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2306);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2307);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2308);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2309);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2310);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2311);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2312);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2313);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2314);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2315);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2316);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2317);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2318);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2319);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2320);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2321);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2322);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2323);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2324);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2325);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2326);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2327);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2328);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2329);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2330);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2331);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2332);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2333);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2334);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2335);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2336);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2337);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2338);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2339);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2340);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2341);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2342);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2343);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2344);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2345);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2346);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2347);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2348);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2349);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2350);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2351);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2352);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2353);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2354);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2355);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2356);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2357);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2358);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2359);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2360);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2361);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2362);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2363);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2364);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2365);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2366);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2367);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2368);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2369);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2370);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2371);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2372);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2373);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2374);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2375);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2376);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2377);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2378);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2379);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2380);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2381);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2382);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2383);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2384);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2385);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2386);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2387);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2388);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2389);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2390);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2391);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2392);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2393);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2394);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2395);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2396);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2397);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2398);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2399);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2400);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2401);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2402);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2403);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2404);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2405);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2406);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2407);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2408);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2409);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2410);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2411);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2412);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2413);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2414);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2415);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2416);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2417);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2418);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2419);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2420);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2421);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2422);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2423);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2424);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2425);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2426);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2427);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2428);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2429);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2430);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2431);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2432);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2433);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2434);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2435);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2436);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2437);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2438);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2439);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2440);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2441);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2442);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2443);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2444);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2445);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2446);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2447);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2448);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2449);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2450);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2451);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2452);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2453);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2454);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2455);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2456);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2457);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2458);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2459);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2460);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2461);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2462);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2463);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2464);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2465);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2466);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2467);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2468);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2469);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2470);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2471);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2472);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2473);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2474);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2475);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2476);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2477);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2478);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2479);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2480);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2481);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2482);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2483);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2484);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2485);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2486);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2487);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2488);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2489);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2490);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2491);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2492);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2493);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2494);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2495);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2496);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2497);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2498);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2499);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2500);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2501);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2502);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2503);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2504);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2505);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2506);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2507);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2508);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2509);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2510);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2511);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2512);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2513);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2514);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2515);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2516);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2517);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2518);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2519);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2520);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2521);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2522);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2523);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2524);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2525);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2526);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2527);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2528);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2529);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2530);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2531);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2532);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2533);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2534);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2535);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2536);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2537);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2538);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2539);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2540);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2541);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2542);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2543);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2544);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2545);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2546);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2547);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2548);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2549);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2550);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2551);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2552);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2553);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2554);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2555);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2556);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2557);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2558);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2559);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2560);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2561);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2562);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2563);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2564);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2565);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2566);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2567);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2568);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2569);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2570);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2571);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2572);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2573);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2574);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2575);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2576);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2577);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2578);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2579);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2580);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2581);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2582);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2583);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2584);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2585);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2586);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2587);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2588);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2589);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2590);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2591);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2592);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2593);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2594);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2595);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2596);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2597);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2598);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2599);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2600);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2601);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2602);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2603);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2604);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2605);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2606);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2607);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2608);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2609);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2610);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2611);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2612);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2613);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2614);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2615);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2616);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2617);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2618);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2619);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2620);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2621);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2622);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2623);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2624);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2625);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2626);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2627);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2628);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2629);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2630);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2631);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2632);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2633);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2634);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2635);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2636);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2637);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2638);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2639);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2640);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2641);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2642);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2643);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2644);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2645);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2646);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2647);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2648);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2649);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2650);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2651);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2652);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2653);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2654);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2655);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2656);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2657);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2658);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2659);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2660);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2661);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2662);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2663);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2664);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2665);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2666);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2667);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2668);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2669);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2670);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2671);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2672);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2673);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2674);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2675);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2676);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2677);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2678);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2679);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2680);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2681);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2682);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2683);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2684);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2685);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2686);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2687);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2688);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2689);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2690);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2691);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2692);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2693);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2694);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2695);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2696);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2697);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2698);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2699);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2700);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2701);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2702);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2703);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2704);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2705);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2706);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2707);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2708);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2709);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2710);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2711);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2712);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2713);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2714);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2715);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2716);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2717);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2718);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2719);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2720);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2721);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2722);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2723);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2724);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2725);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2726);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2727);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2728);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2729);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2730);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2731);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2732);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2733);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2734);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2735);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2736);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2737);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2738);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2739);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2740);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2741);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2742);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2743);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2744);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2745);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2746);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2747);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2748);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2749);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2750);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2751);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2752);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2753);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2754);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2755);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2756);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2757);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2758);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2759);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2760);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2761);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2762);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2763);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2764);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2765);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2766);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2767);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2768);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2769);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2770);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2771);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2772);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2773);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2774);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2775);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2776);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2777);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2778);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2779);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2780);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2781);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2782);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2783);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2784);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2785);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2786);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2787);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2788);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2789);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2790);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2791);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2792);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2793);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2794);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2795);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2796);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2797);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2798);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2799);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2800);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2801);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2802);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2803);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2804);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2805);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2806);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2807);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2808);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2809);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2810);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2811);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2812);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2813);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2814);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2815);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2816);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2817);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2818);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2819);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2820);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2821);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2822);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2823);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2824);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2825);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2826);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2827);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2828);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2829);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2830);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2831);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2832);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2833);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2834);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2835);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2836);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2837);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2838);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2839);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2840);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2841);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2842);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2843);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2844);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2845);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2846);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2847);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2848);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2849);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2850);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2851);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2852);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2853);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2854);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2855);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2856);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2857);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2858);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2859);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2860);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2861);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2862);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2863);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2864);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2865);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2866);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2867);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2868);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2869);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2870);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2871);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2872);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2873);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2874);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2875);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2876);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2877);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2878);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2879);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2880);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2881);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2882);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2883);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2884);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2885);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2886);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2887);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2888);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2889);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2890);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2891);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2892);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2893);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2894);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2895);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2896);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2897);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2898);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2899);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2900);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2901);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2902);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2903);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2904);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2905);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2906);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2907);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2908);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2909);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2910);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2911);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2912);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2913);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2914);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2915);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2916);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2917);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2918);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2919);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2920);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2921);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2922);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2923);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2924);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2925);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2926);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2927);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2928);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2929);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2930);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2931);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2932);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2933);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2934);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2935);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2936);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2937);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2938);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2939);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2940);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2941);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2942);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2943);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2944);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2945);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2946);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2947);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2948);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2949);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2950);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2951);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2952);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2953);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2954);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2955);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2956);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2957);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2958);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2959);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2960);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2961);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2962);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2963);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2964);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2965);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2966);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2967);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2968);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2969);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2970);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2971);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2972);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2973);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2974);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2975);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2976);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2977);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2978);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2979);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2980);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2981);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2982);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2983);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2984);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2985);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2986);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2987);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2988);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2989);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2990);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2991);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2992);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2993);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2994);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2995);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2996);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2997);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2998);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 2999);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3000);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3001);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3002);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3003);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3004);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3005);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3006);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3007);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3008);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3009);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3010);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3011);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3012);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3013);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3014);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3015);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3016);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3017);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3018);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3019);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3020);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3021);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3022);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3023);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3024);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3025);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3026);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3027);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3028);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3029);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3030);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3031);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3032);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3033);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3034);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3035);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3036);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3037);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3038);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3039);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3040);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3041);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3042);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3043);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3044);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3045);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3046);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3047);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3048);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3049);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3050);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3051);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3052);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3053);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3054);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3055);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3056);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3057);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3058);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3059);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3060);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3061);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3062);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3063);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3064);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3065);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3066);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3067);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3068);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3069);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3070);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3071);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3072);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3073);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3074);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3075);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3076);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3077);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3078);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3079);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3080);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3081);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3082);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3083);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3084);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3085);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3086);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3087);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3088);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3089);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3090);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3091);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3092);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3093);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3094);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3095);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3096);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3097);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3098);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3099);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3100);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3101);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3102);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3103);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3104);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3105);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3106);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3107);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3108);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3109);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3110);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3111);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3112);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3113);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3114);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3115);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3116);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3117);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3118);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3119);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3120);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3121);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3122);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3123);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3124);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3125);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3126);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3127);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3128);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3129);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3130);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3131);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3132);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3133);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3134);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3135);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3136);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3137);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3138);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3139);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3140);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3141);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3142);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3143);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3144);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3145);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3146);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3147);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3148);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3149);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3150);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3151);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3152);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3153);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3154);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3155);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3156);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3157);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3158);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3159);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3160);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3161);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3162);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3163);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3164);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3165);

            migrationBuilder.DeleteData(
                table: "MedicalItemPublications",
                keyColumn: "Id",
                keyValue: 3166);

            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 22, 990, DateTimeKind.Local).AddTicks(3198), new DateTime(2019, 9, 22, 12, 44, 22, 991, DateTimeKind.Local).AddTicks(9212) });

            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 22, 991, DateTimeKind.Local).AddTicks(9967), new DateTime(2019, 9, 22, 12, 44, 22, 991, DateTimeKind.Local).AddTicks(9986) });

            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 22, 992, DateTimeKind.Local).AddTicks(2), new DateTime(2019, 9, 22, 12, 44, 22, 992, DateTimeKind.Local).AddTicks(5) });

            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 22, 992, DateTimeKind.Local).AddTicks(9), new DateTime(2019, 9, 22, 12, 44, 22, 992, DateTimeKind.Local).AddTicks(9) });

            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 22, 992, DateTimeKind.Local).AddTicks(13), new DateTime(2019, 9, 22, 12, 44, 22, 992, DateTimeKind.Local).AddTicks(17) });

            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 22, 992, DateTimeKind.Local).AddTicks(21), new DateTime(2019, 9, 22, 12, 44, 22, 992, DateTimeKind.Local).AddTicks(21) });

            migrationBuilder.UpdateData(
                table: "FileStatuses",
                keyColumn: "Id",
                keyValue: 7,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 22, 992, DateTimeKind.Local).AddTicks(28), new DateTime(2019, 9, 22, 12, 44, 22, 992, DateTimeKind.Local).AddTicks(28) });

            migrationBuilder.UpdateData(
                table: "InvoiceStatuses",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 2, DateTimeKind.Local).AddTicks(2828), new DateTime(2019, 9, 22, 12, 44, 23, 2, DateTimeKind.Local).AddTicks(2863) });

            migrationBuilder.UpdateData(
                table: "InvoiceStatuses",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 2, DateTimeKind.Local).AddTicks(2921), new DateTime(2019, 9, 22, 12, 44, 23, 2, DateTimeKind.Local).AddTicks(2932) });

            migrationBuilder.UpdateData(
                table: "InvoiceStatuses",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 2, DateTimeKind.Local).AddTicks(2951), new DateTime(2019, 9, 22, 12, 44, 23, 2, DateTimeKind.Local).AddTicks(2955) });

            migrationBuilder.UpdateData(
                table: "InvoiceStatuses",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 2, DateTimeKind.Local).AddTicks(2978), new DateTime(2019, 9, 22, 12, 44, 23, 2, DateTimeKind.Local).AddTicks(2978) });

            migrationBuilder.UpdateData(
                table: "InvoiceStatuses",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 2, DateTimeKind.Local).AddTicks(2998), new DateTime(2019, 9, 22, 12, 44, 23, 2, DateTimeKind.Local).AddTicks(3001) });

            migrationBuilder.UpdateData(
                table: "InvoiceStatuses",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 2, DateTimeKind.Local).AddTicks(3021), new DateTime(2019, 9, 22, 12, 44, 23, 2, DateTimeKind.Local).AddTicks(3025) });

            migrationBuilder.UpdateData(
                table: "MedicalItemTypes",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 948, DateTimeKind.Local).AddTicks(7885), new DateTime(2019, 9, 22, 12, 44, 23, 948, DateTimeKind.Local).AddTicks(7916) });

            migrationBuilder.UpdateData(
                table: "MedicalItemTypes",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 948, DateTimeKind.Local).AddTicks(7981), new DateTime(2019, 9, 22, 12, 44, 23, 948, DateTimeKind.Local).AddTicks(7981) });

            migrationBuilder.UpdateData(
                table: "MedicalItemTypes",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 948, DateTimeKind.Local).AddTicks(7985), new DateTime(2019, 9, 22, 12, 44, 23, 948, DateTimeKind.Local).AddTicks(7985) });

            migrationBuilder.UpdateData(
                table: "MedicalItemTypes",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 948, DateTimeKind.Local).AddTicks(7989), new DateTime(2019, 9, 22, 12, 44, 23, 948, DateTimeKind.Local).AddTicks(7993) });

            migrationBuilder.UpdateData(
                table: "MedicalItemTypes",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 948, DateTimeKind.Local).AddTicks(7993), new DateTime(2019, 9, 22, 12, 44, 23, 948, DateTimeKind.Local).AddTicks(7997) });

            migrationBuilder.UpdateData(
                table: "MedicalItemTypes",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 948, DateTimeKind.Local).AddTicks(8000), new DateTime(2019, 9, 22, 12, 44, 23, 948, DateTimeKind.Local).AddTicks(8000) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1492), new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1527) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1688), new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1692) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1696), new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1700) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1700), new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1704) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1704), new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1707) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1711), new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1711) });

            migrationBuilder.UpdateData(
                table: "PractitionerGroupTypes",
                keyColumn: "Id",
                keyValue: 7,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1715), new DateTime(2019, 9, 22, 12, 44, 24, 19, DateTimeKind.Local).AddTicks(1715) });

            migrationBuilder.UpdateData(
                table: "PractitionerTypes",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 24, 11, DateTimeKind.Local).AddTicks(7941), new DateTime(2019, 9, 22, 12, 44, 24, 11, DateTimeKind.Local).AddTicks(7968) });

            migrationBuilder.UpdateData(
                table: "PractitionerTypes",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 24, 11, DateTimeKind.Local).AddTicks(8006), new DateTime(2019, 9, 22, 12, 44, 24, 11, DateTimeKind.Local).AddTicks(8010) });

            migrationBuilder.UpdateData(
                table: "PractitionerTypes",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 24, 11, DateTimeKind.Local).AddTicks(8014), new DateTime(2019, 9, 22, 12, 44, 24, 11, DateTimeKind.Local).AddTicks(8014) });

            migrationBuilder.UpdateData(
                table: "PractitionerTypes",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 24, 11, DateTimeKind.Local).AddTicks(8018), new DateTime(2019, 9, 22, 12, 44, 24, 11, DateTimeKind.Local).AddTicks(8018) });

            migrationBuilder.UpdateData(
                table: "PractitionerTypes",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 24, 11, DateTimeKind.Local).AddTicks(8021), new DateTime(2019, 9, 22, 12, 44, 24, 11, DateTimeKind.Local).AddTicks(8021) });

            migrationBuilder.UpdateData(
                table: "PractitionerTypes",
                keyColumn: "Id",
                keyValue: 6,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 24, 11, DateTimeKind.Local).AddTicks(8025), new DateTime(2019, 9, 22, 12, 44, 24, 11, DateTimeKind.Local).AddTicks(8025) });

            migrationBuilder.UpdateData(
                table: "TariffTypes",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 11, DateTimeKind.Local).AddTicks(9189), new DateTime(2019, 9, 22, 12, 44, 23, 11, DateTimeKind.Local).AddTicks(9219) });

            migrationBuilder.UpdateData(
                table: "TariffTypes",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 11, DateTimeKind.Local).AddTicks(9262), new DateTime(2019, 9, 22, 12, 44, 23, 11, DateTimeKind.Local).AddTicks(9266) });

            migrationBuilder.UpdateData(
                table: "VatTypes",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 18, DateTimeKind.Local).AddTicks(8558), new DateTime(2019, 9, 22, 12, 44, 23, 18, DateTimeKind.Local).AddTicks(8585) });

            migrationBuilder.UpdateData(
                table: "VatTypes",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "CreatedDate", "UpdatedDate" },
                values: new object[] { new DateTime(2019, 9, 22, 12, 44, 23, 19, DateTimeKind.Local).AddTicks(602), new DateTime(2019, 9, 22, 12, 44, 23, 19, DateTimeKind.Local).AddTicks(610) });
        }
    }
}
